{"version":3,"names":[],"mappings":"","sources":["wildebeest-model.js"],"sourcesContent":["/*\n * Copyright(c) 2013-2014 - jocly.com\n *\n * You are allowed to use and modify this source code as long as it is exclusively for use in the Jocly API. \n *\n * Original authors: Jocly team\n *\n */\n \n\n(function() {\n\t\n\tvar geometry = Model.Game.cbBoardGeometryGrid(11,10);\n\t\n\tfunction IIPawnGraph(aGame,side) {\n\t\treturn aGame.cbMergeGraphs(geometry,\n\t\t\t\taGame.cbLongRangeGraph(geometry,[[0,side]],null,aGame.cbConstants.FLAG_MOVE,3), \n\t\t\t\taGame.cbShortRangeGraph(geometry,[[-1,side],[1,side]],null,aGame.cbConstants.FLAG_CAPTURE)\n\t\t\t);\n\t}\n\n\t\n\tModel.Game.cbDefine = function() {\n\t\t\n\t\treturn {\n\t\t\t\n\t\t\tgeometry: geometry,\n\t\t\t\n\t\t\tpieceTypes: {\n\n\t\t\t\t0: {\n\t\t\t\t\tname: 'pawn-w',\n\t\t\t\t\taspect: 'fr-pawn',\n\t\t\t\t\tgraph: this.cbPawnGraph(geometry,1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepCatch: true,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t1: {\n\t\t\t\t\tname: 'ipawn-w',\n\t\t\t\t\taspect: 'fr-pawn',\n\t\t\t\t\tgraph: this.cbInitialPawnGraph(geometry,1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t2: {\n\t\t\t\t\tname: 'pawn-b',\n\t\t\t\t\taspect: 'fr-pawn',\n\t\t\t\t\tgraph: this.cbPawnGraph(geometry,-1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepCatch: true,\n\t\t\t\t},\n\n\t\t\t\t3: {\n\t\t\t\t\tname: 'ipawn-b',\n\t\t\t\t\taspect: 'fr-pawn',\n\t\t\t\t\tgraph: this.cbInitialPawnGraph(geometry,-1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t4: {\n\t\t\t\t\tname: 'knight',\n\t\t\t\t\taspect: 'fr-knight',\n\t\t\t\t\tgraph: this.cbKnightGraph(geometry),\n\t\t\t\t\tvalue: 2.4,\n\t\t\t\t\tabbrev: 'N',\n\t\t\t\t\tinitial: [{s:1,p:1},{s:1,p:9},{s:-1,p:100},{s:-1,p:108}],\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t5: {\n\t\t\t\t\tname: 'bishop',\n\t\t\t\t\taspect: 'fr-bishop',\n\t\t\t\t\tgraph: this.cbBishopGraph(geometry),\n\t\t\t\t\tvalue: 3.3,\n\t\t\t\t\tabbrev: 'B',\n\t\t\t\t\tinitial: [{s:1,p:2},{s:1,p:3},{s:-1,p:106},{s:-1,p:107}],\n\t\t\t\t},\n\n\t\t\t\t6: {\n\t\t\t\t\tname: 'rook',\n\t\t\t\t\taspect: 'fr-rook',\n\t\t\t\t\tgraph: this.cbRookGraph(geometry),\n\t\t\t\t\tvalue: 5,\n\t\t\t\t\tabbrev: 'R',\n\t\t\t\t\tinitial: [{s:1,p:0},{s:1,p:10},{s:-1,p:99},{s:-1,p:109}],\n\t\t\t\t\tcastle: true,\n\t\t\t\t},\n\n\t\t\t\t7: {\n\t\t\t\t\tname: 'queen',\n\t\t\t\t\taspect: 'fr-queen',\n\t\t\t\t\tgraph: this.cbQueenGraph(geometry),\n\t\t\t\t\tvalue: 8.2,\n\t\t\t\t\tabbrev: 'Q',\n\t\t\t\t\tinitial: [{s:1,p:4},{s:-1,p:105}],\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t8: {\n\t\t\t\t\tname: 'king',\n\t\t\t\t\taspect: 'fr-king',\n\t\t\t\t\tisKing: true,\n\t\t\t\t\tgraph: this.cbKingGraph(geometry),\n\t\t\t\t\tabbrev: 'K',\n\t\t\t\t\tinitial: [{s:1,p:5},{s:-1,p:104}],\n\t\t\t\t},\n\t\t\t\t\t\t\t\t          \n\t\t\t\t9: {\n\t            \tname: 'camel',\n\t            \taspect: 'fr-camel',\n\t            \tgraph: this.cbShortRangeGraph(geometry,[[-3,-1],[-3,1],[3,-1],[3,1],[1,3],[1,-3],[-1,3],[-1,-3]]),\n\t            \tvalue: 2.1,\n\t            \tabbrev: 'M',\n\t            \tinitial: [{s:1,p:7},{s:1,p:8},{s:-1,p:101},{s:-1,p:102}],\n\t            },\t\n\n\t\t\t\t10: {\n\t            \tname: 'wildebeest',\n\t            \taspect: 'fr-dragon',\n\t\t\t\tgraph: this.cbShortRangeGraph(geometry,[[-3,-1],[-3,1],[3,-1],[3,1],[1,3],[1,-3],[-1,3],[-1,-3],[-2,-1],[-2,1],[2,-1],[2,1],[1,2],[1,-2],[-1,2],[-1,-2]]),\n\t            \tvalue: 4.7,\n\t            \tabbrev: 'W',\n\t            \tinitial: [{s:1,p:6},{s:-1,p:103}],\n\t            },\n\t            \n\t\t\t\t11: {\n\t\t\t\t\tname: 'iipawn-w',\n\t\t\t\t\taspect: 'fr-pawn',\n\t\t\t\t\tgraph: IIPawnGraph(this,1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tinitial: [{s:1,p:11},{s:1,p:12},{s:1,p:13},{s:1,p:14},{s:1,p:15},{s:1,p:16},{s:1,p:17},{s:1,p:18},{s:1,p:19},{s:1,p:20},{s:1,p:21}],\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\n\t\t\t\t12: {\n\t\t\t\t\tname: 'iipawn-b',\n\t\t\t\t\taspect: 'fr-pawn',\n\t\t\t\t\tgraph: IIPawnGraph(this,-1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tinitial: [{s:-1,p:88},{s:-1,p:89},{s:-1,p:90},{s:-1,p:91},{s:-1,p:92},{s:-1,p:93},{s:-1,p:94},{s:-1,p:95},{s:-1,p:96},{s:-1,p:97},{s:-1,p:98}],\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t\n\t\t\tpromote: function(aGame,piece,move) {\n\t\t\t\tif(piece.t==11 || piece.t==12) {\n\t\t\t\t\t//var dc=Math.abs(geometry.C(move.t)-geometry.C(move.f));\n\t\t\t\t\tvar dr=Math.abs(geometry.R(move.t)-geometry.R(move.f));\n\t\t\t\t\tif(dr==1)\n\t\t\t\t\t\treturn [piece.t==11?1:3];\n\t\t\t\t\telse\n\t\t\t\t\t\treturn [piece.t==11?0:2];\n\t\t\t\t}\n\t\t\t\tif(piece.t==1)\n\t\t\t\t\treturn [0];\n\t\t\t\telse if(piece.t==3)\n\t\t\t\t\treturn [2];\n\t\t\t\telse if(piece.t==0 && geometry.R(move.t)==9)\n\t\t\t\t\treturn [7,10];\n\t\t\t\telse if(piece.t==2 && geometry.R(move.t)==0)\n\t\t\t\t\treturn [7,10];\n\t\t\t\treturn [];\n\t\t\t},\n\t\t\t\n\t\t\tcastle: {\n\t\t\t\t\"5/0\": {k:[4],r:[1,2,3,4,5],n:\"O-O-O\"},\n\t\t\t\t\"5/10\": {k:[6],r:[9,8,7,6,5],n:\"O-O\"},\n\t\t\t\t\"104/99\": {k:[103],r:[100,101,102,103,104],n:\"O-O-O\"},\n\t\t\t\t\"104/109\": {k:[105],r:[108,107,106,105,104],n:\"O-O\"},\n\t\t\t},\n\t\t\t\n\t\t};\n\t}\n\n\tvar extraCastle={0:{k:[3,2,1],r:[4,3,2]},10:{k:[7,8,9],r:[6,7,8]},\n\t\t99:{k:[102,101,100],r:[103,102,101]},109:{k:[106,107,108],r:[105,106,107]}\n\t}\n\t\n\tvar SuperModelBoardGenerateMoves=Model.Board.GenerateMoves;\n\tModel.Board.GenerateMoves = function(aGame) {\n\t\tSuperModelBoardGenerateMoves.apply(this,arguments); // call regular GenerateMoves method\n\t\tif(!this.castled[this.mWho]) {\n\t\t\tfor(var i=0;i<this.mMoves.length;i++) {\n\t\t\t\tvar move=this.mMoves[i];\n\t\t\t\tvar extra = extraCastle[move.cg];\n\t\t\t\tif(extra) {\n\t\t\t\t\tvar kIndex=this.board[move.f];\n\t\t\t\t\tvar kPiece=this.pieces[kIndex];\n\t\t\t\t\tthis.board[move.f]=-1;\n\t\t\t\t\tthis.board[extra.k[0]]=kIndex;\n\t\t\t\t\tkPiece.p=extra.k[0];\n\t\t\t\t\t\n\t\t\t\t\tvar inCheck=this.cbGetAttackers(aGame,kPiece.p,this.mWho,true).length>0;\n\t\t\t\t\tif(!inCheck) {\n\t\t\t\t\t\tvar rIndex=this.board[move.cg];\n\t\t\t\t\t\tvar rPiece=this.pieces[rIndex];\n\t\t\t\t\t\tthis.board[move.cg]=-1;\n\t\t\t\t\t\tthis.board[extra.r[0]]=rIndex;\n\t\t\t\t\t\trPiece.p=extra.r[0];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar oppInCheck=this.cbGetAttackers(aGame,this.kings[-this.mWho],-this.mWho,true).length>0;\n\t\t\t\t\t\tthis.mMoves.push({\n\t\t\t\t\t\t\tf: move.f,\n\t\t\t\t\t\t\tt: extra.k[0],\n\t\t\t\t\t\t\tc: null,\n\t\t\t\t\t\t\tck: oppInCheck,\n\t\t\t\t\t\t\ta: 'K',\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.board[move.f]=kIndex;\n\t\t\t\t\t\tthis.board[extra.k[0]]=-1;\n\t\t\t\t\t\tthis.board[move.cg]=rIndex;\n\t\t\t\t\t\tthis.board[extra.r[0]]=-1;\n\n\t\t\t\t\t\tthis.board[move.f]=-1;\n\t\t\t\t\t\tthis.board[extra.k[1]]=kIndex;\n\t\t\t\t\t\tkPiece.p=extra.k[1];\n\n\t\t\t\t\t\tinCheck=this.cbGetAttackers(aGame,kPiece.p,this.mWho,true).length>0;\n\t\t\t\t\t\tif(!inCheck) {\n\t\t\t\t\t\t\tthis.board[move.cg]=-1;\n\t\t\t\t\t\t\tthis.board[extra.r[1]]=rIndex;\n\t\t\t\t\t\t\trPiece.p=extra.r[1];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toppInCheck=this.cbGetAttackers(aGame,this.kings[-this.mWho],-this.mWho,true).length>0;\n\t\t\t\t\t\t\tthis.mMoves.push({\n\t\t\t\t\t\t\t\tf: move.f,\n\t\t\t\t\t\t\t\tt: extra.k[1],\n\t\t\t\t\t\t\t\tc: null,\n\t\t\t\t\t\t\t\tck: oppInCheck,\n\t\t\t\t\t\t\t\ta: 'K',\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t/*---*/\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.board[move.f]=-1;\n\t\t\t\t\t\t\tthis.board[extra.k[2]]=kIndex;\n\t\t\t\t\t\t\tkPiece.p=extra.k[2];\n\n\t\t\t\t\t\t\tinCheck=this.cbGetAttackers(aGame,kPiece.p,this.mWho,true).length>0;\n\t\t\t\t\t\t\tif(!inCheck) {\n\t\t\t\t\t\t\t\tthis.board[move.cg]=-1;\n\t\t\t\t\t\t\t\tthis.board[extra.r[2]]=rIndex;\n\t\t\t\t\t\t\t\trPiece.p=extra.r[2];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\toppInCheck=this.cbGetAttackers(aGame,this.kings[-this.mWho],-this.mWho,true).length>0;\n\t\t\t\t\t\t\t\tthis.mMoves.push({\n\t\t\t\t\t\t\t\t\tf: move.f,\n\t\t\t\t\t\t\t\t\tt: extra.k[2],\n\t\t\t\t\t\t\t\t\tc: null,\n\t\t\t\t\t\t\t\t\tck: oppInCheck,\n\t\t\t\t\t\t\t\t\ta: 'K',\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tthis.board[move.cg]=rIndex;\n\t\t\t\t\t\t\t\tthis.board[extra.r[2]]=-1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.board[move.f]=kIndex;\n\t\t\t\t\t\t\tthis.board[extra.k[2]]=-1;\n\n\t\t\t\t\t\t\t/*---*/\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.board[move.cg]=rIndex;\n\t\t\t\t\t\t\tthis.board[extra.r[1]]=-1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.board[move.f]=kIndex;\n\t\t\t\t\t\tthis.board[extra.k[1]]=-1;\n\n\t\t\t\t\t\tthis.board[move.cg]=rIndex;\n\t\t\t\t\t\trPiece.p=move.cg;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tthis.board[move.f]=kIndex;\n\t\t\t\t\tkPiece.p=move.f;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tModel.Game.wbExtraCastleRook={ // rook identification and displacement from king destination\n\t\t1:{r0:0,r:2},2:{r0:0,r:3},3:{r0:0,r:4},\n\t\t7:{r0:10,r:6},8:{r0:10,r:7},9:{r0:10,r:8},\n\t\t100:{r0:99,r:101},101:{r0:99,r:102},102:{r0:99,r:103},\n\t\t105:{r0:109,r:104},106:{r0:109,r:105},107:{r0:109,r:106}\n\t}\n\t\n\tvar SuperModelBoardApplyMove=Model.Board.ApplyMove;\n\tModel.Board.ApplyMove = function(aGame,move) {\n\t\tif(move.a=='K' && !this.castled[this.mWho] && move.cg===undefined) {\n\t\t\tvar dc=Math.abs(geometry.C(move.t)-geometry.C(move.f));\n\t\t\tif(dc>=2) {\n\t\t\t\tvar kPiece=this.pieces[this.board[move.f]];\n\t\t\t\tthis.board[move.f]=-1;\n\t\t\t\tthis.zSign=aGame.zobrist.update(this.zSign,\"board\",kPiece.i,move.f);\n\t\t\t\tthis.board[move.t]=kPiece.i;\n\t\t\t\tthis.zSign=aGame.zobrist.update(this.zSign,\"board\",kPiece.i,move.t);\n\t\t\t\tkPiece.p=move.t;\n\t\t\t\tthis.kings[this.mWho]=kPiece.p;\n\t\t\t\tvar extra=aGame.wbExtraCastleRook[move.t];\n\t\t\t\tvar rPiece=this.pieces[this.board[extra.r0]];\n\t\t\t\tthis.board[extra.r0]=-1;\n\t\t\t\tthis.zSign=aGame.zobrist.update(this.zSign,\"board\",rPiece.i,extra.r0);\n\t\t\t\tthis.board[extra.r]=rPiece.i;\n\t\t\t\tthis.zSign=aGame.zobrist.update(this.zSign,\"board\",rPiece.i,extra.r);\n\t\t\t\trPiece.p=extra.r;\t\t\t\t\n\t\t\t\tthis.check=!!move.ck;\n\t\t\t\tthis.castled[this.mWho]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSuperModelBoardApplyMove.apply(this,arguments);\n\t}\n\n\t\n})();"],"file":"wildebeest-chess-model.js"}