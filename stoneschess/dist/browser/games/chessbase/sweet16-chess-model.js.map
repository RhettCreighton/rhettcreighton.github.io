{"version":3,"names":[],"mappings":"","sources":["sweet16-model.js"],"sourcesContent":["\n(function() {\n\n\tvar geometry = Model.Game.cbBoardGeometryGrid(16,16);\n\n\tModel.Game.cbDefine = function() {\n\n\t\treturn {\n\n\t\t\tgeometry: geometry,\n\n\t\t\tpieceTypes: {\n\n\t\t\t\t0: {\n\t\t\t\t\tname: 'pawn-w',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbPawnGraph(geometry,1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepCatch: true,\n\t\t\t\t\tinitial: [{s:1,p:39},{s:1,p:40}],\n\t\t\t\t},\n\n\t\t\t\t1: {\n\t\t\t\t\tname: 'ipawn-w',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbInitialPawnGraph(geometry,1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tinitial: [{s:1,p:16},{s:1,p:17},{s:1,p:18},{s:1,p:19},{s:1,p:20},{s:1,p:21},{s:1,p:22},{s:1,p:25},{s:1,p:26},{s:1,p:27},{s:1,p:28},{s:1,p:29},{s:1,p:30},{s:1,p:31}],\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\n\t\t\t\t2: {\n\t\t\t\t\tname: 'pawn-b',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbPawnGraph(geometry,-1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tepCatch: true,\n\t\t\t\t\tinitial: [{s:-1,p:215},{s:-1,p:216}],\n\t\t\t\t},\n\n\t\t\t\t3: {\n\t\t\t\t\tname: 'ipawn-b',\n\t\t\t\t\taspect: 'pawn',\n\t\t\t\t\tgraph: this.cbInitialPawnGraph(geometry,-1),\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tabbrev: '',\n\t\t\t\t\tfenAbbrev: 'P',\n\t\t\t\t\tinitial: [{s:-1,p:224},{s:-1,p:225},{s:-1,p:226},{s:-1,p:227},{s:-1,p:228},{s:-1,p:229},{s:-1,p:230},{s:-1,p:233},{s:-1,p:234},{s:-1,p:235},{s:-1,p:236},{s:-1,p:237},{s:-1,p:238},{s:-1,p:239}],\n\t\t\t\t\tepTarget: true,\n\t\t\t\t},\n\n\t\t\t\t4: {\n\t\t\t\t\tname: 'knight',\n\t\t\t\t\tgraph: this.cbKnightGraph(geometry),\n\t\t\t\t\tvalue: 2.9,\n\t\t\t\t\tabbrev: 'N',\n\t\t\t\t\tinitial: [{s:1,p:1},{s:1,p:6},{s:1,p:9},{s:1,p:14},{s:1,p:23},{s:1,p:24},{s:-1,p:231},{s:-1,p:232},{s:-1,p:241},{s:-1,p:246},{s:-1,p:249},{s:-1,p:254}],\n\t\t\t\t\t},\n\n\t\t\t\t5: {\n\t\t\t\t\tname: 'bishop',\n\t\t\t\t\tgraph: this.cbBishopGraph(geometry),\n\t\t\t\t\tvalue: 3.1,\n\t\t\t\t\tabbrev: 'B',\n\t\t\t\t\tinitial: [{s:1,p:2},{s:1,p:5},{s:1,p:10},{s:1,p:13},{s:-1,p:242},{s:-1,p:245},{s:-1,p:250},{s:-1,p:253}],\n\t\t\t\t},\n\n\t\t\t\t6: {\n\t\t\t\t\tname: 'rook',\n\t\t\t\t\tgraph: this.cbRookGraph(geometry),\n\t\t\t\t\tvalue: 5,\n\t\t\t\t\tabbrev: 'R',\n\t\t\t\t\tinitial: [{s:1,p:0},{s:1,p:4},{s:1,p:11},{s:1,p:15},{s:-1,p:240},{s:-1,p:244},{s:-1,p:251},{s:-1,p:255}],\n\t\t\t\t\tcastle: true,\n\t\t\t\t},\n\n\t\t\t\t7: {\n\t\t\t\t\tname: 'queen',\n\t\t\t\t\tgraph: this.cbQueenGraph(geometry),\n\t\t\t\t\tvalue: 9,\n\t\t\t\t\tabbrev: 'Q',\n\t\t\t\t\tinitial: [{s:1,p:7},{s:-1,p:247}],\n\t\t\t\t},\n\n\t\t\t\t8: {\n\t\t\t\t\tname: 'king',\n\t\t\t\t\tisKing: true,\n\t\t\t\t\tgraph: this.cbKingGraph(geometry),\n\t\t\t\t\tabbrev: 'K',\n\t\t\t\t\tinitial: [{s:1,p:8},{s:-1,p:248}],\n\t\t\t\t},\n\n\t\t\t},\n\n\t\t\tpromote: function(aGame,piece,move) {\n\t\t\t\tif(piece.t==1)\n\t\t\t\t\treturn [0];\n\t\t\t\telse if(piece.t==3)\n\t\t\t\t\treturn [2];\n\t\t\t\telse if(piece.t==0 && geometry.R(move.t)==15)\n\t\t\t\t\treturn [4,5,6,7];\n\t\t\t\telse if(piece.t==2 && geometry.R(move.t)==0)\n\t\t\t\t\treturn [4,5,6,7];\n\t\t\t\treturn [];\n\t\t\t},\n\n\t\t\tcastle: {\n\t\t\t\t\"8/4\": {k:[7,6],r:[5,6,7],n:\"O-O-O\"},\n\t\t\t\t\"8/11\": {k:[9,10],r:[10,9],n:\"O-O\"},\n\t\t\t\t\"248/244\": {k:[247,246],r:[245,246,247],n:\"O-O-O\"},\n\t\t\t\t\"248/251\": {k:[249,250],r:[250,249],n:\"O-O\"},\n\t\t\t},\n\n\t\t\tevaluate: function(aGame,evalValues,material) {\n\t\t\t\t// check lack of material to checkmate\n\t\t\t\tvar white=material[1].count;\n\t\t\t\tvar black=material[-1].count;\n\t\t\t\tif(!white[0] && !white[1] && !white[4] && !white[5] && !white[6] && !white[7]) { // white king single\n\t\t\t\t\tif(!black[2] && !black[3] && !black[6] && !black[7] && (black[4]+black[5]<2 || black[5]<2)) {\n\t\t\t\t\t\tthis.mFinished=true;\n\t\t\t\t\t\tthis.mWinner=JocGame.DRAW;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!black[2] && !black[3] && !black[4] && !black[5] && !black[6] && !black[7]) { // black king single\n\t\t\t\t\tif(!white[0] && !white[1] && !white[6] && !white[7] && (white[4]+white[5]<2 || white[5]<2)) {\n\t\t\t\t\t\tthis.mFinished=true;\n\t\t\t\t\t\tthis.mWinner=JocGame.DRAW;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// check 50 moves without capture\n\t\t\t\tif(this.noCaptCount>=100) {\n\t\t\t\t\tthis.mFinished=true;\n\t\t\t\t\tthis.mWinner=JocGame.DRAW;\n\t\t\t\t}\n\n\t\t\t\t// motivate pawns to reach the promotion line\n\t\t\t\tvar distPromo=aGame.cbUseTypedArrays?new Int8Array(3):[0,0,0];\n\t\t\t\tvar height=geometry.height;\n\t\t\t\tvar pawns=material[1].byType[0],pawnsLength;\n\t\t\t\tif(pawns) {\n\t\t\t\t\tpawnsLength=pawns.length;\n\t\t\t\t\tfor(var i=0;i<pawnsLength;i++)\n\t\t\t\t\t\tswitch(height-geometry.R(pawns[i].p)) {\n\t\t\t\t\t\tcase 2: distPromo[0]++; break;\n\t\t\t\t\t\tcase 3: distPromo[1]++; break;\n\t\t\t\t\t\tcase 4: distPromo[2]++; break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpawns=material[-1].byType[2],pawnsLength;\n\t\t\t\tif(pawns) {\n\t\t\t\t\tpawnsLength=pawns.length;\n\t\t\t\t\tfor(var i=0;i<pawnsLength;i++)\n\t\t\t\t\t\tswitch(geometry.R(pawns[i].p)) {\n\t\t\t\t\t\tcase 1: distPromo[0]--; break;\n\t\t\t\t\t\tcase 2: distPromo[1]--; break;\n\t\t\t\t\t\tcase 3: distPromo[2]--; break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(distPromo[0]!=0)\n\t\t\t\t\tevalValues['distPawnPromo1']=distPromo[0];\n\t\t\t\tif(distPromo[1]!=0)\n\t\t\t\t\tevalValues['distPawnPromo2']=distPromo[1];\n\t\t\t\tif(distPromo[2]!=0)\n\t\t\t\t\tevalValues['distPawnPromo3']=distPromo[2];\n\n\t\t\t\t// motivate knights and bishops to deploy early\n\t\t\t\tvar minorPiecesMoved=0;\n\t\t\t\tfor(var t=4;t<=5;t++)\n\t\t\t\t\tfor(var s=1;s>=-1;s-=2) {\n\t\t\t\t\t\tvar pieces=material[s].byType[t];\n\t\t\t\t\t\tif(pieces)\n\t\t\t\t\t\t\tfor(var i=0;i<pieces.length;i++)\n\t\t\t\t\t\t\t\tif(pieces[i].m)\n\t\t\t\t\t\t\t\t\tminorPiecesMoved+=s;\n\t\t\t\t\t}\n\t\t\t\tif(minorPiecesMoved!=0) {\n\t\t\t\t\tevalValues['minorPiecesMoved']=minorPiecesMoved;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\timportGame: function(initial,format,data) {\n\t\t\t\tinitial.pieces.forEach(function(piece) {\n\t\t\t\t\tif(piece.s==1 && geometry.R(piece.p)==1 && piece.t==0) {\n\t\t\t\t\t\tpiece.t=1;\n\t\t\t\t\t\tpiece.m=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(piece.s==1 && geometry.R(piece.p)!=1 && piece.t==1) {\n\t\t\t\t\t\tpiece.t=0;\n\t\t\t\t\t\tpiece.m=true;\n\t\t\t\t\t}\n\t\t\t\t\tif(piece.s==-1 && geometry.R(piece.p)==geometry.height-2 && piece.t==2) {\n\t\t\t\t\t\tpiece.t=3;\n\t\t\t\t\t\tpiece.m=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(piece.s==-1 && geometry.R(piece.p)!=geometry.height-2 && piece.t==3) {\n\t\t\t\t\t\tpiece.t=2;\n\t\t\t\t\t\tpiece.m=true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t}\n\n})();\n"],"file":"sweet16-chess-model.js"}