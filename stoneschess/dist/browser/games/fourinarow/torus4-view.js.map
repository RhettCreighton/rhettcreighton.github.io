{"version":3,"names":[],"mappings":"","sources":["fiarbase-xd-view.js"],"sourcesContent":["/*\n *\n * Copyright (c) 2013 - Jocly - www.jocly.com\n * \n * This file is part of the Jocly game platform and cannot be used outside of this context without the written permission of Jocly.\n * \n */\n\n(function() {\n\n\tvar SIZE, fullPath;\n\tvar full2dWidth,full2dHeight;\n\t// 3d data in blender units\n\tvar NBCOLS,NBROWS;\n\tvar CELLSIZE=2;\n\tvar interspace=CELLSIZE/5;\n\tvar CELLTHICKNESS=.1;\n\tvar connect4Color;\n\tvar BLENDER2WORLD;//=1000;\n\tvar bTorus; \n\tvar alpha,R;\n\tvar nbBackLights;\n\tvar lightsR;\n\tvar backLightIntensity;\n\t\n\tfunction colOrientation(c,step,deg){\n\t\tvar angle=step==0?0:Math.PI;\n\t\tif (bTorus) angle+=(-c*alpha);\n\t\tif (deg) angle=angle*180/Math.PI;\n\t\treturn angle;\n\t}\t\t\t\n\t\n\tView.Game.fiarCoord2d = function(c,r) {\n\t\treturn [(c+.5)*SIZE-full2dWidth/2,((this.mOptions.height-1)/2-r)*SIZE];\n\t}\n\t\n\tView.Game.fiarCoord3d = function(c,r,offset) {\n\t\tvar x,y,z;\n\t\tvar rotZ=0;\n\t\tvar roffset = offset || 0;\n\t\tz=(r+.5-NBROWS/2)*CELLSIZE*BLENDER2WORLD;\n\t\tif (bTorus){\n\t\t\trotZ=colOrientation(c,0,true);\n\t\t\tvar r=R*Math.cos(alpha/2)-interspace/2;\n\t\t\tr+=roffset;\n\t\t\ty=r*Math.cos(c*alpha)*BLENDER2WORLD;\n\t\t\tx=r*Math.sin(c*alpha)*BLENDER2WORLD;\n\t\t}else{\n\t\t\tx=(c+.5-NBCOLS/2)*CELLSIZE*BLENDER2WORLD;\n\t\t\ty=0;\n\t\t}\n\t\treturn [x,y,z,rotZ];\n\t}\n\t\n\tView.Game.xdInit = function(xdv) {\n\t\tSIZE=Math.ceil(12000/(Math.max(this.mOptions.width,this.mOptions.height)));\n\t\tfull2dWidth=SIZE*this.mOptions.width;\n\t\tfull2dHeight=SIZE*this.mOptions.height;\n\t\tfullPath=this.mViewOptions.fullPath;\n\t\tbTorus=this.mOptions.torus;\n\t\t\n\t\t// 3d data\n\t\tBLENDER2WORLD=1000;\n\t\tNBCOLS=this.mOptions.width;\n\t\tNBROWS=this.mOptions.height;\n\t\talpha=(Math.PI*2)/NBCOLS;\n\t\tR = (CELLSIZE/2)/Math.sin(alpha/2);\n\t\tnbBackLights=bTorus?3:2;\n\t\tlightsR=bTorus?40000:20000; //7*R*BLENDER2WORLD\n\t\tbackLightIntensity=bTorus?1.5:1.5;\n\t\tconnect4Color=bTorus?0x0066ff:0x0066ff;\n\n\t\tfor (var i=0;i<nbBackLights;i++) {\n\t\t\t(function(i) {\n\t\t\t\txdv.createGadget(\"lightback\"+i, {\n\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\ttype: \"custom3d\",\n\t\t\t\t\t\tcreate: function() {\n\t\t\t\t\t\t\tvar backlight = new THREE.SpotLight( 0xbbbbbb, backLightIntensity );\n\t\t\t\t\t\t\tbacklight.castShadow = bTorus?false:true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbacklight.shadow.camera.near= bTorus?30:15;\n\t\t\t\t\t\t\tbacklight.shadow.camera.far = bTorus?40:35;\n\t\t\t\t\t\t\tbacklight.shadow.camera.fov = bTorus?60:70;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbacklight.shadow.mapSize.width = 4096;\n\t\t\t\t\t\t\tbacklight.shadow.mapSize.height= 4096;\n\n\t\t\t\t\t\t\tvar object3d = new THREE.Object3D();\n\t\t\t\t\t\t\tvar target = new THREE.Object3D();\n\t\t\t\t\t\t\ttarget.position.set(\n\t\t\t\t\t\t\t\t-lightsR*Math.cos(i*(2*Math.PI)/nbBackLights),\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t-lightsR*Math.sin(i*(2*Math.PI)/nbBackLights)\t\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tobject3d.add(target);\n\t\t\t\t\t\t\tbacklight.target = target;\n\t\t\t\t\t\t\tobject3d.add(backlight);\n\n\t\t\t\t\t\t\treturn object3d;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tx: lightsR*Math.cos(i*(2*Math.PI)/nbBackLights),\n\t\t\t\t\t\ty: lightsR*Math.sin(i*(2*Math.PI)/nbBackLights),\n\t\t\t\t\t\t//z: 5000,\n\t\t\t\t\t\t//x: -20000,\n\t\t\t\t\t\t//z: 10000,\n\t\t\t\t\t\t//y: 3000,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})(i);\n\t\t}\n\t\t\n\t\t\t\t\n\t\t// standard board\n\n\t\tfunction moveCellFlat(c,r,mesh,step){\n\t\t\tmesh.position.y=0;\n\t\t\tmesh.position.y=(r+.5-NBROWS/2)*CELLSIZE;\n\t\t\tmesh.position.x=step==0?(-interspace/2):(interspace/2);\n\t\t\tmesh.position.z=(c+.5-NBCOLS/2)*CELLSIZE;\n\t\t\t//mesh.rotation.y=step>0?0:Math.PI;\n\t\t\tmesh.rotation.y=colOrientation(c,step);\n\t\t}\n\t\t// cylinder board\n\t\tfunction moveCellTorus(c,r,mesh,step){\n\t\t\tmesh.position.y=(r+.5-NBROWS/2)*CELLSIZE;\n\n\t\t\tvar r=R*Math.cos(alpha/2);\n\t\t\tr=r-step*(interspace+CELLTHICKNESS);\n\t\t\t\n\t\t\tmesh.position.x=r*Math.cos(c*alpha);\n\t\t\tmesh.position.z=r*Math.sin(c*alpha);\n\t\t\t\n\t\t\t//mesh.rotation.y=step==0?0:Math.PI;\n\t\t\t//mesh.rotation.y+=(-c*alpha);\n\t\t\tmesh.rotation.y=colOrientation(c,step);\n\n\t\t\t\n\t\t\tif (step>0) mesh.scale.z = 1-interspace*Math.tan(alpha/2);\n\t\t}\t\t\t\t\t\n\t\tvar moveCell = bTorus?moveCellTorus:moveCellFlat;\n\t\t\t\t\t\t\n\t\txdv.createGadget(\"board3d\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\n\t\t\t\t\tvar parentObject = new THREE.Object3D();//create an empty container\n\t\t\t\t\t\n\t\t\t\t\tvar nbCells=NBCOLS*NBROWS;\n\t\t\t\t\t\n\t\t\t\t\tvar resCount=4; // cell+ring+foot+board xtras\n\t\t\t\t\tvar childObjects=[];\n\t\t\t\t\t\n\t\t\t\t\tfunction checkLoaded(){\n\t\t\t\t\t\tif (--resCount==0){\t\t\n\t\t\t\t\t\t\tfor (var n=0 ; n < childObjects.length ; n++) {\n\t\t\t\t\t\t\t\tparentObject.add(childObjects[n]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback(parentObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar matBlueFlat = new THREE.MeshPhongMaterial( { \n\t\t\t\t\t\twireframe: false , \n\t\t\t\t\t\tshading: THREE.FlatShading ,\n\t\t\t\t\t\tcolor: connect4Color,\n\t\t\t\t\t\tspecular: 0x111111,\n\t\t\t\t\t\tshininess:40,\n\t\t\t\t\t} ) ;\n\n\t\t\t\t\t\n\t\t\t\t\tvar $this=this;\n\t\t\t\t\tvar smooth=0;\n\t\t\t\t\tvar url=\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/connect4cell.js\";\t\n\t\t\t\t\tthis.getResource(url,function(geometry , materials){\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var step=0 ; step < 2 ; step++){\n\t\t\t\t\t\t\tfor (var r = 0 ; r < NBROWS ; r++){\n\t\t\t\t\t\t\t\tfor (var c = 0 ; c < NBCOLS ; c++ ){\n\t\t\t\t\t\t\t\t\tvar mesh = new THREE.Mesh( geometry , matBlueFlat ) ;\n\t\t\t\t\t\t\t\t\tmesh.receiveShadow=false;\n\t\t\t\t\t\t\t\t\tmesh.castShadow=true;\n\t\t\t\t\t\t\t\t\tmoveCell(c,r,mesh,step);\n\t\t\t\t\t\t\t\t\tchildObjects.push(mesh);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheckLoaded();\n\t\t\t\t\t});\n\t\t\t\t\tsmooth=0;\n\t\t\t\t\turl=\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/connect4cell-ring-smoothed.js\";\t\n\t\t\t\t\tthis.getResource(url,function(geometry , materials){\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var step=0 ; step < 2 ; step++){\n\t\t\t\t\t\t\tfor (var r = 0 ; r < NBROWS ; r++){\n\t\t\t\t\t\t\t\tfor (var c = 0 ; c < NBCOLS ; c++ ){\n\t\t\t\t\t\t\t\t\tvar mesh = new THREE.Mesh( geometry , new THREE.MeshPhongMaterial( { \n\t\t\t\t\t\t\t\t\t\t\t\twireframe: false , \n\t\t\t\t\t\t\t\t\t\t\t\tshading: THREE.SmoothShading ,\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: connect4Color,\n\t\t\t\t\t\t\t\t\t\t\t\tspecular: 0x333333,\n\t\t\t\t\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t\t\t\tmesh.receiveShadow=false;\n\t\t\t\t\t\t\t\t\tmesh.castShadow=true;\n\t\t\t\t\t\t\t\t\tmoveCell(c,r,mesh,step);\n\t\t\t\t\t\t\t\t\tchildObjects.push(mesh);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheckLoaded();\n\t\t\t\t\t});\n\t\t\t\t\tsmooth=0;\n\t\t\t\t\turl=\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/connect4cell-foot.js\";\t\n\t\t\t\t\tthis.getResource(url,function(geometry , materials){\t\t\t\t\t\t\n\t\t\t\t\t\tif (!bTorus){\n\t\t\t\t\t\t\tfor (var step=0 ; step < 2 ; step++){\n\t\t\t\t\t\t\t\tvar mesh = new THREE.Mesh( geometry , matBlueFlat );\n\t\t\t\t\t\t\t\tvar z=step==0?NBCOLS/2*CELLSIZE:-NBCOLS/2*CELLSIZE;\n\t\t\t\t\t\t\t\tmesh.position.x=0;\n\t\t\t\t\t\t\t\tmesh.position.y=(-NBROWS/2+.5)*CELLSIZE;\n\t\t\t\t\t\t\t\tmesh.position.z=z;\n\t\t\t\t\t\t\t\tchildObjects.push(mesh);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar border1=new THREE.Mesh(\n\t\t\t\t\t\t\t\t\tnew THREE.BoxGeometry(.6,CELLSIZE*NBROWS,.2),\n\t\t\t\t\t\t\t\t\tmatBlueFlat);\n\t\t\t\t\t\t\t\tborder1.position.z=z;\n\t\t\t\t\t\t\t\tchildObjects.push(border1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheckLoaded();\n\t\t\t\t\t});\n\t\t\t\t\t// board xtras\n\t\t\t\t\t{\n\t\t\t\t\t\tif (bTorus){\n\t\t\t\t\t\t\tfor (var c=0;c<NBCOLS;c++){\n\t\t\t\t\t\t\t\tvar bar=new THREE.Mesh(\n\t\t\t\t\t\t\t\t\tnew THREE.BoxGeometry(interspace*1.4,interspace,CELLSIZE*1.2),\n\t\t\t\t\t\t\t\t\tmatBlueFlat);\n\t\t\t\t\t\t\t\tmoveCell(c,-.5,bar,.5);\n\t\t\t\t\t\t\t\tchildObjects.push(bar);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tvar border1=new THREE.Mesh(\n\t\t\t\t\t\t\t\t\tnew THREE.BoxGeometry(.6,.2,CELLSIZE*NBCOLS),\n\t\t\t\t\t\t\t\t\tmatBlueFlat);\n\t\t\t\t\t\t\t\tborder1.position.y=-(NBROWS/2)*CELLSIZE;\n\t\t\t\t\t\t\t\tchildObjects.push(border1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheckLoaded();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t}\t\n\t\t});\n\t\t\n\t\tfor(var r=0;r<this.mOptions.height;r++)\n\t\t\tfor(var c=0;c<this.mOptions.width;c++) {\n\t\t\t\tvar pos=r*this.mOptions.width+c;\n\t\t\t\tvar coord2d=this.fiarCoord2d(c,r);\n\t\t\t\txdv.createGadget(\"cell#\"+pos, {\n\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\ttype : \"sprite\",\n\t\t\t\t\t\tx : coord2d[0],\n\t\t\t\t\t\ty : coord2d[1],\n\t\t\t\t\t\tz : 2,\n\t\t\t\t\t\tfile : fullPath+\"/res/sprites2d.png\",\n\t\t\t\t\t\tclipx: 0,\n\t\t\t\t\t\tclipy: 0,\n\t\t\t\t\t\tclipwidth: 200,\n\t\t\t\t\t\tclipheight: 200,\n\t\t\t\t\t\twidth: SIZE,\n\t\t\t\t\t\theight: SIZE,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\tfor(var c=0;c<this.mOptions.width;c++) {\n\t\t\tvar $this=this;\n\t\t\t(function(c){\n\t\t\t\tvar notation=String.fromCharCode(65+c);\n\t\t\t\tvar coord2d=$this.fiarCoord2d(c,$this.mOptions.height-1);\n\t\t\t\tvar coord3d=$this.fiarCoord3d(c,$this.mOptions.height-.7,bTorus?1:0);\n\t\t\t\tvar centeringOffset=0.2*BLENDER2WORLD;\n\t\t\t\tif (bTorus){\n\t\t\t\t\tcoord3d[3]+=90;\n\t\t\t\t\tvar a=c*alpha;\n\t\t\t\t\tcoord3d[0]+=centeringOffset*Math.cos(a);\n\t\t\t\t\tcoord3d[1]-=centeringOffset*Math.sin(a);\n\t\t\t\t}else{\n\t\t\t\t\tcoord3d[3]-=90;\n\t\t\t\t\tcoord3d[0]-=.2*BLENDER2WORLD;\n\t\t\t\t}\n\t\t\t\txdv.createGadget(\"text#\"+c,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\ttype : \"element\",\n\t\t\t\t\t\tx : coord2d[0],\n\t\t\t\t\t\ty : coord2d[1],\n\t\t\t\t\t\tz : 3,\n\t\t\t\t\t\tinitialClasses: \"fiar-text\",\n\t\t\t\t\t\tdisplay : function(element, width, height) {\n\t\t\t\t\t\t\telement.css({\n\t\t\t\t\t\t\t\t\"font-size\" : (height * .5) + \"pt\",\n\t\t\t\t\t\t\t\t\"line-height\" : (height * 1) + \"px\",\n\t\t\t\t\t\t\t}).text(notation);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\t\tx: coord3d[1],\n\t\t\t\t\t\ty: coord3d[0],\n\t\t\t\t\t\tz: coord3d[2]+CELLSIZE/2*BLENDER2WORLD,\n\t\t\t\t\t\trotate: coord3d[3],\n\t\t\t\t\t\tcreate: function() {\n                            var $this = this;\n                            this.getResource('font|'+fullPath+\n                                '/res/xd-view/fonts/helvetiker_regular.typeface.json',\n                                function(font) {\n                                var gg=new THREE.TextGeometry(\"\"+notation,{\n                                    size: 0.6,\n                                    height: 0.05,\n                                    curveSegments: 6,\n                                    font: font,\n                                });\n                                var gm=new THREE.MeshPhongMaterial( { color: 0xff0000 } );\n                                var mesh= new THREE.Mesh( gg , gm );\n                                $this.objectReady(mesh);\n                            });\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t},\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\txdv.createGadget(\"clicker#\"+c+\"t\", {\n\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\ttype : \"element\",\n\t\t\t\t\t\tx : (c+.5)*SIZE-6000,\n\t\t\t\t\t\ty : -SIZE,\n\t\t\t\t\t\tz : 4,\n\t\t\t\t\t\twidth: SIZE,\n\t\t\t\t\t\theight: $this.mOptions.height*SIZE,\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tcss: {\n\t\t\t\t\t\t\t\"background-color\": \"rgba(255,0,0,.6)\",\n\t\t\t\t\t\t\t\"border\": \"1px solid Black\",\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\" : {\n\t\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\t\tcreate: function(callback){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar pivot = new THREE.Object3D();//create an empty container\n\t\t\t\t\t\t\t//var pivot = new THREE.Mesh(new THREE.CubeGeometry(10,10,10),new THREE.MeshPhongMaterial());//create an empty container\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar gg=new THREE.BoxGeometry((2*CELLTHICKNESS+interspace)*.05,CELLSIZE*NBROWS,CELLSIZE);\n\t\t\t\t\t\t\tvar mesh = new THREE.Mesh( gg , \n\t\t\t\t\t\t\t\tnew THREE.MeshPhongMaterial( { \n\t\t\t\t\t\t\t\t\t\t\t\t\twireframe: true , \n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: Math.random()*0xffffff,\n\t\t\t\t\t\t\t\t\t\t\t\t\tshininess:10,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t\tmesh.position.z=(c+.5-NBCOLS/2)*CELLSIZE;\n\t\t\t\t\t\t\tmoveCell(c,NBROWS/2-.5,mesh,0);\n\t\t\t\t\t\t\t//mesh.rotation.y=colOrientation(c,0);\n\t\t\t\t\t\t\tpivot.add(mesh);\n\t\t\t\t\t\t\tcallback(pivot);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.createGadget(\"clicker#\"+c+\"b\", {\n\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\ttype : \"element\",\n\t\t\t\t\t\tx : (c+.5)*SIZE-6000,\n\t\t\t\t\t\ty : ($this.mOptions.height/2)*SIZE,\n\t\t\t\t\t\tz : 4,\n\t\t\t\t\t\twidth: SIZE,\n\t\t\t\t\t\theight: 2*SIZE,\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tcss: {\n\t\t\t\t\t\t\t\"background-color\": \"rgba(0,0,255,.6)\",\n\t\t\t\t\t\t\t\"border\": \"1px solid Black\",\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\" : {\n\t\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\t\tcreate: function(callback){\n\t\t\t\t\t\t\tvar group = new THREE.Object3D();//create an empty container\n\t\t\t\t\t\t\tvar gg=new THREE.BoxGeometry((4*CELLTHICKNESS+interspace)*1.1,CELLSIZE,CELLSIZE);\n\t\t\t\t\t\t\tvar mesh = new THREE.Mesh( gg , \n\t\t\t\t\t\t\t\tnew THREE.MeshPhongMaterial( { \n\t\t\t\t\t\t\t\t\t\t\t\t\twireframe: true , \n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: Math.random()*0xffffff,\n\t\t\t\t\t\t\t\t\t\t\t\t\tshininess:250,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\topacity: 0,\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t\tmesh.position.z=(c+.5-NBCOLS/2)*CELLSIZE;\n\t\t\t\t\t\t\tmoveCell(c,0,mesh,0);\n\t\t\t\t\t\t\t//mesh.rotation.y=colOrientation(c,0);\n\t\t\t\t\t\t\tgroup.add(mesh);\n\t\t\t\t\t\t\tcallback(group);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})(c);\t\n\t\t}\n\n\t\tfunction createScreen(videoTexture) {\n\t\t\tvar $this=this;\n\t\t\tvar smooth=0;\n\t\t\tthis.getResource(\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/stade-screen.js\",function(geometry , materials) {\n \t\t\t\tvar materials0=[];\n \t\t\t\t\n \t\t\t\tfor(var i=0;i<materials.length;i++){\n                    if (materials[i].name==\"mat.screen\"){\n\t \t\t\t\t\tvar mat=materials[i].clone();\n \t\t\t\t\t\tmat.map=videoTexture;\n \t\t\t\t\t\tmat.overdraw = true;\n \t\t\t\t\t\tmat.emissive = {r:1,g:1,b:1};\n \t\t\t\t\t\t//mat.side = THREE.DoubleSide;\n \t\t\t\t\t\tmaterials0.push(mat);\n                    }else{\n\t \t\t\t\t\tvar mat=materials[i].clone();\n\t \t\t\t\t\tmat.shading=THREE.FlatShading;\n\t \t\t\t\t\tmaterials0.push(mat);\n                    }\n \t\t\t\t}\n \t\t\t\tvar mesh = new THREE.Mesh( geometry , new THREE.MultiMaterial( materials0 ) );\n \t\t\t\t\n \t\t\t\tmesh.visible = false;\n \t\t\t\t$this.objectReady(mesh);\n\t\t\t});\n\t\t\treturn null;\n\t\t};\n\n\t\tvar scaleScreen=5;\n\t\tvar zScreen=0;\n\t\tvar xScreen=3000;\n\t\tvar yScreen=(NBCOLS/2+2)*CELLSIZE*BLENDER2WORLD;\n\t\tvar screenAngle=25;\n\t\txdv.createGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen,\n\t\t\t\tx: xScreen,\n\t\t\t\ty: yScreen,\n\t\t\t\trotate: -(180-screenAngle),\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen,\n\t\t\t\tx: xScreen,\n\t\t\t\ty: -yScreen,\n\t\t\t\trotate: -screenAngle,\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\n\n\t\tvar fillerW=.05;\n\t\tfor(var c=0;c<(this.mOptions.width+1);c++) {\n\t\t\txdv.createGadget(\"filler#c\"+c, {\n\t\t\t\t\"2d\" : {\n\t\t\t\t\ttype : \"element\",\n\t\t\t\t\tx : c*SIZE-full2dWidth/2,\n\t\t\t\t\ty : 0,\n\t\t\t\t\tz : 3,\n\t\t\t\t\twidth: SIZE*.05,\n\t\t\t\t\theight: (this.mOptions.height+fillerW)*SIZE,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"background-color\": \"#0065d0\",\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t},\t\t\t\t\n\t\t\t});\n\t\t}\n\t\tfor(var r=0;r<(this.mOptions.height+1);r++) {\n\t\t\txdv.createGadget(\"filler#r\"+r, {\n\t\t\t\t\"2d\" : {\n\t\t\t\t\ttype : \"element\",\n\t\t\t\t\ty : r*SIZE-full2dHeight/2,\n\t\t\t\t\tx : 0,\n\t\t\t\t\tz : 3,\n\t\t\t\t\theight: SIZE*.05,\n\t\t\t\t\twidth: (this.mOptions.width+fillerW)*SIZE,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"background-color\": \"#0065d0\",\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t},\t\t\t\t\n\t\t\t});\n\t\t}\n\t\tif (bTorus){\n\t\t\tfor (var c=0;c<2;c++){\n\t\t\t\txdv.createGadget(\"fillertorus#c\"+c, {\n\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\ttype : \"element\",\n\t\t\t\t\t\tx : c*full2dWidth-full2dWidth/2,\n\t\t\t\t\t\ty : 0,\n\t\t\t\t\t\tz : 4,\n\t\t\t\t\t\twidth: SIZE*.08,\n\t\t\t\t\t\theight: (this.mOptions.height+fillerW)*SIZE,\n\t\t\t\t\t\tinitialClasses: c==0?\"fiar-holes-left\":\"fiar-holes-right\",\t\t\t\t\t\t\n\t\t\t\t\t},\t\t\t\t\n\t\t\t\t});\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar tokens={},tokenCounter=1;\n\n\tView.Game.fiarIsToken = function(c,r) {\n\t\tvar token=tokens[c+\"/\"+r];\n\t\treturn !!token;\n\t}\n\n\tView.Game.fiarRemoveToken = function(c,r) {\n\t\tvar token=tokens[c+\"/\"+r];\n\t\tif(token)\n\t\t\tdelete tokens[c+\"/\"+r];\n\t}\n\t\n\tView.Game.fiarMoveToken = function(c0,r0,c,r) {\n\t\tvar token=tokens[c0+\"/\"+r0];\n\t\tif(token) {\n\t\t\tdelete tokens[c0+\"/\"+r0];\n\t\t\ttokens[c+\"/\"+r]=token;\n\t\t}\n\t}\n\t\n\tView.Game.fiarGetToken = function(xdv,c,r,who) {\n\t\tvar token=tokens[c+\"/\"+r];\n\t\tif(!token) {\n\t\t\ttoken=\"token#\"+(tokenCounter++);\n\t\t\tvar coord2d=this.fiarCoord2d(c,r);\n\t\t\tvar coord3d=this.fiarCoord3d(c,r);\n\t\t\txdv.createGadget(token, {\n\t\t\t\t\"2d\" : {\n\t\t\t\t\ttype : \"sprite\",\n\t\t\t\t\tx : coord2d[0],\n\t\t\t\t\ty : coord2d[1],\n\t\t\t\t\tz : 1,\n\t\t\t\t\tfile : fullPath+\"/res/sprites2d.png\",\n\t\t\t\t\tclipx: 0,\n\t\t\t\t\tclipy: 0,\n\t\t\t\t\tclipwidth: 200,\n\t\t\t\t\tclipheight: 200,\n\t\t\t\t\twidth: SIZE,\n\t\t\t\t\theight: SIZE,\n\t\t\t\t},\n\t\t\t\t\"3d\" : {\n\t\t\t\t\ttype: \"meshfile\",\n\t\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/connect4-token.js\",\n\t\t\t\t\tflatShading: true,\n\t\t\t\t\tx: coord3d[1],\n\t\t\t\t\ty: coord3d[0],\n\t\t\t\t\tz: coord3d[2],\n\t\t\t\t\trotate: coord3d[3],\n\t\t\t\t\treceiveShadow:false //bTorus?false:true,\n\t\t\t\t}\n\t\t\t});\n\t\t\ttokens[c+\"/\"+r]=token;\n\t\t}\n\t\tif(arguments.length>3){\n\t\t\tvar url=fullPath+\"/res/xd-view/meshes/connect4-yellow.png\";\n\t\t\tif (who==1) url=fullPath+\"/res/xd-view/meshes/connect4-red.png\";\n\t\t\txdv.updateGadget(token,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tclipx : who==1?200:400,\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\tmaterials : {\n\t\t\t\t\t\t\"token-mat\" : {\n\t\t\t\t\t\t\tmap: url,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn token;\n\t}\n\n\tView.Game.xdBuildScene = function(xdv) {\n\t\tfor(var pos=0;pos<this.mOptions.width*this.mOptions.height;pos++)\n\t\t\txdv.updateGadget(\"cell#\"+pos, {\n\t\t\t\t\"base\" : {\n\t\t\t\t\tvisible : true,\n\t\t\t\t},\n\t\t\t});\n\t\txdv.updateGadget(\"board3d\",{\n\t\t\t\"3d\":{\n\t\t\t\tvisible : true,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"lightside\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t});\n\t\tfor (var i=0;i<nbBackLights;i++){\n\t\t\txdv.updateGadget(\"lightback\"+i,{\n\t\t\t\t\"3d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\txdv.updateGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: 1,\n\t\t\t},\n\t\t});\n\n\t\txdv.updateGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\t//rotate: 90,\n\t\t\t\tplayerSide: -1,\n\t\t\t},\n\t\t});\n\t\tfor(var c=0;c<this.mOptions.width;c++){\n\t\t\txdv.updateGadget(\"text#\"+c,{\n\t\t\t\tbase: { \n\t\t\t\t\tvisible: this.mNotation,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfor(var c=0;c<(this.mOptions.width+1);c++) {\n\t\t\txdv.updateGadget(\"filler#c\"+c, {\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfor(var r=0;r<(this.mOptions.height+1);r++) {\n\t\t\txdv.updateGadget(\"filler#r\"+r, {\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (bTorus){\n\t\t\tfor (var c=0;c<2;c++){\n\t\t\t\txdv.updateGadget(\"fillertorus#c\"+c, {\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t\n\tView.Board.xdDisplay = function(xdv, aGame) {\n\t\tvar wTokens={};\n\t\tif(this.mFinished)\n\t\t\tfor(var i=0;i<aGame.g.TuplesList.length;i++) {\n\t\t\t\tvar tuple=aGame.g.TuplesList[i];\n\t\t\t\tvar counter={\n\t\t\t\t\t1: 0,\n\t\t\t\t\t0: 0,\n\t\t\t\t\t'-1': 0,\n\t\t\t\t};\n\t\t\t\tfor(var j=0;j<tuple.length;j++)\n\t\t\t\t\tcounter[this.board[tuple[j]]]++;\n\t\t\t\tif(counter[1]==aGame.mOptions.lines || counter['-1']==aGame.mOptions.lines)\n\t\t\t\t\tfor(var j=0;j<tuple.length;j++)\n\t\t\t\t\t\twTokens[tuple[j]]=true;\n\t\t\t}\n\t\tfor(var r=0;r<aGame.mOptions.height;r++) {\n\t\t\tfor(var c=0;c<aGame.mOptions.width;c++) {\n\t\t\t\tvar pos=r*aGame.mOptions.width+c;\n\t\t\t\tif(this.board[pos]==0) {\n\t\t\t\t\tif(aGame.fiarIsToken(c,r)) {\n\t\t\t\t\t\tvar token=aGame.fiarGetToken(xdv,c,r);\n\t\t\t\t\t\txdv.updateGadget(token,{\n\t\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar token=aGame.fiarGetToken(xdv,c,r,this.board[pos]);\n\t\t\t\t\tvar coord2d=aGame.fiarCoord2d(c,r);\n\t\t\t\t\tvar coord3d=aGame.fiarCoord3d(c,r);\n\t\t\t\t\tvar url=fullPath+\"/res/xd-view/meshes/connect4\";\n\t\t\t\t\tif (this.board[pos]==1) \n\t\t\t\t\t\turl+=\"-red\";\n\t\t\t\t\telse\n\t\t\t\t\t\turl+=\"-yellow\";\n\t\t\t\t\tif (pos in wTokens) \n\t\t\t\t\t\turl+=\"-star\";\n\t\t\t\t\turl+=\".png\";\n\t\t\t\t\txdv.updateGadget(token,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\tx : coord2d[0],\n\t\t\t\t\t\t\ty : coord2d[1],\n\t\t\t\t\t\t\tclipy : (pos in wTokens)?200:0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\t\tx: coord3d[1],\n\t\t\t\t\t\t\ty: coord3d[0],\n\t\t\t\t\t\t\tz: coord3d[2],\n\t\t\t\t\t\t\trotate: coord3d[3],\n\t\t\t\t\t\t\tmaterials : {\n\t\t\t\t\t\t\t\t\"token-mat\" : {\n\t\t\t\t\t\t\t\t\tmap: url,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tView.Board.xdBuildHTStateMachine = function(xdv, htsm, aGame) {\n\t\tvar $this=this;\n\t\tfunction Select() {\n\t\t\tfor(var i=0;i<$this.mMoves.length;i++) {\n\t\t\t\tvar move=$this.mMoves[i];\n\t\t\t\tif(move.op=='+') {\n\t\t\t\t\t(function(col) {\n\t\t\t\t\t\txdv.updateGadget(\"clicker#\"+col+\"t\",{\n\t\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_CLICK\",{col:col,op:'+'});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(!aGame.mOptions.remove)\n\t\t\t\t\t\t\txdv.updateGadget(\"clicker#\"+move.col+\"b\",{\n\t\t\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_CLICK\",{col:col,op:'+'});\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t})(move.col);\n\t\t\t\t} else if(move.op=='-') {\n\t\t\t\t\t(function(col) {\n\t\t\t\t\t\txdv.updateGadget(\"clicker#\"+move.col+\"b\",{\n\t\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_CLICK\",{col:col,op:'-'});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t})(move.col);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfunction Clean() {\n\t\t\tfor(var col=0;col<aGame.mOptions.width;col++) {\n\t\t\t\txdv.updateGadget(\"clicker#\"+col+\"t\",{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\tclick: null,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.updateGadget(\"clicker#\"+col+\"b\",{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\tclick: null,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tfunction Click(args) {\n\t\t\tif(args.op=='+')\n\t\t\t\t$this.fiarAnimateDrop(xdv,aGame,args.col,$this.cols[args.col],function() {\n\t\t\t\t\taGame.HumanMove({\n\t\t\t\t\t\tcol: args.col,\n\t\t\t\t\t\top: '+',\n\t\t\t\t\t});\t\t\t\n\t\t\t\t});\n\t\t\telse if(args.op=='-')\n\t\t\t\t$this.fiarAnimateOut(xdv,aGame,args.col,$this.cols[args.col]-1,function() {\n\t\t\t\t\taGame.HumanMove({\n\t\t\t\t\t\tcol: args.col,\n\t\t\t\t\t\top: '-',\n\t\t\t\t\t});\t\t\t\n\t\t\t\t});\n\t\t}\n\t\thtsm.smTransition(\"S_INIT\", \"E_INIT\", \"S_SELECT\", [ Select ]);\n\t\thtsm.smTransition(\"S_SELECT\", \"E_CLICK\", \"S_ANIMATE\", [ Clean, Click ]);\n\t\thtsm.smTransition([\"S_SELECT\",\"S_ANIMATE\"], \"E_END\", \"S_DONE\", [ ]);\n\t\thtsm.smEntering(\"S_DONE\",[Clean]);\n\t}\n\t\n\tView.Board.xdPlayedMove = function(xdv, aGame, aMove) {\n\t\tif(aMove.op=='+')\n\t\t\tthis.fiarAnimateDrop(xdv,aGame,aMove.col,this.cols[aMove.col]-1,function() {\n\t\t\t\taGame.MoveShown();\t\t\t\n\t\t\t});\n\t\telse if(aMove.op=='-')\n\t\t\tthis.fiarAnimateOut(xdv,aGame,aMove.col,this.cols[aMove.col],function() {\n\t\t\t\taGame.MoveShown();\t\t\t\n\t\t\t});\n\t}\n\t\n\tView.Board.fiarAnimateDrop = function(xdv,aGame,c,r,callback) {\n\t\tvar token = aGame.fiarGetToken(xdv,c,r,this.mWho);\n\t\tvar coord2d=aGame.fiarCoord2d(c,r);\n\t\tvar coord3d=aGame.fiarCoord3d(c,r);\n\t\txdv.updateGadget(token,{\n\t\t\tbase: {\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t\t\"2d\": {\n\t\t\t\tx: coord2d[0],\n\t\t\t\ty: -13000,\n\t\t\t\tclipy: 0,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\ty: coord3d[0],\n\t\t\t\tz: NBROWS/2*CELLSIZE*BLENDER2WORLD,\n\t\t\t}\n\t\t});\n\t\t\n\t\taGame.PlaySound(\"sound2\");\n\n\t\txdv.updateGadget(token,{\n\t\t\t\"2d\": {\n\t\t\t\ty: coord2d[1],\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\tz: coord3d[2],\t\t\n\t\t\t}\n\t\t},400,function() {\n\t\t\tcallback();\n\t\t});\n\t}\n\t\n\tView.Board.fiarAnimateOut = function(xdv,aGame,c,topr,callback) {\n\t\tvar animCount=0;\n\t\tvar moved=[];\n\t\tfunction AnimEnd() {\n\t\t\tif(--animCount==0) {\n\t\t\t\tfor(var i=0;i<moved.length;i++) {\n\t\t\t\t\tvar from=moved[i].from;\n\t\t\t\t\tvar to=moved[i].to;\n\t\t\t\t\taGame.fiarMoveToken(from.c,from.r,to.c,to.r);\n\t\t\t\t}\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\tvar outToken=aGame.fiarGetToken(xdv,c,0,this.mWho);\n\t\tvar coord2d=aGame.fiarCoord2d(c,0);\n\t\tvar coord3d=aGame.fiarCoord3d(c,0);\n\t\tanimCount++;\n\t\txdv.updateGadget(outToken,{\n\t\t\t\"2d\": {\n\t\t\t\tx: coord2d[0],\n\t\t\t\ty: 13000,\n\t\t\t},\n\t\t\t\"3d\": {\n\t\t\t\ty: coord3d[0],\n\t\t\t\tz: -13000,\n\t\t\t}\n\t\t},600,function() {\n\t\t\txdv.removeGadget(outToken);\n\t\t\taGame.fiarRemoveToken(c,0);\n\t\t\tAnimEnd();\n\t\t});\n\t\tfor(var i=1;i<=topr;i++) {\n\t\t\t(function(r) {\n\t\t\t\tvar token=aGame.fiarGetToken(xdv,c,r);\n\t\t\t\tif(token) {\n\t\t\t\t\tmoved.push({\n\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\tc: c,\n\t\t\t\t\t\t\tr: r,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tto: {\n\t\t\t\t\t\t\tc: c,\n\t\t\t\t\t\t\tr: r-1,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tvar coord2d=aGame.fiarCoord2d(c,r-1);\n\t\t\t\t\tvar coord3d=aGame.fiarCoord3d(c,r-1);\n\t\t\t\t\tanimCount++;\n\t\t\t\t\txdv.updateGadget(token,{\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\ty: coord2d[1],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\t\tz: coord3d[2],\n\t\t\t\t\t\t}\n\t\t\t\t\t},600,function() {\n\t\t\t\t\t\tAnimEnd();\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})(i)\n\t\t}\n\t}\n\t\n})();\n"],"file":"torus4-view.js"}