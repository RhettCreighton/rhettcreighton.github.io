{"version":3,"names":[],"mappings":"","sources":["tafl-xd-view.js"],"sourcesContent":["/*\n *\n * Copyright (c) 2013 - Jocly - www.jocly.com\n * \n * This file is part of the Jocly game platform and cannot be used outside of this context without the written permission of Jocly.\n * \n */\n\n(function() {\n\t\n\tvar SIZE, CSIZE, fullPath;\n\t\n\tvar fieldZ=0;\n\n\n\t// pos to [column,row]\n\tfunction Cr(pos) {\n\t\tvar c=pos%SIZE;\n\t\treturn [c,(pos-c)/SIZE];\n\t}\n\t\n\t//  column, row to pos\n\tfunction Pos(c,r) {\n\t\treturn r*SIZE+c;\n\t}\n\t\n\t// get coordinates from either r,c or pos params\n\tfunction Coord() {\n\t\tif(arguments.length==2)\n\t\t\treturn [(arguments[0]-SIZE/2+.5)*CSIZE,(arguments[1]-SIZE/2+.5)*CSIZE];\n\t\telse { \n\t\t\tvar c=arguments[0]%SIZE;\n\t\t\treturn Coord(c%SIZE,(arguments[0]-c)/SIZE);\n\t\t}\n\t}\n\t\n\tView.Game.xdInit = function(xdv) {\n\t\tvar $this=this;\n\t\tSIZE=this.mOptions.centerDistance*2+1;\n\t\tCSIZE=Math.ceil(11500/(SIZE+1));\n\t\tfullPath=this.mViewOptions.fullPath;\n\n\t\tvar pieceScale=CSIZE/3000;\n\t\tvar ringScale=CSIZE/1400;\n\t\tvar boardScale=0.129*SIZE*CSIZE/1000;\n\t\t\n\t\t\n\t\txdv.createGadget(\"extralights\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\t// spot lighting\n\t\t\t\t\tvar spotLight1 = new THREE.SpotLight( 0xffffff, 0.5 );\n\t\t\t\t\t//spotLight1.shadowCameraVisible = true;\n\t\t\t\t\tspotLight1.shadow.camera.near = 10;\n\t\t\t\t\tspotLight1.shadow.camera.far = 25;\n\t\t\t\t\tspotLight1.castShadow = true;\n\t\t\t\t\t//spotLight1.shadowDarkness = .25;\n\t\t\t\t\tspotLight1.shadow.mapSize.width = 2048;\n\t\t\t\t\tspotLight1.shadow.mapSize.height = 2048;\n\n\t\t\t\t\tspotLight1.position.set(-6, 8, -6);\n\t\t\t\t\t\n\t\t\t\t\tvar spotLight2 = new THREE.SpotLight( 0xffffff, 0.5 );\n\t\t\t\t\t//spotLight2.shadowCameraVisible = true;\n\t\t\t\t\tspotLight2.position.set(7, 7, 7);\n\t\t\t\t\tspotLight2.shadow.camera.near = 10;\n\t\t\t\t\tspotLight2.shadow.camera.far = 25;\n\t\t\t\t\tspotLight2.castShadow = true;\n\t\t\t\t\t//spotLight2.shadowDarkness = .15;\n\t\t\t\t\tspotLight2.shadow.mapSize.width = 2048;\n\t\t\t\t\tspotLight2.shadow.mapSize.height = 2048;\n\t\t\t\t\t\n\t\t\t\t\tvar mesh=new THREE.Mesh();\n\t\t\t\t\tmesh.add(spotLight1);\n\t\t\t\t    mesh.add(spotLight2);\n\t\t\t\t\tvar target = new THREE.Object3D();\n\t\t\t\t\tmesh.add(target);\n\t\t\t\t\tspotLight1.target = target;\n\t\t\t\t\tspotLight2.target = target;\n\t\t\t\t\tcallback(mesh);\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\t\t\n\t\t\n\t\tfunction DrawBoard(avatar,boardCanvas,bNotations,callback) {\n\t\t\tvar BOARDSZ = 1024; // texture painting bitmap width in pixels\n\t\t\t\n\t\t\tvar innerBOARDcx = 872;\n\t\t\tvar innerBOARDcy = 872;\n\t\t\tvar innerBOARDx = 76;\n\t\t\tvar innerBOARDy = 76;\n\t\t\tvar NBROWS = SIZE;\n\t\t\tvar NBCOLS = SIZE;\n\t\t\t\n\t\t\tvar nbRes = 6;\n\n\t\t\tvar boardImage,cellImage,blackCell,kingCell,attackCell,defendCell;\n\n\n\t\t\tfunction drawIfReady() {\n\t\t\t\tnbRes--;\n\t\t\t\tif (nbRes == 0) {\n\t\t\t\t\t// do the job\n\t\t\t\t\tvar ctx = boardCanvas.getContext('2d');\n\t\t\t\t\t// draw wood background\n\t\t\t\t\tctx.drawImage(boardImage, 0, 0, BOARDSZ, BOARDSZ);\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// draw cells limits\n\t\t\t\t\tvar cellCx = innerBOARDcx / NBCOLS;\n\t\t\t\t\tvar cellCy = innerBOARDcy / NBROWS;\n\t\t\t\t\tvar pos = 0;\n\t\t\t\t\tfor (var row = 0; row < NBROWS; row++) {\n\t\t\t\t\t\tfor (var col = 0; col < NBCOLS; col++) {\n\t\t\t\t\t\t\tif (bNotations && ($this.mOptions.exclude.indexOf(pos)<0)) {\n\t\t\t\t\t\t\t\t// top left small\n\t\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t\t\tctx.fillStyle = \"#000000\";\n\t\t\t\t\t\t\t\tctx.font = Math.ceil(cellCx / 4) + 'px Monospace';\n\t\t\t\t\t\t\t\tctx.fillText(pos, innerBOARDx + (col + .05) * cellCx, innerBOARDy + (row + .05) * cellCy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toldBlendingMode = ctx.globalCompositeOperation;\n\t\t\t\t\t\t\toldAlpha = ctx.globalAlpha ;\n\t\t\t\t\t\t\tif ($this.mOptions.initial.defenders.king==pos) {\n\t\t\t\t\t\t\t\tctx.globalCompositeOperation = 'multiply';\n\t\t\t\t\t\t\t\tctx.drawImage(kingCell, innerBOARDx + col * cellCx, innerBOARDy + row * cellCy, cellCx, cellCy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($this.mOptions.exclude.indexOf(pos)>=0) {\n\t\t\t\t\t\t\t\tctx.globalCompositeOperation = 'multiply';\n\t\t\t\t\t\t\t\tctx.drawImage(blackCell, innerBOARDx + col * cellCx, innerBOARDy + row * cellCy, cellCx, cellCy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($this.mOptions.initial.attackers.indexOf(pos)>=0) {\n\t\t\t\t\t\t\t\tctx.globalCompositeOperation = 'multiply';\n\t\t\t\t\t\t\t\tctx.globalAlpha = 0.8;\n\t\t\t\t\t\t\t\tctx.drawImage(attackCell, innerBOARDx + col * cellCx, innerBOARDy + row * cellCy, cellCx, cellCy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($this.mOptions.initial.defenders.soldiers.indexOf(pos)>=0) {\n\t\t\t\t\t\t\t\tctx.globalCompositeOperation = 'multiply';\n\t\t\t\t\t\t\t\tctx.globalAlpha = 0.5;\n\t\t\t\t\t\t\t\tctx.drawImage(defendCell, innerBOARDx + col * cellCx, innerBOARDy + row * cellCy, cellCx, cellCy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.globalCompositeOperation = oldBlendingMode;\n\t\t\t\t\t\t\tctx.globalAlpha = oldAlpha ;\n\t\t\t\t\t\t\tctx.drawImage(cellImage, innerBOARDx + col * cellCx, innerBOARDy + row * cellCy, cellCx, cellCy);\n\t\t\t\t\t\t\tpos++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/images/ardriboard_bgx1024.jpg\",function(img){\n\t\t\t\tboardImage=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/images/ardricellborders.png\",function(img){\n\t\t\t\tcellImage=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/images/ardriblackcell.png\",function(img){\n\t\t\t\tblackCell=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/images/ardrikingcell.png\",function(img){\n\t\t\t\tkingCell=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/images/blackcell.png\",function(img){\n\t\t\t\tattackCell=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/images/whitecell.png\",function(img){\n\t\t\t\tdefendCell=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction create3DBoard(bNotations,callback){\n\t\t\tvar smooth=0;\n\t\t\tvar url=\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/taflboard.js\";\n\t\t\tvar avat=this;\n\t\t\tthis.getResource(url,function(geometry , materials){\n\t\t\t\t\n\t\t\t\tRequestBoardCanvas(avat,bNotations,function(boardCanvas) {\n\n\t\t\t\t\tDrawBoard(avat,boardCanvas,bNotations,function(){\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar texBoard = new THREE.Texture(boardCanvas);\n\t\t\t\t\t\t// And tell Three.js that it needs to update the texture.\n\t\t\t\t\t\ttexBoard.needsUpdate = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar materials0=[];\t\t\n\t\t\t\t\t\tfor(var i=0;i<materials.length;i++){\n\t\t\t\t\t\t\tvar mat=materials[i].clone();\n\t\t\t\t\t\t\tif (mat.name==\"boardsquare\"){\n\t \t\t\t\t\t\t\tmat=new THREE.MeshPhongMaterial({\n\t\t\t\t\t\t\t\t\t\t\t// light\n\t\t\t\t\t\t\t\t\t\t\tspecular: '#050505',\n\t\t\t\t\t\t\t\t\t\t\t// intermediate\n\t\t\t\t\t\t\t\t\t\t\t//color: '#ff0000',\n\t\t\t\t\t\t\t\t\t\t\t// dark\n\t\t\t\t\t\t\t\t\t\t\temissive: '#000000',\n\t\t\t\t\t\t\t\t\t\t\tshininess: 250,\n\t\t\t\t\t\t\t\t\t\t\t//transparent: true,\n\t\t\t\t\t\t\t\t\t\t\tmap: texBoard,\n\t\t\t\t\t\t\t\t\t\t\tbumpMap: texBoard,\n\t\t\t\t\t\t\t\t\t\t\tbumpScale:0.01,\n\t\t\t\t\t\t\t\t\t\t\tname:\"boardsquare\",\n\t\t\t\t\t\t\t\t\t\t});\n\t \t\t\t\t\t\t}\n\t \t\t\t\t\t\tif (mat.name==\"board\"){\n\t \t\t\t\t\t\t\tmat=new THREE.MeshPhongMaterial({\n\t \t\t\t\t\t\t\t\tcolor: '#000000',\n\t \t\t\t\t\t\t\t\tshininess: 500,\n\t \t\t\t\t\t\t\t\tspecular: '#888888',\n\t \t\t\t\t\t\t\t\t//ambient: '#000000',\n\t \t\t\t\t\t\t\t\temissive: '#000000',\n\t \t\t\t\t\t\t\t\tname: \"board\",\n\t \t\t\t\t\t\t\t});\n\t \t\t\t\t\t\t}\n\t \t\t\t\t\t\tmaterials0.push(mat);\n\t \t\t\t\t\t}\n\n\n\t\t\t\t\t\tvar board = new THREE.Mesh( geometry , new THREE.MultiMaterial(materials0));\t\n\t\t\t\t\t\t//board.overdraw = true;\n\t\t\t\t\t      \n\t  \t\t\t\t\tcallback(board);\n\t\t\t\t\t});\t\t\t\n\t\t\t\t});\n\t\t\t});\n\t\t\t\t\n\t\t}\n\t\t\n\t\tvar boardCanvas={\n\t\t\t'plain': null,\n\t\t\t'notation': null,\n\t\t}\n\t\tfunction RequestBoardCanvas(avatar,notation,callback) {\n\t\t\tvar key=notation?'notation':'plain';\n\t\t\tif(boardCanvas[key])\n\t\t\t\tcallback(boardCanvas[key]);\n\t\t\telse {\n\t\t\t\tvar bc=document.createElement('canvas');\n\t\t\t\tboardCanvas[key]=bc;\n\t\t\t\tbc.width=1024;\n\t\t\t\tbc.height=1024;\n\t\t\t\tDrawBoard(avatar,bc,notation,function() {\n\t\t\t\t\tcallback(bc);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar BOARDSIZE = SIZE*CSIZE*1.18;\n\t\t\n\t\txdv.createGadget(\"board\",{\n\t\t\tbase: {\n\t\t\t},\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"canvas\",\n\t\t\t\twidth: BOARDSIZE,\n\t\t\t\theight: BOARDSIZE,\n\t\t\t\tdraw: function(ctx) {\n\t\t\t\t\tctx.save();\n\t\t\t\t\tRequestBoardCanvas(this,false,function(boardCanvas){\n\t\t\t\t\t\tctx.drawImage(boardCanvas,-BOARDSIZE/2,-BOARDSIZE/2,BOARDSIZE,BOARDSIZE);\t\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tscale: [boardScale,boardScale,boardScale],\n\t\t\t\tz:150,\n\t\t\t\treceiveShadow:true,\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\tcreate3DBoard.call(this,false,callback);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\txdv.createGadget(\"boardnotations\",{\n\t\t\tbase: {\n\t\t\t},\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"canvas\",\n\t\t\t\twidth: SIZE*CSIZE*1.18,\n\t\t\t\theight: SIZE*CSIZE*1.18,\n\t\t\t\tdraw: function(ctx,pixSize){\n\t\t\t\t\tctx.save();\n\t\t\t\t\tRequestBoardCanvas(this,true,function(boardCanvas){\n\t\t\t\t\t\tctx.drawImage(boardCanvas,-BOARDSIZE/2,-BOARDSIZE/2,BOARDSIZE,BOARDSIZE);\t\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tscale: [boardScale,boardScale,boardScale],\n\t\t\t\tz:150,\n\t\t\t\treceiveShadow:true,\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\tcreate3DBoard.call(this,true,callback);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tfor(var pos=0;pos<SIZE*SIZE;pos++) \n\t\t\t(function(pos) {\n\t\t\t\tvar coord=Coord(pos);\n\t\t\t\tvar cellClass;\n\t\t\t\tif($this.g.excludeMap[pos])\n\t\t\t\t\tcellClass=\"cell-exclude\";\n\t\t\t\telse if(pos%2)\n\t\t\t\t\tcellClass=\"cell-white\";\n\t\t\t\telse\n\t\t\t\t\tcellClass=\"cell-black\";\n\t\t\t\tif(pos==$this.g.home)\n\t\t\t\t\tcellClass+=\" cell-home\";\n\t\t\t\txdv.createGadget(\"cell#\"+pos,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tx: coord[0],\n\t\t\t\t\t\ty: coord[1],\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tz: 1,\n\t\t\t\t\t\ttype: \"element\",\n\t\t\t\t\t\tinitialClasses: \"cell\",\n\t\t\t\t\t\twidth: CSIZE*1.01,\n\t\t\t\t\t\theight: CSIZE*1.01,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.createGadget(\"clicker#\"+pos,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tx: coord[0],\n\t\t\t\t\t\ty: coord[1],\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tz: 3,\n\t\t\t\t\t\ttype: \"element\",\n\t\t\t\t\t\tinitialClasses: \"clicker\",\n\t\t\t\t\t\twidth: CSIZE,\n\t\t\t\t\t\theight: CSIZE,\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\tz: fieldZ,\n\t\t\t\t\t\ttype: \"meshfile\",\n\t\t\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/ring-target.js\",\n\t\t\t\t\t\tflatShading: true,\n\t\t\t\t\t\tcastShadow: true,\n\t\t\t\t\t\tsmooth : 0,\n\t\t\t\t\t\tscale:[ringScale,ringScale,ringScale],\n\t\t\t\t\t\tmaterials: { \n\t\t\t\t\t\t\t\"square\" : {\n\t\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"ring\" : {\n\t\t\t\t\t\t\t\tcolor : 0xffffff,\n\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})(pos);\n\t\t\n\t\tvar PIECE_TEXT_SZ=512;\n\t\tfunction DrawPieceTexture(avatar,cnv,bWhite,callback){\n\t\t\tvar url=\"image|\"+fullPath+\"/res/xd-view/meshes/woodtoken-diffuse\"+(bWhite?\".jpg\":\"-black.jpg\");\n\t\t\tavatar.getResource(url,function(img){\n\t\t\t\tvar ctx = cnv.getContext('2d');\n\t\t\t\tctx.drawImage(img,0,0,PIECE_TEXT_SZ, PIECE_TEXT_SZ);\t\n\t\t\t\tcallback();\n\t\t\t});\n\t\t}\n\t\tvar pieceTextures={\n\t\t\t'white': null,\n\t\t\t'plain': null,\n\t\t}\n\t\tfunction RequestPieceTexture(avatar,bWhite,bKing,callback) {\n\t\t\tvar key=bWhite?'white':'plain';\n\t\t\tif(Array.isArray(pieceTextures[key]))\n\t\t\t\tpieceTextures[key].push(callback);\n\t\t\telse if(pieceTextures[key]===null) {\n\t\t\t\tvar bc=document.createElement('canvas');\n\t\t\t\tbc.width=PIECE_TEXT_SZ;\n\t\t\t\tbc.height=PIECE_TEXT_SZ;\t\t\t\t\n\t\t\t\tpieceTextures[key]=[callback];\n\t\t\t\tDrawPieceTexture(avatar,bc,bWhite,function() {\n\t\t\t\t\tvar texPiece = new THREE.Texture(bc);\n\t\t\t\t\ttexPiece.needsUpdate = true;\n\t\t\t\t\twhile(pieceTextures[key].length>0)\n\t\t\t\t\t\t(pieceTextures[key].shift())(texPiece);\n\t\t\t\t\tpieceTextures[key] = texPiece;\n\t\t\t\t});\n\t\t\t} else\n\t\t\t\tcallback(pieceTextures[key]);\n\t\t}\n\t\t\n\t\tfunction create3DPiece(bWhite,bKing,callback){\n\t\t\tvar smooth=0;\n\t\t\tvar url=\"smoothedfilegeo|\"+smooth+\"|\"+fullPath +\"/res/xd-view/meshes/woodtoken.js\";\n\t\t\tvar avat=this;\n\t\t\tthis.getResource(url,function(geometry , materials){\n\t\t\t\t\n\t\t\t\tRequestPieceTexture(avat,bWhite,bKing,function(texPiece) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar materials0=[];\t\t\n\t\t\t\t\t\tfor(var i=0;i<materials.length;i++){\n\t\t\t\t\t\t\tvar mat=materials[i].clone();\n\t\t\t\t\t\t\tif (mat.name==\"wood\"){\n\t \t\t\t\t\t\t\tmat=new THREE.MeshPhongMaterial({\n\t\t\t\t\t\t\t\t\t\t\t// light\n\t \t\t\t\t\t\t\t\t\t\tspecular: '#222222',\n\t \t\t\t\t\t\t\t\t\t\tcolor: '#dddddd',\n\t\t\t\t\t\t\t\t\t\t\tshininess: 30,\n\t\t\t\t\t\t\t\t\t\t\tmap: texPiece,\n\t\t\t\t\t\t\t\t\t\t\tbumpMap: texPiece,\n\t\t\t\t\t\t\t\t\t\t\tbumpScale:0.03,\n\t\t\t\t\t\t\t\t\t\t\tname:\"wood\",\n\t\t\t\t\t\t\t\t\t\t});\n\t \t\t\t\t\t\t}\n\t \t\t\t\t\t\tif (mat.name==\"redstar\"){\n\t \t\t\t\t\t\t\tmat=new THREE.MeshPhongMaterial({\n\t \t\t\t\t\t\t\t\tcolor: '#aa0000',\n\t \t\t\t\t\t\t\t\tshininess: 150,\n\t \t\t\t\t\t\t\t\tspecular: '#666666',\n\t \t\t\t\t\t\t\t\temissive: '#000000',\n\t \t\t\t\t\t\t\t\tname: \"redstar\",\n\t \t\t\t\t\t\t\t\ttransparent:!(bKing),\n\t \t\t\t\t\t\t\t\topacity: bKing?1:0,\n\t \t\t\t\t\t\t\t\tshading: THREE.FlatShading,\n\t \t\t\t\t\t\t\t});\n\t \t\t\t\t\t\t}\n\t \t\t\t\t\t\tmaterials0.push(mat);\n\t \t\t\t\t\t}\n\n\n\t\t\t\t\t\tvar piece = new THREE.Mesh( geometry , new THREE.MultiMaterial(materials0));\t\n\t\t\t\t\t\t//board.overdraw = true;\n\t\t\t\t\t      \n\t  \t\t\t\t\tcallback(piece);\n\t\t\t\t});\n\t\t\t});\t\t\t\n\t\t}\n\t\t\n\t\tfunction MakePiece(index,side,type) {\n\t\t\tvar clipx;\n\t\t\tif(side==$this.mOptions.attackers)\n\t\t\t\tclipx=0;\n\t\t\telse if(type=='k')\n\t\t\t\tclipx=310;\n\t\t\telse\n\t\t\t\tclipx=155;\n\t\t\txdv.createGadget(\"piece#\"+index,{\n\t\t\t\tbase: {\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tz: 4,\n\t\t\t\t\ttype: \"sprite\",\n\t\t\t\t\tfile: fullPath+\"/res/xd-view/meshes/ardri-sprites.png\",\n\t\t\t\t\tclipwidth: 155,\n\t\t\t\t\tclipheight: 155,\n\t\t\t\t\tclipx: clipx,\n\t\t\t\t\tclipy: 0,\n\t\t\t\t\twidth: CSIZE*.85,\n\t\t\t\t\theight: CSIZE*.85,\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\tcastShadow: true,\t\n\t\t\t\t\treceiveShadow: false,\n\t\t\t\t\tscale:[pieceScale,pieceScale,(type==\"k\")?pieceScale*1.5:pieceScale],\n\t\t\t\t\tcreate: function(callback){\n\t\t\t\t\t\tcreate3DPiece.call(this,side!=$this.mOptions.attackers,type==\"k\",callback);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t}\n\t\t\n\t\tvar index=0;\n\t\tMakePiece(index++,-this.mOptions.attackers,'k');\n\t\tfor(var i=0;i<this.mOptions.initial.defenders.soldiers.length;i++)\n\t\t\tMakePiece(index++,-this.mOptions.attackers,'s');\n\t\tfor(var i=0;i<this.mOptions.initial.attackers.length;i++)\n\t\t\tMakePiece(index++,this.mOptions.attackers,'s');\n\t\t\n\t\t\n\t\t// flat screens\n\t\tfunction createScreen(videoTexture) {\n\t\t\tvar $this=this;\n\t\t\tvar gg=new THREE.PlaneGeometry(4,3,1,1);\n\t\t\tvar gm=new THREE.MeshPhongMaterial({color:0xffffff,map:videoTexture,shading:THREE.FlatShading});\n\t\t\tvar mesh = new THREE.Mesh( gg , gm );\n\t\t\t$this.objectReady(mesh); \n\t\t\treturn null;\n\t\t};\t\n\t\tvar scaleScreen=2;\n\t\tvar zScreen=2000;\n\t\txdv.createGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen,\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videoabis\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen-1000,\n\t\t\t\tscale: [scaleScreen/4,scaleScreen/4,scaleScreen/4],\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen,\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\t\n\t\txdv.createGadget(\"videobbis\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen-1000,\n\t\t\t\tscale: [scaleScreen/4,scaleScreen/4,scaleScreen/4],\n\t\t\t},\n\t\t});\t\n\t}\n\t\n\tvar tokens={},tokenCounter=1;\n\n\tView.Game.xdBuildScene = function(xdv) {\n\t\txdv.updateGadget(\"extralights\",{\n\t\t\t\"3d\":{\n\t\t\t\tvisible:true,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"board\",{\n\t\t\tbase: {\n\t\t\t\tvisible: !this.mNotation,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"boardnotations\",{\n\t\t\tbase: {\n\t\t\t\tvisible: this.mNotation,\n\t\t\t},\n\t\t});\t\t\t\n\t\tfor(var pos=0;pos<SIZE*SIZE;pos++) {\n\t\t\tvar coord=Coord(pos);\n\t\t\txdv.updateGadget(\"cell#\"+pos,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tvar xScreen=0;\n\t\tvar yScreen=9000;\n\t\tvar thumbDist=.99;\n\t\tvar thumbOffset=4000;\n\t\txdv.updateGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: 1,\n\t\t\t\tx: xScreen,\n\t\t\t\ty: this.mViewAs==1?yScreen:-yScreen,\n\t\t\t\trotate: this.mViewAs==1?180:0,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"videoabis\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: -1,\n\t\t\t\tx: this.mViewAs==1?-thumbOffset:thumbOffset,\n\t\t\t\ty: this.mViewAs==1?thumbDist*yScreen:-thumbDist*yScreen,\n\t\t\t\trotate: this.mViewAs==1?180:0,\n\t\t\t},\n\t\t});\n\n\t\txdv.updateGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: -1,\n\t\t\t\tx: -xScreen,\n\t\t\t\ty: this.mViewAs==1?-yScreen:yScreen,\n\t\t\t\trotate: this.mViewAs==1?0:180,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"videobbis\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: 1,\n\t\t\t\tx: this.mViewAs==1?thumbOffset:-thumbOffset,\n\t\t\t\ty: this.mViewAs==1?-thumbDist*yScreen:thumbDist*yScreen,\n\t\t\t\trotate: this.mViewAs==1?0:180,\n\t\t\t},\n\t\t});\n\t}\n\t\n\tView.Board.xdDisplay = function(xdv, aGame) {\n\t\tfor(var i=0;i<this.pieces.length;i++) {\n\t\t\tvar piece=this.pieces[i];\n\t\t\tif(piece.p<0)\n\t\t\t\txdv.updateGadget(\"piece#\"+i,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\telse {\n\t\t\t\tvar coord=Coord(piece.p);\n\t\t\t\txdv.updateGadget(\"piece#\"+i,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\tx: coord[0],\n\t\t\t\t\t\ty: coord[1],\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\tz:0,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\t\n\tView.Board.xdBuildHTStateMachine = function(xdv, htsm, aGame) {\n\t\tvar $this=this;\n\t\tvar move={};\n\t\t\n\t\tfunction Clean(args) {\n\t\t\tfor(var pos=0;pos<SIZE*SIZE;pos++) {\n\t\t\t\txdv.updateGadget(\"clicker#\"+pos,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\tclick: null,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\txdv.updateGadget(\"cell#\"+pos,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tclasses: \"\",\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\t$this.pieces.forEach(function(piece) {\n\t\t\t\txdv.updateGadget(\"piece#\"+piece.i,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tclick: null,\n\t\t\t\t\t}\n\t\t\t\t});\t\t\t\t\t\t\t\t\t\n\t\t\t});\n\t\t}\n\t\tfunction SelectFrom(args) {\n\t\t\tvar poss={};\n\t\t\tfunction Click(pos) {\n\t\t\t\thtsm.smQueueEvent(\"E_CLICK\",{pos:pos});\n\t\t\t}\n\t\t\t$this.mMoves.forEach(function(move) {\n\t\t\t\tposs[move.f]=true;\n\t\t\t});\n\t\t\tfor(var pos in poss)\n\t\t\t\t(function(pos) {\n\t\t\t\t\tvar index=$this.board[pos];\n\t\t\t\t\txdv.updateGadget(\"piece#\"+index,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\tClick(pos);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t\txdv.updateGadget(\"clicker#\"+pos,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\tClick(pos);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\" : {\n\t\t\t\t\t\t\tmaterials : {\n\t\t\t\t\t\t\t\t\"ring\" : {\n\t\t\t\t\t\t\t\t\tcolor : 0xffffff,\n\t\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t\txdv.updateGadget(\"cell#\"+pos,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\tclasses: \"cell-select\",\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t})(pos);\n\t\t}\t\t\n\t\tfunction SaveFrom(args) {\n\t\t\tmove.f=parseInt(args.pos);\n\t\t}\n\t\tfunction SelectTo(args) {\n\t\t\tvar poss={};\n\t\t\txdv.updateGadget(\"piece#\"+$this.board[move.f],{\n\t\t\t\tbase: {\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\thtsm.smQueueEvent(\"E_CANCEL\",{});\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t});\t\t\t\t\t\n\t\t\txdv.updateGadget(\"clicker#\"+move.f,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\thtsm.smQueueEvent(\"E_CANCEL\",{});\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"3d\" : {\n\t\t\t\t\tmaterials : {\n\t\t\t\t\t\t\"ring\" : {\n\t\t\t\t\t\t\tcolor : 0xff8800,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t});\t\t\t\t\t\n\t\t\txdv.updateGadget(\"cell#\"+move.f,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tclasses: \"cell-cancel\",\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t});\t\t\t\t\t\n\t\t\tfunction Click(pos) {\n\t\t\t\thtsm.smQueueEvent(\"E_CLICK\",{move:poss[pos]});\n\t\t\t}\n\t\t\t$this.mMoves.forEach(function(m) {\n\t\t\t\tif(m.f==move.f)\n\t\t\t\t\tposs[m.t]=m;\n\t\t\t});\n\t\t\tfor(var pos in poss)\n\t\t\t\t(function(pos) {\n\t\t\t\t\txdv.updateGadget(\"clicker#\"+pos,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\tClick(pos);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\" : {\n\t\t\t\t\t\t\tmaterials : {\n\t\t\t\t\t\t\t\t\"ring\" : {\n\t\t\t\t\t\t\t\t\tcolor : 0xffffff,\n\t\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t\txdv.updateGadget(\"cell#\"+pos,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\tclasses: \"cell-select\",\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\n\t\t\t\t})(pos);\n\t\t}\n\t\tfunction SaveTo(args) {\n\t\t\tmove.t=parseInt(args.move.t);\n\t\t\tmove.c=args.move.c;\n\t\t}\n\t\tfunction Animate(args) {\n\t\t\t$this.taflAnimate(xdv,aGame,move,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_ANIMATED\",{});\n\t\t\t});\n\t\t}\n\t\tfunction SendMove(args) {\n\t\t\taGame.MakeMove(move);\n\t\t}\n\t\tfunction Cancel(args) {\n\t\t\tmove={}\n\t\t}\n\t\thtsm.smTransition(\"S_INIT\", \"E_INIT\", \"S_SELECT_FROM\", [ ]);\n\t\thtsm.smEntering(\"S_SELECT_FROM\",[SelectFrom]);\n\t\thtsm.smLeaving(\"S_SELECT_FROM\",[Clean]);\n\t\thtsm.smTransition(\"S_SELECT_FROM\", \"E_CLICK\", \"S_SELECT_TO\", [ SaveFrom, SelectTo ]);\n\t\thtsm.smLeaving(\"S_SELECT_TO\",[Clean]);\n\t\thtsm.smTransition(\"S_SELECT_TO\", \"E_CLICK\", \"S_ANIMATE\", [ SaveTo, Animate ]);\n\t\thtsm.smTransition(\"S_SELECT_TO\", \"E_CANCEL\", \"S_SELECT_FROM\", [ Cancel ]);\n\t\thtsm.smTransition(\"S_ANIMATE\", \"E_ANIMATED\", \"S_DONE\", [ SendMove ]);\n\t\thtsm.smTransition([\"S_SELECT_FROM\",\"S_SELECT_TO\",\"S_ANIMATE\"], \"E_END\", \"S_DONE\", [ ]);\n\t\thtsm.smEntering(\"S_DONE\",[Clean]);\n\t\thtsm.smTransition(\"S_DONE\", \"E_END\", null, [ ]);\n\t}\n\t\n\tView.Board.xdPlayedMove = function(xdv, aGame, aMove) {\n\t\taGame.mOldBoard.taflAnimate(xdv,aGame,aMove,function() {\n\t\t\taGame.MoveShown();\n\t\t});\n\t}\n\t\n\tView.Board.taflAnimate = function(xdv,aGame,aMove,callback) {\n\t\tvar $this=this;\n\t\tvar animCount=0;\n\t\t\n\t\tfunction EndAnim() {\n\t\t\tif(--animCount==0)\n\t\t\t\tcallback();\n\t\t}\n\t\tvar piece=this.pieces[this.board[aMove.f]];\n\n\t\tvar soundName=this.mWho==aGame.mOptions.attackers?\"move1\":\"move3\";\n\t\tif (aGame.mSkin=='thanksgiving')\n\t\t\tsoundName=piece.t=='k'?\"move3\":\"move1\"; \n\t\taGame.PlaySound(soundName);\n\n\t\tvar coord=Coord(aMove.t);\n\t\txdv.updateGadget(\"piece#\"+piece.i,{\n\t\t\tbase: {\n\t\t\t\tx: coord[0],\n\t\t\t\ty: coord[1],\n\t\t\t},\n\t\t},600,function() {\n\t\t\tif(aMove.c.length>0) {\n\t\t\t\tvar soundName=\"death\"+(Math.floor(Math.random()*3)+1);\n\t\t\t\taGame.PlaySound(soundName);\n\t\t\t\taMove.c.forEach(function(pos1) {\n\t\t\t\t\tanimCount++;\n\t\t\t\t\tvar piece1=$this.pieces[$this.board[pos1]];\n\t\t\t\t\txdv.updateGadget(\"piece#\"+piece1.i,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\t\tz: -1000,\n\t\t\t\t\t\t}\n\t\t\t\t\t},600,EndAnim);\n\t\t\t\t});\n\t\t\t} else\n\t\t\t\tcallback();\n\t\t});\n\t}\n\t\n})();\n"],"file":"tafl-brandubh-view.js"}