{"version":3,"names":[],"mappings":"","sources":["reversi-xd-view.js"],"sourcesContent":["/*\n *\n * Copyright (c) 2013 - Jocly - www.jocly.com\n * \n * This file is part of the Jocly game platform and cannot be used outside of this context without the written permission of Jocly.\n * \n */\n\n(function() {\n\tView.Game.Coords = function(row,col){\t\t\n\t\treturn {x:(col+(1-this.g.NBCOLS)/2)*this.g.CSIZE,y:(row+(1-this.g.NBROWS)/2)*this.g.CSIZE};\n\t}\n\tView.Game.Coords2d = function(row,col){\t\n\t\treturn {x:(col+(1-this.g.NBCOLS)/2)*this.g.CSIZE_2D,y:(row+(1-(this.g.NBROWS-this.g.addedRowsFor2d))/2)*this.g.CSIZE_2D};\n\t}\n\t\n\tView.Game.refreshScore = function(xdv,nbBlacks,nbWhites){\n\t\tif (this.g.canvasScore !== undefined){\t\t\n\t\t\tvar cnv=this.g.canvasScore;\n\t\t\tvar ctx=cnv.getContext(\"2d\");\n\t\t\tctx.clearRect(0,0,cnv.width,cnv.height);\n\t\t\t\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.font = '100px Verdana';\n\t\n\t\t\tctx.fillStyle = \"rgba(255,255,255,1)\";\n\t\t\tctx.fillText(nbWhites,cnv.width/4,cnv.height/2);\n\t\t\tctx.fillStyle = \"rgba(0,0,0,1)\";\n\t\t\tctx.fillText(nbBlacks,cnv.width/4*3,cnv.height/2);\n\t\n\t\t\tif(this.g.textureScore)\n\t\t\t\tthis.g.textureScore.needsUpdate=true;\n\t\t\t\n\t\t\txdv.updateGadget(\"scoreboardA\",{\n\t\t\t\t\"2d\":{\n\t\t\t\t\tvisible:true,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\t\n\tView.Game.xdInit = function(xdv) {\n\t\t\n\t\tvar fullPath=this.mViewOptions.fullPath;\n\t\tthis.g.NBCOLS=this.mOptions.width;\n\t\tthis.g.NBROWS=this.mOptions.height;\n\t\tthis.g.NBCELLS=Math.max(this.g.NBCOLS,this.g.NBROWS);\n\t\tthis.g.CSIZE=12000/this.g.NBCELLS;\t\t\t\t\t\n\n\t\t// handling 2d with potential extra row for score\n\t\tthis.g.addedRowsFor2d=0;\n\t\tif ((this.g.NBCOLS>this.g.NBROWS)&&(this.g.NBCOLS-this.g.NBROWS<2)){\n\t\t\tthis.g.addedRowsFor2d=1;\n\t\t}  \n\t\tif (this.g.NBCOLS<=this.g.NBROWS){\n\t\t\tthis.g.addedRowsFor2d=1;\n\t\t}  \n\n\t\tthis.g.NBCELLS_2D=Math.max(this.g.NBCOLS,this.g.NBROWS+this.g.addedRowsFor2d);\n\t\tthis.g.CSIZE_2D=12000/this.g.NBCELLS_2D;\t\t\t\t\t\n\t\t\n\t\tvar $this=this;\n\n\t\tthis.rCreateScreens(xdv);\n\n\t\txdv.createGadget(\"pass-board-w\",{\n\t\t\tbase: {\n\t\t\t\ttype: \"element\",\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: 8000,\n\t\t\t\theight: 8000,\n\t\t\t\topacity:0,\n\t\t\t\tz: 108,\n\t\t\t\tcenter: {x:0,y:0},\n\t\t\t\tcss: {\n\t\t\t\t\t\"background-color\": \"White\",\n\t\t\t\t\t\"border-radius\": \"2rem\",\n\t\t\t\t\t\"box-shadow\": \"1px 1px 12px #555\",\n\t\t\t\t\t\"background-image\": \"url(\"+fullPath+\"/res/xd-view/pass-light.png)\",\n\t\t\t\t\t\"background-size\": \"contain\"\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"pass-board-b\",{\n\t\t\tbase: {\n\t\t\t\ttype: \"element\",\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: 8000,\n\t\t\t\theight: 8000,\n\t\t\t\topacity:0,\n\t\t\t\tz: 108,\n\t\t\t\tcenter: {x:0,y:0},\n\t\t\t\tcss: {\n\t\t\t\t\t\"background-color\": \"Black\",\n\t\t\t\t\t\"border-radius\": \"2rem\",\n\t\t\t\t\t\"box-shadow\": \"1px 1px 12px #555\",\n\t\t\t\t\t\"background-image\": \"url(\"+fullPath+\"/res/xd-view/pass-dark.png)\",\n\t\t\t\t\t\"background-size\": \"contain\"\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tfunction createPiece3D(avatar,callback){\n\t\t\t\n\t\t\tfunction instanciatePiece(){\n\t\t\t\tvar mesh = new THREE.Mesh($this.g.pieceGeo,$this.g.pieceMaterial);\n\t\t\t\tcallback(mesh);\n\t\t\t}\n\t\t\t\t\n\t\t\tif (($this.g.pieceMaterial === undefined) && ($this.g.pieceGeo === undefined)) {\n\t\t\t\t\n\t\t\t\t// prepare canvas\n\t\t\t\tvar TXT_CNV_SZ=512;\n\t\t\t\tvar canvasDiffuse=document.createElement('canvas');\n\t\t\t\tcanvasDiffuse.width=TXT_CNV_SZ;\n\t\t\t\tcanvasDiffuse.height=TXT_CNV_SZ;\n\t\t\t\tvar textureDiff =  new THREE.Texture(canvasDiffuse);\t\t\t\t\t\n\t\t\t\tvar canvasBump=document.createElement('canvas');\n\t\t\t\tcanvasBump.width=TXT_CNV_SZ;\n\t\t\t\tcanvasBump.height=TXT_CNV_SZ;\n\t\t\t\tvar textureBump =  new THREE.Texture(canvasBump);\n\t\t\t\t// resources\n\t\t\t\tvar nbRes=3;\n\t\t\t\tvar diffuseMap;\n\t\t\t\tvar bumpMap;\n\t\t\t\tvar pieceGeo;\n\t\t\t\t\n\t\t\t\tfunction checkLoaded(){\n\t\t\t\t\tnbRes--;\n\t\t\t\t\tif (nbRes==0){\n\t\t\t\t\t\t// paint textures\n\t\t\t\t\t\tvar ctx=canvasDiffuse.getContext(\"2d\");\n\t\t\t\t\t\tctx.drawImage(diffuseMap,0,0,diffuseMap.width,diffuseMap.height,0,0,TXT_CNV_SZ,TXT_CNV_SZ);\n\t\t\t\t\t\tvar ctxBump=canvasBump.getContext(\"2d\");\n\t\t\t\t\t\tctxBump.drawImage(bumpMap,0,0,bumpMap.width,bumpMap.height,0,0,TXT_CNV_SZ,TXT_CNV_SZ);\n\n\t\t\t\t\t\ttextureDiff.needsUpdate = true;\n\t\t\t\t\t\ttextureBump.needsUpdate = true;\n\t\t\t\t\t\t$this.g.pieceMaterial = new THREE.MultiMaterial([new THREE.MeshPhongMaterial({ \n\t\t\t\t\t\t\t\tname: \"Material\",\n\t\t\t\t\t\t \t\tspecular:\"#111111\",\n\t\t\t\t\t\t \t\tshininess:10,\n\t\t\t\t\t\t \t\tshading: THREE.SmoothShading,\n\t\t\t\t\t\t \t\tmap:textureDiff,\n\t\t\t\t\t\t \t\tbumpMap:textureBump,\n\t\t\t\t\t\t \t\tbumpScale:0.1,\n\t\t\t\t\t\t })]);\n\t\t\t\t\t\t$this.g.pieceGeo = pieceGeo;\n\t\t\t\t\t\tinstanciatePiece();\n\t\t\t\t\t\t//callback(mesh);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/xd-view/reversi-pieces-2-textures.png\",\n\t\t\t\t\tfunction(img){\n\t\t\t\t\t\tdiffuseMap=img;\n\t\t\t\t\t\tcheckLoaded();\n\t\t\t\t\t});\n\t\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/xd-view/reversi-pieces-2-textures-bump.png\",\n\t\t\t\t\tfunction(img){\n\t\t\t\t\t\tbumpMap=img;\n\t\t\t\t\t\tcheckLoaded();\n\t\t\t\t\t});\n\t\t\t\tavatar.getResource(\"smoothedfilegeo|0|\"+fullPath+\"/res/xd-view/reversi-pieces-6.js\",\n\t\t\t\t\tfunction(geometry , materials){\n\t\t\t\t\t\tpieceGeo=geometry;\n\t\t\t\t\t\tcheckLoaded();\n\t\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tinstanciatePiece();\n\t\t\t}\n\t\t}\n\n\n\t\tfunction createGridBoard(avatar,callback, notations, viewAs){\n\t\n\t\t\tvar HEIGHT = $this.g.NBROWS;\n\t\t\tvar SWIDTH = $this.g.NBCOLS;\n\t\t\tvar SIZE=Math.floor(12000/$this.g.NBCELLS);\n\t\t\t\n\t\t\t\n\t\t\tvar parent=new THREE.Object3D();\t\n\t\t\tvar TEXTURE_CANVAS_CX=1024;\n\t\t\tvar TEXTURE_CANVAS_CY=TEXTURE_CANVAS_CX/$this.g.NBCOLS*$this.g.NBROWS;\n\t\t\tvar TEXTURE_CANVAS_CSQUARE=Math.max(TEXTURE_CANVAS_CX,TEXTURE_CANVAS_CY);\n\t\t\t\n\t\t\tvar canvasDiffuse=document.createElement('canvas');\n\t\t\tcanvasDiffuse.width=TEXTURE_CANVAS_CX;\n\t\t\tcanvasDiffuse.height=TEXTURE_CANVAS_CY;\n\t\t\tvar textureDiff =  new THREE.Texture(canvasDiffuse);\t\t\t\t\t\n\t\t\tvar canvasBump=document.createElement('canvas');\n\t\t\tcanvasBump.width=TEXTURE_CANVAS_CX;\n\t\t\tcanvasBump.height=TEXTURE_CANVAS_CY;\n\t\t\tvar textureBump =  new THREE.Texture(canvasBump);\n\t\t\tvar margin=0; //prct\n\t\t\tif (avatar.options.margin!==undefined) margin=avatar.options.margin;\n\t\t\t\n\t\t\t\n\t\t\tfunction paintNotations(ctx,cellCx,cellCy,fillStyle){\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t\tctx.font = Math.ceil(cellCx / 5) + 'px Monospace';\n\t\t\t\tfor(var r=0;r<HEIGHT;r++)\n\t\t\t\t\tfor(var c=0;c<SWIDTH;c++) {\n\t\t\t\t\t\tif ($this.isAlive(r,c))\n\t\t\t\t\t\t\tctx.fillText(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(c)+(r+1),(c+(1-SWIDTH)/2)*cellCx,(r+(1-HEIGHT)/2)*cellCy);\n\t\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/images/wood-chipboard-5.jpg\",function(img){\n\t\t\t\t\n\t\t\t\tvar blackColor=\"rgba(51, 204, 0,0.4)\";\n\t\t\t\tvar whiteColor=\"rgba(0, 128, 0,0.4)\"\n\n\t\t\t\t// create board floor\n\t\t\t\tvar ctx=canvasDiffuse.getContext(\"2d\");\n\t\t\t\tctx.translate(TEXTURE_CANVAS_CX/2,TEXTURE_CANVAS_CY/2);\n\t\t\t\tctx.drawImage(img,-TEXTURE_CANVAS_CSQUARE/2,-TEXTURE_CANVAS_CSQUARE/2,TEXTURE_CANVAS_CSQUARE,TEXTURE_CANVAS_CSQUARE);\n\t\t\t\t//TEXTURE_CANVAS_SZ=(1+2*margin/100)*SWIDTH*cellCx\n\t\t\t\t\n\t\t\t\tfunction drawCell(ctx,fillStyle,xCenter,yCenter,cx,cy){\n\t\t\t\t\tif ($this.isAlive(r,c))\n\t\t\t\t\t\tctx.fillStyle=fillStyle;\n\t\t\t\t\telse\n\t\t\t\t\t\tctx.fillStyle=\"#000000\";\n\t\t\t\t\tctx.fillRect(xCenter-cx/2,yCenter-cy/2,cx,cy);\n\t\t\t\t}\n\t\t\t\tfunction drawLines(ctx){\n\t\t\t\t\tctx.strokeStyle=\"#000000\";\n\t\t\t\t\tctx.lineWidth=\"2\";\n\t\t\t\t\tfor(var r=0;r<HEIGHT;r++){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo((-SWIDTH/2)*cellCx,(-HEIGHT/2+r)*cellCy);\n\t\t\t\t\t\tctx.lineTo((SWIDTH/2)*cellCx,(-HEIGHT/2+r)*cellCy);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t\tfor(var c=0;c<SWIDTH;c++) {\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo((-SWIDTH/2+c)*cellCx,(-HEIGHT/2)*cellCy);\n\t\t\t\t\t\tctx.lineTo((-SWIDTH/2+c)*cellCx,(HEIGHT/2)*cellCy);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t\tctx.lineWidth=\"4\";\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo((-SWIDTH/2)*cellCx,(-HEIGHT/2)*cellCy);\n\t\t\t\t\tctx.lineTo((SWIDTH/2)*cellCx,(-HEIGHT/2)*cellCy);\n\t\t\t\t\tctx.lineTo((SWIDTH/2)*cellCx,(HEIGHT/2)*cellCy);\n\t\t\t\t\tctx.lineTo((-SWIDTH/2)*cellCx,(HEIGHT/2)*cellCy);\n\t\t\t\t\tctx.lineTo((-SWIDTH/2)*cellCx,(-HEIGHT/2)*cellCy);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// pre paint with black fill color\n\t\t\t\tctx.fillStyle=blackColor;\n\t\t\t\tctx.fillRect(-TEXTURE_CANVAS_CX/2,-TEXTURE_CANVAS_CY/2,TEXTURE_CANVAS_CX,TEXTURE_CANVAS_CY);\n\t\t\t\t// paint diffuse cells\n\t\t\t\tvar cellCx=TEXTURE_CANVAS_CX/(SWIDTH*(1+2*margin/100));\n\t\t\t\tvar cellCy=TEXTURE_CANVAS_CY/(HEIGHT*(1+2*margin/100));\n\t\t\t\tfor(var r=0;r<HEIGHT;r++)\n\t\t\t\t\tfor(var c=0;c<SWIDTH;c++) {\n\t\t\t\t\t\t(function(r,c){\n\t\t\t\t\t\t\tvar i=r+c;\n\t\t\t\t\t\t\tdrawCell(ctx,i%2?blackColor:whiteColor,(c+(1-SWIDTH)/2)*cellCx,(r+(1-HEIGHT)/2)*cellCy,cellCx,cellCy);\n\t\t\t\t\t\t})(r,c);\n\t\t\t\t\t}\n\t\t\t\t// paint diffuse lines\n\t\t\t\tdrawLines(ctx);\n\t\t\t\tvar notationColor=\"#000000\"; //whiteColor;\n\t\t\t\tif (avatar.options.notationColor!==undefined) notationColor=avatar.options.notationColor;\n\t\t\t\tif (notations) \n\t\t\t\t\tpaintNotations(ctx,cellCx,cellCy,notationColor);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// paint bump white + lines\n\t\t\t\tvar ctxBump=canvasBump.getContext(\"2d\");\n\t\t\t\tctxBump.translate(TEXTURE_CANVAS_CX/2,TEXTURE_CANVAS_CY/2);\n\t\t\t\tctxBump.fillStyle=\"#ffffff\";\n\t\t\t\tctxBump.fillRect(-TEXTURE_CANVAS_CX/2,-TEXTURE_CANVAS_CY/2,TEXTURE_CANVAS_CX,TEXTURE_CANVAS_CY);\n\t\t\t\tdrawLines(ctxBump);\n\t\t\t\tif (notations) \n\t\t\t\t\tpaintNotations(ctxBump,cellCx,cellCy,\"#000000\");\n\n\t\t\t\t\n\t\t\t\ttextureDiff.needsUpdate=true;\n\t\t\t\ttextureBump.needsUpdate=true;\n\t\t\t\t\n\t\t\t\tvar bsp=\"#050505\";\n\t\t\t\tif (avatar.options.boardSpecular!==undefined) bsp=avatar.options.boardSpecular;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tvar geo=new THREE.PlaneGeometry((1+2*margin/100)*SWIDTH*SIZE/1000,(1+2*margin/100)*HEIGHT*SIZE/1000);\n\t\t\t\tvar mesh=new THREE.Mesh(geo, new THREE.MeshPhongMaterial({map:textureDiff,bumpMap:textureBump,bumpScale:0.005,specular:bsp,shininess:50}));\n\t\t\t\tmesh.rotation.x=-Math.PI/2;\t\n\t\t\t\tmesh.receiveShadow=true;\n\t\t\t\tparent.add(mesh);\t\t\t\t\t\t\t\t\n\n\t\t\t\t// add border frame\n\t\t\t\tvar cx=(1+2*margin/100)*SWIDTH*SIZE/1000;\n\t\t\t\tvar cy=(1+2*margin/100)*HEIGHT*SIZE/1000;\n\t\t\t\tfunction setupShapeSquare(cx,cy){\n\t\t\t\t\tvar sh = new THREE.Shape();\n\t\t\t\t\tsh.moveTo(-cx/2 , -cy/2);\n\t\t\t\t\tsh.lineTo(cx/2 , -cy/2);\n\t\t\t\t\tsh.lineTo(cx/2 , cy/2);\n\t\t\t\t\tsh.lineTo(-cx/2 , cy/2);\n\t\t\t\t\treturn sh;\t\t\n\t\t\t\t}\t\t\t\t\t\n\t\t\t\tvar bevelSize = .1;\n\t\t\t\tvar frameWidth=0.5;\n\t\t\t\tvar frameShape = setupShapeSquare(cx+frameWidth+bevelSize, cy+frameWidth+bevelSize);\n\t\t\t\tvar holeShape = setupShapeSquare(cx+bevelSize,cy+bevelSize);\n\t\t\t\tframeShape.holes.push(holeShape);\n\t\n\t\t\t\tvar extrudeSettings = {\n\t\t\t\t\tamount: .4 , // main extrusion thickness\n\t\t\t\t\tsteps: 1 , // nb of main extrusion steps\n\t\t\t\t\tbevelSize: bevelSize, \n\t\t\t\t\tbevelThickness:.04,\n\t\t\t\t\tbevelSegments: 1, // nb of bevel segment\n\t\t\t\t};\n\t\n\t\t\t\tvar frameGeo = new THREE.ExtrudeGeometry( frameShape, extrudeSettings );\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.makeRotationX(-Math.PI/2)\n\t\t\t\tframeGeo.applyMatrix(matrix);\n\t\t\t\tvar frameColor=\"#000000\";\n\t\t\t\tif (avatar.options.frameColorFill) frameColor=avatar.options.frameColorFill;\n\t\t\t\tframeMat = new THREE.MeshPhongMaterial({\n\t\t\t\t\tcolor: frameColor,\n\t\t\t\t\tshininess: 250,\n\t\t\t\t\tspecular: '#ffffff',\n\t\t\t\t\temissive: '#000000',\n\t\t\t\t});\n\t\t\t\tvar frameObj = new THREE.Mesh( frameGeo , frameMat);\n\t\t\t\tframeObj.position.y=-extrudeSettings.amount-.01;\n\t\t\t\tparent.add(frameObj);\n\t\t\t\t\n\t\t\t\tvar boardBottom=new THREE.Mesh(geo,frameMat);\n\t\t\t\tboardBottom.position.y=-.3;\n\t\t\t\tboardBottom.rotation.x=Math.PI/2;\t\n\t\t\t\tboardBottom.receiveShadow=true;\n\t\t\t\tparent.add(boardBottom);\n\t\t\t\t\t\t\n\t\t\t\tcallback(parent);\n\t\t\t});\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tfunction checkScoreTextureExists(){\t\t\t\n\t\t\tif($this.g.canvasScore===undefined){\t\t\t\t\n\t\t\t\t$this.g.canvasScore=document.createElement('canvas');\n\t\t\t\t$this.g.canvasScore.width=512;\n\t\t\t\t$this.g.canvasScore.height=$this.g.canvasScore.width/8*3;\n\t\t\t\tif(typeof THREE!=\"undefined\")\n\t\t\t\t\t$this.g.textureScore = new THREE.Texture($this.g.canvasScore);\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\tvar cnvScore2DH=this.g.CSIZE_2D;\n\t\tvar cnvScore2DW=cnvScore2DH/3*8;\n\t\t// var yForScore2D = -6000-cnvScore2DH/2+this.g.addedRowsFor2d*this.g.CSIZE_2D;\n\t\tvar yForScore2D = -6000+this.g.addedRowsFor2d*this.g.CSIZE_2D/2;\n\t\tif (this.g.NBCOLS>this.g.NBROWS)\n\t\t\tyForScore2D += (this.g.NBCOLS-this.g.NBROWS)*this.g.CSIZE_2D/4;\n\t\txdv.createGadget(\"scoreboardA\",{\n\t\t\t\"2d\":{\n\t\t\t\ttype: \"canvas\",\n\t\t\t\twidth:  cnvScore2DW,\n\t\t\t\theight: cnvScore2DH,\n\t\t\t\tx: 0,\n\t\t\t\ty: yForScore2D,\n\t\t\t\tz:10,\n\t\t\t\tdraw: function(ctx) {\n\t\t\t\t\tctx.save();\n\t\t\t\t\tcheckScoreTextureExists();\n\n\t\t\t\t\tctx.drawImage($this.g.canvasScore,-cnvScore2DW/2,-cnvScore2DH/2,cnvScore2DW,cnvScore2DH);\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\t\t\t\t\t\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tz:800,\n\t\t\t\ty:-($this.g.NBROWS+1)/2*this.g.CSIZE,\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\t\n\t\t\t\t\tcheckScoreTextureExists();\n\n\t\t\t\t\tvar plane = new THREE.Mesh( \n\t\t\t\t\t\t\tnew THREE.PlaneGeometry(8,3), \n\t\t\t\t\t      \tnew THREE.MeshPhongMaterial({map:$this.g.textureScore,transparent: true}) );\n\t\t\t\t\tcallback(plane);\n\t\t\t\t},\n\t\t\t\treceiveShadow: true,\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"scoreboardB\",{\n\t\t\t\"3d\":{\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tz:800,\t\t\t\t\n\t\t\t\ty:($this.g.NBROWS+1)/2*this.g.CSIZE,\n\t\t\t\trotate:180,\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\t\n\t\t\t\t\tcheckScoreTextureExists();\n\t\t\t\t\t\n\t\t\t\t\tvar plane = new THREE.Mesh( \n\t\t\t\t\t\t\tnew THREE.PlaneGeometry(8,3), \n\t\t\t\t\t      \tnew THREE.MeshPhongMaterial({map:$this.g.textureScore,transparent: true}) );\n\t\t\t\t\tcallback(plane);\n\t\t\t\t},\n\t\t\t\treceiveShadow: true,\n\t\t\t},\n\t\t});\n\n\n\t\tvar BOARD_CNV_SZ = 1024; // texture painting bitmap width in pixels\n\t\tfunction DrawBoard(avatar,bCanvas,bNotations,callback) {\n\t\t\t\n\t\t\tvar shadowsImg,boardText;\n\t\t\tvar nbRes=2;\n\t\t\t\n\t\t\tconsole.log(\"painting board\",avatar,bCanvas,bNotations);\n\n\t\t\tvar drawIfReady = function(){\n\t\t\t\tnbRes--;\n\t\t\t\tif (nbRes==0){\n\t\t\t\t\tvar csize = BOARD_CNV_SZ/$this.g.NBCELLS_2D;\n\t\t\t\t\tvar hCenteringOffset=(BOARD_CNV_SZ-$this.g.NBCOLS*csize)/2;\n\t\t\t\t\tvar vCenteringOffset=$this.g.addedRowsFor2d*csize+(BOARD_CNV_SZ-($this.g.NBROWS+$this.g.addedRowsFor2d)*csize)/2;\n\t\t\t\t\t// paint texture\n\t\t\t\t\tvar ctx=bCanvas.getContext(\"2d\");\n\t\t\t\t\t//ctx.fillStyle=bNotations?\"#ff0000\":\"#00ff00\";\n\t\t\t\t\tvar textureSz=128;\n\t\t\t\t\tvar x=0;\n\t\t\t\t\twhile (x<BOARD_CNV_SZ){\n\t\t\t\t\t\tvar y=0;\t\t\t\t\t\n\t\t\t\t\t\twhile (y<BOARD_CNV_SZ){\n\t\t\t\t\t\t\tctx.drawImage(boardText,x,y,textureSz,textureSz);\n\t\t\t\t\t\t\ty+=textureSz;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx+=textureSz;\n\t\t\t\t\t}\n\t\t\t\t\t// paint shadows\n\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\tctx.textBaseline = 'middle';\t\n\t\t\t\t\tctx.font = Math.ceil(csize / 5) + 'px Monospace';\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tfor (var r=0; r<$this.g.NBROWS; r++){\t\t\n\t\t\t\t\t\tfor (var c=0; c<$this.g.NBCOLS; c++){\n\t\t\t\t\t\t\tvar coords={x:hCenteringOffset+c*csize,y:vCenteringOffset+r*csize};\n\t\t\t\t\t\t\tif ($this.isAlive(r,c)){\n\t\t\t\t\t\t\t\tctx.drawImage(shadowsImg,coords.x,coords.y,csize,csize);\n\t\t\t\t\t\t\t\tif(bNotations){\n\t\t\t\t\t\t\t\t\tctx.fillText(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(c)+(r+1),coords.x+csize/2, coords.y+csize/2);\n\t\t\t\t\t\t\t\t\t//ctx.fillText(\"[\"+r+\":\"+c+\"]\",coords.x+csize/2, coords.y+csize/2);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tctx.fillStyle=\"rgba(0,0,0,0.5)\";\n\t\t\t\t\t\t\t\tctx.fillRect(coords.x,coords.y,csize,csize);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// clean up with white\n\t\t\t\t\tif (hCenteringOffset>0){\n\t\t\t\t\t\tctx.fillStyle=\"rgba(255,255,255,1)\";\n\t\t\t\t\t\tctx.fillRect(0,0,hCenteringOffset,BOARD_CNV_SZ);\t\t\t\t\t\n\t\t\t\t\t\tctx.fillRect(BOARD_CNV_SZ-hCenteringOffset,0,hCenteringOffset,BOARD_CNV_SZ);\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\t\n\t\t\t\t\tif (vCenteringOffset>0){\n\t\t\t\t\t\t// green area for score\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.fillStyle=\"rgba(35,120,35,1)\";\n\t\t\t\t\t\tctx.fillRect(hCenteringOffset,0,BOARD_CNV_SZ-2*hCenteringOffset,vCenteringOffset);\n\t\t\t\t\t\t// inner shadow\n\t\t\t\t\t    ctx.beginPath();\n\t\t\t\t\t\tctx.rect(hCenteringOffset,0,BOARD_CNV_SZ-2*hCenteringOffset,vCenteringOffset);\t\t\t\n    \t\t\t\t\tctx.clip();\n\t\t\t\t\t    ctx.strokeStyle = \"rgba(35,120,35,1)\";\n\t\t\t\t\t    ctx.lineWidth = 2;\n\t\t\t\t\t    ctx.shadowBlur = 8;\n\t\t\t\t\t    ctx.shadowColor = 'black';\n\t\t\t\t\t    ctx.shadowOffsetX = 0;\n\t\t\t\t\t    ctx.shadowOffsetY = 3;\n    \t\t\t\t\t\n    \t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.rect(hCenteringOffset,0,BOARD_CNV_SZ-2*hCenteringOffset,vCenteringOffset);\n\t\t\t\t\t\tctx.stroke();\n\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// white cleaning at bottom\n\t\t\t\t\t\tctx.fillStyle=\"rgba(255,255,255,1)\";\n\t\t\t\t\t\tctx.fillRect(hCenteringOffset,vCenteringOffset+$this.g.NBROWS*csize,BOARD_CNV_SZ-2*hCenteringOffset,vCenteringOffset);\t\t\t\n\t\t\t\t\t}\t\t\t\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\t\t\t\n\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/xd-view/cellshadows.png\",function(img){\n\t\t\t\tshadowsImg=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\t\t\tavatar.getResource(\"image|\"+fullPath+\"/res/xd-view/boardtexture.jpg\",function(img){\n\t\t\t\tboardText=img;\n\t\t\t\tdrawIfReady();\n\t\t\t});\n\n\t\t}\n\n\t\tvar boardCanvas={\n\t\t\t'plain': null,\n\t\t\t'notation': null,\n\t\t}\t\n\n\t\tfunction RequestBoardCanvas(avatar,notation,callback) {\n\t\t\tvar key=notation?'notation':'plain';\n\t\t\tif(boardCanvas[key]!==null){\n\t\t\t\tconsole.log(\"canvas callback\",key);\n\t\t\t\tcallback(boardCanvas[key]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"creating canvas\",key);\n\t\t\t\tvar bc=document.createElement('canvas');\n\t\t\t\tboardCanvas[key]=bc;\n\t\t\t\tbc.width=BOARD_CNV_SZ;\n\t\t\t\tbc.height=BOARD_CNV_SZ;\n\t\t\t\tDrawBoard(avatar,bc,notation,function() {\n\t\t\t\t\tcallback(bc);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar BOARDSIZE=12000;\n\t\txdv.createGadget(\"board\",{\n\t\t\t\"base\":{\n\t\t\t\tz:0,\n\t\t\t},\n\t\t\t\"2d\" : {\n\t\t\t\ttype : \"canvas\",\n\t\t\t\twidth: BOARDSIZE,\n\t\t\t\theight: BOARDSIZE,\n\t\t\t\tdraw: function(ctx) {\n\t\t\t\t\tconsole.log(\"Draw board without notations\");\n\t\t\t\t\tctx.save();\n\t\t\t\t\tRequestBoardCanvas(this,false,function(bc){\n\t\t\t\t\t\tctx.drawImage(bc,-BOARDSIZE/2,-BOARDSIZE/2,BOARDSIZE,BOARDSIZE);\n\t\t\t\t\t\t//ctx.fillStyle=\"#ff0000\";\t\n\t\t\t\t\t\t//ctx.fillRect(-BOARDSIZE/2,-BOARDSIZE/2,BOARDSIZE,BOARDSIZE);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"3d\":{\t\t\t\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\tcreateGridBoard(this,callback,false,1);\n\t\t\t\t},\n\t\t\t}\n\n\t\t});\n\t\txdv.createGadget(\"boardNotations\",{\n\t\t\t\"base\":{\n\t\t\t\tz:0,\n\t\t\t},\n\t\t\t\"2d\" : {\n\t\t\t\ttype : \"canvas\",\n\t\t\t\twidth: BOARDSIZE,\n\t\t\t\theight: BOARDSIZE,\n\t\t\t\tdraw: function(ctx) {\n\t\t\t\t\tconsole.log(\"Draw board with notations\");\n\t\t\t\t\tctx.save();\n\t\t\t\t\tRequestBoardCanvas(this,true,function(bc){\n\t\t\t\t\t\tctx.drawImage(bc,-BOARDSIZE/2,-BOARDSIZE/2,BOARDSIZE,BOARDSIZE);\t\n\t\t\t\t\t\t//ctx.fillStyle=\"#00ff00\";\t\n\t\t\t\t\t\t//ctx.fillRect(-BOARDSIZE/2,-BOARDSIZE/2,BOARDSIZE,BOARDSIZE);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"3d\":{\t\t\t\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tcreate: function(callback){\n\t\t\t\t\tcreateGridBoard(this,callback,true,1);\n\t\t\t\t},\n\t\t\t}\n\n\t\t});\n\t\t\n\t\tvar zoom3d=.6/this.g.NBCELLS*8;\t\n\t\tvar zoom3dselect=zoom3d*1.2;\n\t\tthis.g.pieceZ0=300/this.g.NBCELLS*4;\n\t\tfor(var pos in this.g.confine) {\n\t\t\tvar rc=this.RC(pos);\n\t\t\tvar r=rc.r,c=rc.c;\n\t\t\tvar coords=this.Coords(r,c);\n\t\t\tvar coords2d=this.Coords2d(r,c);\n\t\t\txdv.createGadget(\"piece#\"+r+\"#\"+c, {\t\n\t\t\t\t\"base\": {\n\t\t\t\t\tz: 1,\n\t\t\t\t},\t\n\t\t\t\t\"2d\" : {\n\t\t\t\t\tx: coords2d.x,\n\t\t\t\t\ty: coords2d.y,\n\t\t\t\t\ttype : \"sprite\",\n\t\t\t\t\tfile: fullPath+\"/res/xd-view/sprites.png\",\n\t\t\t\t\tclipwidth: 200,\n\t\t\t\t\tclipheight: 200,\n\t\t\t\t\tclipx: 0,\n\t\t\t\t\tclipy: 0,\n\t\t\t\t\twidth: $this.g.CSIZE_2D,\n\t\t\t\t\theight: $this.g.CSIZE_2D,\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\tx: coords.x,\n\t\t\t\t\ty: coords.y,\n\t\t\t\t\tvisible:false,\n\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\tscale:[zoom3d,zoom3d,zoom3d*2],\n\t\t\t\t\tcreate: function(callback){\t\t\t\t\t\t\n\t\t\t\t\t\tcreatePiece3D(this,callback);\n\t\t\t\t\t},\n\t\t\t\t\tz:$this.g.pieceZ0,\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\txdv.createGadget(\"clicker#\"+r+\"#\"+c,{\n\t\t\t\tbase:{\n\t\t\t\t\tx: coords.x,\n\t\t\t\t\ty: coords.y,\t\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tz: 103,\n\t\t\t\t\tx: coords2d.x,\n\t\t\t\t\ty: coords2d.y,\n\t\t\t\t\twidth:$this.g.CSIZE_2D,\t\t\t\t\n\t\t\t\t\theight:$this.g.CSIZE_2D,\t\t\t\t\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"background-image\": \"url(\"+fullPath+\"/res/xd-view/select-target-2d.png)\",\n\t\t\t\t\t\t\"background-size\": \"contain\",\n\t\t\t\t\t\t\"cursor\": \"pointer\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\ttype: \"meshfile\",\n\t\t\t\t\tfile : fullPath+\"/res/xd-view/ring-target.js\",\n\t\t\t\t\tflatShading: true,\n\t\t\t\t\tcastShadow: true,\n\t\t\t\t\tsmooth : 0,\n\t\t\t\t\tz: 0,\n\t\t\t\t\tscale:[zoom3dselect,zoom3dselect,1],\n\t\t\t\t\tmaterials: { \n\t\t\t\t\t\t\"square\" : {\n\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ring\" : {\n\t\t\t\t\t\t\tcolor : 0xdddddd,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tView.Game.rCreateScreen = function(videoTexture) {\n\t\t// flat screens\n\t\tvar gg=new THREE.PlaneGeometry(4,3,1,1);\n\t\tvar gm=new THREE.MeshPhongMaterial({map:videoTexture,shading:THREE.FlatShading});\n\t\tvar mesh = new THREE.Mesh( gg , gm );\n\t\tthis.objectReady(mesh); \n\t\treturn null;\n\t}\n\t\n\tView.Game.rCreateScreens = function(xdv) {\n\t\tvar $this=this;\n\t\txdv.createGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn $this.rCreateScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videoabis\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn $this.rCreateScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn $this.rCreateScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t},\n\t\t});\t\n\t\txdv.createGadget(\"videobbis\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn $this.rCreateScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tView.Game.xdBuildScene = function(xdv){\n\n\t\txdv.updateGadget(\"pass-board-w\",{\n\t\t\tbase: {\n\t\t\t\tvisible: false,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"pass-board-b\",{\n\t\t\tbase: {\n\t\t\t\tvisible: false,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"board\",{\n\t\t\t\"base\": {\n\t\t\t\tvisible: !this.mNotation,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"boardNotations\",{\n\t\t\t\"base\": {\n\t\t\t\tvisible: this.mNotation,\n\t\t\t}\n\t\t});\n\t\t\n\t\tfor (var r=0; r<this.g.NBROWS; r++){\t\t\n\t\t\tfor (var c=0; c<this.g.NBCOLS; c++){\n\t\t\t\txdv.updateGadget(\"piece#\"+r+\"#\"+c, {\t\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible : true,\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\tvisible : true,\n\t\t\t\t\t\tflatShading:false,\n\t\t\t\t\t} \n\t\t\t\t});\n\t\t\t\txdv.updateGadget(\"clicker#\"+r+\"#\"+c, {\t\n\t\t\t\t\t\"base\": {\n\t\t\t\t\t\tvisible : false,\n\t\t\t\t\t} \n\t\t\t\t});\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t// webRTC screens\n\t\tvar scaleScreen=3;\n\t\tvar zScreen=3000;\n\t\tvar zScreenVignette=1500;\n\t\tvar yScreen=10000;\n\t\tvar screenAngle=0;\n\t\tvar thumbDist=.89;\n\t\tvar thumbOffset=5500;\t\t\n\t\tvar inclination=25;\n\t\t\n\t\txdv.updateGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: 1,\n\t\t\t\tz: zScreen,\n\t\t\t\ty: this.mViewAs==1?yScreen:-yScreen,\n\t\t\t\trotate: this.mViewAs==1?-(180+screenAngle):-screenAngle,\n\t\t\t\trotateX: this.mViewAs==1?inclination:-inclination,\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"videoabis\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: -1,\n\t\t\t\tz: zScreenVignette,\n\t\t\t\tx: this.mViewAs==1?-thumbOffset:thumbOffset,\n\t\t\t\ty: this.mViewAs==1?thumbDist*yScreen:-thumbDist*yScreen,\n\t\t\t\trotate: this.mViewAs==1?-(180+screenAngle):-screenAngle,\n\t\t\t\trotateX: this.mViewAs==1?inclination:-inclination,\n\t\t\t\tscale: [scaleScreen/4,scaleScreen/4,scaleScreen/4],\n\t\t\t},\n\t\t});\n\n\t\txdv.updateGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: -1,\n\t\t\t\tz: zScreen,\n\t\t\t\ty: this.mViewAs==1?-yScreen:yScreen,\n\t\t\t\trotate: this.mViewAs==1?-screenAngle:-(180+screenAngle),\n\t\t\t\trotateX: this.mViewAs==1?-inclination:inclination,\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"videobbis\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: 1,\n\t\t\t\tz: zScreenVignette,\n\t\t\t\tx: this.mViewAs==1?thumbOffset:-thumbOffset,\n\t\t\t\ty: this.mViewAs==1?-thumbDist*yScreen:thumbDist*yScreen,\n\t\t\t\trotate: this.mViewAs==1?-screenAngle:-(180+screenAngle),\n\t\t\t\trotateX: this.mViewAs==1?-inclination:inclination,\n\t\t\t\tscale: [scaleScreen/4,scaleScreen/4,scaleScreen/4],\n\t\t\t},\n\t\t});\n\t\t\n\t}\t\t\n\tView.Board.sideToAngle = function(side){\n\t\tif (side==1) return 180;\n\t\treturn 0;\n\t}\n\tView.Board.clipX = function(side){\n\t\tif (side==1) return 200;\n\t\treturn 0;\n\t}\n\tView.Board.xdDisplay = function(xdv, aGame) {\n\t\t\n\t\t//console.info(\"freeClose\",this.freeClose);\n\t\t\n\t\tvar $this=this;\n\t\t\n\t\tfor(var pos in aGame.g.confine) {\n\t\t\tvar rc=aGame.RC(pos);\n\t\t\tvar r=rc.r, c=rc.c;\n\t\t\tvar rot= aGame.mBoard.board[pos]<0?180:0; //Math.round(Math.random())*180; // \n\t\t\txdv.updateGadget(\"piece#\"+r+\"#\"+c, {\n\t\t\t\t\"2d\":{\n\t\t\t\t\tvisible : aGame.mBoard.board[pos] != 0 ,\n\t\t\t\t\tclipx: $this.clipX(aGame.mBoard.board[pos]),\n\t\t\t\t},\t\t\t\t\t\n\t\t\t\t\"3d\": {\n\t\t\t\t\tvisible : aGame.mBoard.board[pos] != 0 ,\n\t\t\t\t\trotateX: $this.sideToAngle(aGame.mBoard.board[pos]),\n\t\t\t\t} \n\t\t\t});\n\t\t}\n\t\txdv.updateGadget(\"scoreboardA\",{\n\t\t\t\"base\": {\n\t\t\t\tvisible: true,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"scoreboardB\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t}\n\t\t});\n\t\taGame.refreshScore(xdv,aGame.mBoard.counts[0],aGame.mBoard.counts[1]);\n\t}\n\t\n\t\n\tView.Board.reversiAnimateMove = function(xdv, aGame, r, c, callback) {\n\t\tvar $this=this;\n\t\tvar Z0=aGame.g.pieceZ0;\t\n\t\tvar Z1=aGame.g.CSIZE/2;\t\n\t\tvar captured=[];\n\t\tvar animCount=0;\n\t\tvar duration=400;\n\n\t\tvar b=aGame.mBoard;\n\t\tvar ob=aGame.mOldBoard;\n\t\t\n\t\tvar nbToRestore=0;\n\t\t\n\t\tfunction EndAnim() {\n\t\t\t\t\t\t\n\t\t\tfunction Finalize(){\n\t\t\t\tnbToRestore--;\n\t\t\t\tif (nbToRestore==0)\n\t\t\t\t\tcallback();\n\t\t\t}\n\t\t\t\n\t\t\t//aGame.PlaySound(\"tac\"+(1+Math.floor(Math.random()*3)));\n\t\t\tif (animCount < captured.length){\n\t\t\t\tvar locR=captured[animCount].row;\n\t\t\t\tvar locC=captured[animCount].col;\n\t\t\t\tanimCount++;\n\n\t\t\t\t// update score\n\t\t\t\tif (b.mWho==1){\n\t\t\t\t\taGame.refreshScore(xdv,ob.counts[0]+1+animCount,ob.counts[1]-animCount);\t\t\t\t\n\t\t\t\t}else{\t\t\t\t\t\n\t\t\t\t\taGame.refreshScore(xdv,ob.counts[0]-animCount,ob.counts[1]+1+animCount);\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\txdv.updateGadget(\"piece#\"+locR+\"#\"+locC,{ \n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tclipx: $this.clipX(b.board[aGame.POS(locC,locR)]),\n\t\t\t\t\t\topacity: 0.5,\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\": { \n\t\t\t\t\t\trotateX: $this.sideToAngle(b.board[aGame.POS(locC,locR)]),\n\t\t\t\t\t\tz: Z1 \n\t\t\t\t\t}\n\t\t\t\t}, Math.max(50,500/captured.length), EndAnim);\t\t\t\t\n\t\t\t}else{\n\t\t\t\tnbToRestore=captured.length;\n\t\t\t\tfor (var i=0;i<captured.length;i++){\n\t\t\t\t\tvar locR=captured[i].row;\n\t\t\t\t\tvar locC=captured[i].col;\n\t\t\t\t\txdv.updateGadget(\"piece#\"+locR+\"#\"+locC,{ \n\t\t\t\t\t\t\"2d\":{\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\": { \n\t\t\t\t\t\t\tz: Z0 \n\t\t\t\t\t\t}\n\t\t\t\t\t}, 400, Finalize);\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t//callback();\t\t\t\n\t\t\t}\n\t\t}\n\n\t\t\n\t\t\n\t\tfunction turnCaptured(){\n\n\t\t\tfor (var row=0; row<aGame.g.NBROWS; row++){\t\t\n\t\t\t\tfor (var col=0; col<aGame.g.NBCOLS; col++){\n\t\t\t\t\tif (b.board[aGame.POS(col,row)] != ob.board[aGame.POS(col,row)]) {\n\t\t\t\t\t\tif ((row==r)&&(col==c)){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcaptured.push({row:row,col:col});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//console.info(\"captured\",captured);\n\t\t\t\t\t\n\t\t\tEndAnim();\n\t\t}\n\t\t\n\t\t\n\t\tif (b.lastMove){\n\t\t\t// put the hidden piece on the wrong side to make it flip  \n\t\t\txdv.updateGadget(\"piece#\"+b.lastMove.row+\"#\"+b.lastMove.col,{\n\t\t\t\t\"2d\":{\n\t\t\t\t\t//clipx: $this.clipX(-1*b.board[b.lastMove.row][b.lastMove.col]),\n\t\t\t\t\tvisible: true,\n\t\t\t\t\topacity: 0,\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\trotateX: $this.sideToAngle(-1*b.board[aGame.POS(b.lastMove.col,b.lastMove.row)]),\n\t\t\t\t\tz: Z0,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// make the new piece pop up in the game\n\t\txdv.updateGadget(\"piece#\"+r+\"#\"+c,{\n\t\t\t\"2d\":{\n\t\t\t\tclipx: $this.clipX(b.board[aGame.POS(b.lastMove.col,b.lastMove.row)]),\n\t\t\t\tclipy: 200,\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\trotateX: $this.sideToAngle(b.board[aGame.POS(b.lastMove.col,b.lastMove.row)]),\n\t\t\t\tz: Z1,\n\t\t\t\tvisible: true,\n\t\t\t}\n\t\t},200,function(){\n\t\t\t// update score\n\t\t\tif (b.mWho==1){\n\t\t\t\taGame.refreshScore(xdv,ob.counts[0]+1,ob.counts[1]);\t\t\t\t\n\t\t\t}else{\t\t\t\t\t\n\t\t\t\taGame.refreshScore(xdv,ob.counts[0],ob.counts[1]+1);\t\t\t\t\n\t\t\t}\n\t\t\t// push down piece and call for captures animation\n\t\t\txdv.updateGadget(\"piece#\"+r+\"#\"+c,{\n\t\t\t\t\"2d\":{\n\t\t\t\t\tclipy: 0,\n\t\t\t\t},\n\t\t\t\t\"3d\":{\t\t\t\t\n\t\t\t\t\tz: Z0,\n\t\t\t\t\t}\n\t\t\t\t},200,turnCaptured);\n\t\t\t}\t\n\t\t);\n\t}\n\t\n\tView.Board.xdBuildHTStateMachine = function(xdv, htsm, aGame) {\n\t\tvar $this=this;\n\t\tvar move={};\n\t\t\t\t\n\t\tfunction SelectTo(args){\n\n\t\t\tfunction Click(r,c) {\t\t\t\t\n\t\t\t\thtsm.smQueueEvent(\"E_CLICK\",{row:r,col:c});\n\t\t\t}\n\n\t\t\t$this.mMoves.forEach(function(move) {\n\t\t\t\tif(move.pass){\n\t\t\t\t\thtsm.smQueueEvent(\"E_PASS\",{row:-1,col:-1,pass:true});\n\t\t\t\t}else{\n\t\t\t\t\t(function(r,c){\t\t\t\t\t\n\t\t\t\t\t\txdv.updateGadget(\"clicker#\"+r+\"#\"+c,{\n\t\t\t\t\t\t\t\"base\":{\n\t\t\t\t\t\t\t\tvisible:true,\n\t\t\t\t\t\t\t\tcastShadow: aGame.mShowMoves,\n\t\t\t\t\t\t\t\tclick: function(){\n\t\t\t\t\t\t\t\t\tClick(r,c);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"2d\":{\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\topacity: aGame.mShowMoves?1:0,\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\t\t\tmaterials: {\n\t\t\t\t\t\t\t\t\t\"ring\": {\n\t\t\t\t\t\t\t\t\t\topacity: aGame.mShowMoves?1:0,\n\t\t\t\t\t\t\t\t\t\ttransparent: aGame.mShowMoves?false:true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"square\" : {\n\t\t\t\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t\t},\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t},\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\t\t\t\t\n\t\t\t\t\t})(move.row,move.col);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfunction Clean(args){\n\t\t\tfor (var r=0; r<aGame.g.NBROWS; r++){\t\t\n\t\t\t\tfor (var c=0; c<aGame.g.NBCOLS; c++){\n\t\t\t\t\txdv.updateGadget(\"clicker#\"+r+\"#\"+c,{\n\t\t\t\t\t\t\"base\":{\n\t\t\t\t\t\t\tvisible:false,\n\t\t\t\t\t\t\tclick: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\t\t\t\t\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tfunction SaveTo(args) {\n\t\t\tmove.row=args.row;\n\t\t\tmove.col=args.col;\n\t\t}\n\t\tfunction SendMove(args) {\n\t\t\taGame.MakeMove(move);\n\t\t}\n\t\tfunction SendPass(args) {\n\t\t\taGame.MakeMove({pass:true});\n\t\t}\n\t\tfunction Animate(args) {\n\t\t\t\thtsm.smQueueEvent(\"E_ANIMATED\",{});\n\t\t}\n\t\thtsm.smTransition(\"S_INIT\", \"E_INIT\", \"S_SELECT_TO\", [ ]);\n\t\thtsm.smEntering(\"S_SELECT_TO\",[SelectTo]);\n\t\thtsm.smLeaving(\"S_SELECT_TO\",[Clean]);\n\t\thtsm.smTransition(\"S_SELECT_TO\", \"E_PASS\", \"S_DONE\", [ SendPass ]);\n\t\thtsm.smTransition(\"S_SELECT_TO\", \"E_CLICK\", \"S_ANIMATE\", [ SaveTo , Animate ]);\n\t\thtsm.smTransition(\"S_ANIMATE\", \"E_ANIMATED\", \"S_DONE\", [ SendMove ]);\n\t\thtsm.smEntering(\"S_DONE\",[Clean]);\n\t\thtsm.smTransition([\"S_SELECT_TO\",\"S_ANIMATE\"], \"E_END\", \"S_DONE\", [ ]);\n\t\thtsm.smTransition(\"S_DONE\", \"E_END\", null, [ ]);\t\t\n\t\t\n\t}\t\n\t\n\tView.Board.xdPlayedMove = function(xdv, aGame, aMove) {\n\t\t\n\t\tfunction passAnim(passBoard,callback){\n\t\t\txdv.updateGadget(passBoard,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\topacity:0,\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tfunction switchOff(){\n\t\t\t\txdv.updateGadget(passBoard,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\topacity:0,\n\t\t\t\t\t}\n\t\t\t\t},200,function(){\n\t\t\t\t\txdv.updateGadget(passBoard,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tcallback();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t\txdv.updateGadget(passBoard,{\n\t\t\t\tbase: {\n\t\t\t\t\topacity:1,\n\t\t\t\t}\n\t\t\t},200, function(){\n\t\t\t\txdv.updateGadget(passBoard,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\topacity:0.99,\n\t\t\t\t\t}\n\t\t\t\t},1000,switchOff);\n\t\t\t});\n\t\t}\n\n\t\tif (aMove.pass){\n\t\t\tvar passBoard=this.mWho==1?\"pass-board-b\":\"pass-board-w\";\n\t\t\tpassAnim(passBoard,function(){\n\t\t\t\taGame.MoveShown();\n\t\t\t});\t\t\t\n\t\t}else{\t\t\t\n\t\t\taGame.mOldBoard.reversiAnimateMove(xdv,aGame,aMove.row,aMove.col,function() {\n\t\t\t\taGame.MoveShown();\n\t\t\t});\n\t\t}\n\t}\n\n})();\n"],"file":"reversicross10-view.js"}