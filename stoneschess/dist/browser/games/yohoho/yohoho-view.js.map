{"version":3,"names":[],"mappings":"","sources":["yohoho-xd-view.js"],"sourcesContent":["/*\nTHREE= typeof THREE==\"undefined\" ? {} : THREE;\nTWEEN= typeof TWEEN==\"undefined\" ? { Easing: { Cubic: {}, Quartic: {}, } } : TWEEN;\n*/\n(function() {\n\t\n\tvar T = 750;\n\tvar R = T * Math.cos(Math.PI / 6);\n\t\n\t// palmtree stuff\n\tvar nbStages=3;\n\tvar nbLeavesPerStage=5;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tvar palmsPositions = [  {r:18,a:210,zoom:0.8,rotOffset:90},\n\t\t\t\t\t\t\t{r:15,a:215,zoom:1.0,rotOffset:270},\n\t\t\t\t\t\t\t{r:15,a:250,zoom:0.7,rotOffset:170},\n\t\t\t\t\t\t\t{r:25,a:285,zoom:0.6,rotOffset:0},\n\t\t\t\t\t\t\t{r:25,a:295,zoom:0.8,rotOffset:270},\n\t\t\t\t\t\t\t{r:18,a:15,zoom:1.0,rotOffset:0},\n\t\t\t\t\t\t\t{r:25,a:170,zoom:1.2,rotOffset:0},\n\t\t\t\t\t\t\t{r:35,a:92,zoom:0.8,rotOffset:270},];\n\t\t\t\n\tfunction Angle(coord0,coord) {\n\t\tif(coord0[0]==coord[0])\n\t\t\tif(coord0[1]>coord[1])\n\t\t\t\treturn 90;\n\t\t\telse\n\t\t\t\treturn -90;\n\t\telse\n\t\t\treturn 180+Math.atan2((coord[0]-coord0[0]),(coord[1]-coord0[1]))*(180/Math.PI);\n\t}\n\t\n\tfunction CreatPalmtrees(xdv){\n\t\tvar leafidx=0;\n\t\tvar palmsZ=3000; // origin for leaves and trunc (trunc mesh origin is set at its top)\n\t\tfor (var p =0 ; p < palmsPositions.length ; p++){\t\t\t\n\t\t\tvar angle=palmsPositions[p].a*Math.PI/180;\n\t\t\tvar r=palmsPositions[p].r;\n\t\t\tvar zoom=palmsPositions[p].zoom;\n\t\t\tvar rotOffset=palmsPositions[p].rotOffset;\n\t\t\tvar sz=3.5;\n\t\t\tsz=sz*zoom;\n\t\t\txdv.createGadget(\"palmtrunc#\"+p, {\n\t\t\t\t\"cartoon3d\" : {\n                    harbor: false,\n\t\t\t\t\ttype : \"meshfile\",\n\t\t\t\t\tfile : xdv.game.mViewOptions.fullPath+\"/res/xd-view/meshes/palmtreetrunc.js\",\n\t\t\t\t\tscale: [sz,sz,sz],\n\t\t\t\t\tz : palmsZ*zoom,\n\t\t\t\t\tx : (R * r)*Math.cos(angle),\n\t\t\t\t\ty : (R * r)*Math.sin(angle),\n\t\t\t\t\trotate: rotOffset,\n\t\t\t\t\tsmooth: 0 ,\n\t\t\t\t},\n\t\t\t});\n\t\t\t\n\t\t\tfor (var stage=0 ; stage < nbStages ; stage++){\n\t\t\t\tfor (var idx=0 ; idx < nbLeavesPerStage ; idx++){\n\t\t\t\t\t\n\t\t\t\t\tvar sz=1,\n\t\t\t\t\tsz=sz*7/(7+stage)*zoom;\n\t\t\t\t\t\n\t\t\t\t\txdv.createGadget(\"palmleaf#\"+leafidx, {\n\t\t\t\t\t\t\"cartoon3d\" : {\n                        harbor: false,\n\t\t\t\t\t\ttype : \"meshfile\",\n\t\t\t\t\t\tfile : xdv.game.mViewOptions.fullPath+\"/res/xd-view/meshes/leaves5.js\",\n\t\t\t\t\t\tscale: [sz,sz,sz],\n\t\t\t\t\t\tz : palmsZ*zoom*.99,\n\t\t\t\t\t\tx : (R * r)*Math.cos(angle),\n\t\t\t\t\t\ty : (R * r)*Math.sin(angle),\n\t\t\t\t\t\t\n\t\t\t\t\t\trotate: rotOffset+(stage/2+idx+(Math.random()-.5)/5)*380/nbLeavesPerStage,\n\t\t\t\t\t\trotateY: stage*(80/nbStages), \n\t\t\t\t\t\t\n\t\t\t\t\t\tsmooth: 0 ,\n\t\t\t\t\t\t\n\t\t\t\t\t\tmaterials: { \"palmgreen\" : {\n\t\t\t\t\t\t\t\tside:THREE.DoubleSide,\n\t\t\t\t\t\t\t}},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tleafidx++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t}\n\tfunction CreateExplosionObjects(xdv) {\n\t\txdv.createGadget(\"light\", {\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"custom3d\",\n\t\t\t\tcreate: function() {\n\t\t\t\t\tvar explight = new THREE.SpotLight( 0xffffaa, 1, 0, 1.05, 1, 2);\n\t\t\t\t\t//explight.castShadow = false;\n\t\t\t\t\t$.extend(this.options,{\n\t\t\t\t\t\tintensity: 0,\n\t\t\t\t\t});\n\t\t\t\t\treturn explight;\n\t\t\t\t},\n\t\t\t\tdisplay: function(force,options,delay) {\n\t\t\t\t\tthis.object3d.target.position.x=this.object3d.position.x;\n\t\t\t\t\tthis.object3d.target.position.z=this.object3d.position.z;\n\t\t\t\t\tvar $this=this;\n\t\t\t\t\tif(force || \n\t\t\t\t\t\t\tthis.options.intensity != options.intensity) {\n\t\t\t\t\t\tif(delay) {\n\t\t\t\t\t\t\tthis.animStart(options);\n\t\t\t\t\t\t\tsetTimeout(function() { \n\t\t\t\t\t\t\t\t$this.object3d.position.z=200000;\n\t\t\t\t\t\t\t\t$this.object3d.intensity=options.intensity;\n\t\t\t\t\t\t\t\t$this.animEnd(options); \n\t\t\t\t\t\t\t},delay);\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tthis.animStart(options);\n\t\t\t\t\t\t\tnew TWEEN.Tween(this.object3d).to({intensity:options.intensity},delay)\n\t\t\t\t\t\t\t\t.easing(TWEEN.Easing.Quartic.EaseOut)\n\t\t\t\t\t\t\t\t.onComplete(function() {\n\t\t\t\t\t\t\t\t\t$this.object3d.position.z=200000;\n\t\t\t\t\t\t\t\t\t$this.animEnd(options);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.start();\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tthis.object3d.intensity=options.intensity;\n\t\t\t\t\t} \n\t\t\t\t},\n\t\t\t\tz: 200000,\n\t\t\t\tintensity: 0,\n\t\t\t}\n\t\t});\n\t\t/*xdv.createGadget(\"fire1\", {\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"plane3d\",\n\t\t\t\tcolor : 0xffffff,\n\t\t\t\tsx : 1000,\n\t\t\t\tsy : 1000,\n\t\t\t\tz : 1000,\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\ttexture: {\n\t\t\t\t\tfile: xdv.game.mViewOptions.fullPath+\"/res/xd-view/meshes/explosion-256.png\",\n\t\t\t\t},\n\t\t\t\tside: THREE.DoubleSide,\n\t            transparent:true,\n\t\t\t}\n\t\t});\n\t\txdv.createGadget(\"fire2\", {\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"plane3d\",\n\t\t\t\tcolor : 0xffffff,\n\t\t\t\tsx : 1000,\n\t\t\t\tsy : 1000,\n\t\t\t\tz : 1000,\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\trotate: 90,\n\t\t\t\ttexture: {\n\t\t\t\t\tfile: xdv.game.mViewOptions.fullPath+\"/res/xd-view/meshes/explosion-256.png\",\n\t\t\t\t},\n\t\t\t\tside: THREE.DoubleSide,\n\t            transparent:true,\n\t\t\t}\n\t\t});*/\n\t}\n\n\tfunction AttackPosition(xdv,aGame,piece,pos) {\n\t\tvar coord=aGame.getVCoord(pos);\n\t\tvar coord0=aGame.getVCoord(piece.pos);\n\t\tvar angles;\n\t\tif(coord[0]>coord0[0])\n\t\t\tif(coord[1]>coord0[1])\n\t\t\t\tangles=[120,-60]; \n\t\t\telse if(coord[1]<coord0[1])\n\t\t\t\tangles=[60,-120];\n\t\t\telse\n\t\t\t\tangles=[0,180];\n\t\telse if(coord[1]>coord0[1])\n\t\t\tangles=[60,-120];\n\t\telse if(coord[1]<coord0[1])\n\t\t\tangles=[-60,120];\n\t\telse\n\t\t\tangles=[0,180]; \n\t\tvar angle0=angles[0];\n\t\tvar angle1=angles[1];\n\t\tvar angle;\n\t\tif(Math.abs((angle0+360)-(piece.angle+360))>Math.abs((angle1+360)-(piece.angle+360)))\n\t\t\tangle=angle1;\n\t\telse\n\t\t\tangle=angle0;\n\t\tvar attackerId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\txdv.updateGadget(attackerId,{\n\t\t\t\"3d\": {\n\t\t\t\trotate: angle,\n\t\t\t},\n\t\t},500,function() {\n\t\t\txdv.updateGadget(attackerId,{\n\t\t\t\t\"3d\": {\n\t\t\t\t\trotate: piece.angle,\n\t\t\t\t},\n\t\t\t},1500);\t\t\t\n\t\t});\n\t}\n\n\t\n\tfunction AnimateAttack(xdv,aGame,piece,attackers) {\n\t\tvar coord=aGame.getVCoord(piece.pos);\n\t\tfor(var i=0;i<attackers.length;i++) {\n\t\t\t(function(attacker) {\n\t\t\t\tattackerId=attacker.type+\":\"+attacker.s+\":\"+attacker.index;\n\t\t\t\tAttackPosition(xdv,aGame,attacker,piece.pos);\n\t\t\t})(attackers[i]);\n\t\t}\n\t\tsetTimeout(function() {\n\t\t\tSinkShip(xdv,aGame,piece);\n\t\t},800);\n\t}\n\t\n\tfunction SinkShip(xdv,aGame,piece) {\n\t\tvar pieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\tvar coord=aGame.getVCoord(piece.pos);\n\t\txdv.updateGadget(\"light\",{\n\t\t\t\"3d\": {\n\t\t\t\tx: coord[0],\n\t\t\t\ty: coord[1],\n\t\t\t\tz: 2000,\n\t\t\t\tintensity: 20,\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"light\",{\n\t\t\t\"3d\": {\n\t\t\t\tintensity: 0,\n\t\t\t\tz:5000,\n\t\t\t},\n\t\t},200);\n\t\txdv.updateGadget(pieceId,{\n\t\t\t\"3d\": {\n\t\t\t\trotateX: 60,\n\t\t\t\t//rotateEasing: TWEEN.Easing.Quartic.EaseIn,\n\t\t\t},\n\t\t},1000);\n\t\txdv.updateGadget(pieceId,{\n\t\t\t\"3d\": {\n\t\t\t\tz: -2000,\n\t\t\t\t//positionEasing: TWEEN.Easing.Quartic.EaseIn,\n\t\t\t},\n\t\t},2000);\n\t\t/*xdv.updateGadget(\"fire1\",{\n\t\t\t\"3d\": {\n\t\t\t\tx: coord[0],\n\t\t\t\ty: coord[1],\n\t\t\t\tz: 500,\n\t\t\t\tvisible: true,\n\t\t\t\tscale: [0.1,0.1,0.1],\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"fire1\",{\n\t\t\t\"3d\": {\n\t\t\t\tscale: [2,2,2],\n\t\t\t\tscaleEasing: TWEEN.Easing.Cubic.EaseOut,\n\t\t\t\topacity: 0,\n\t\t\t\topacityEasing: TWEEN.Easing.Cubic.EaseOut,\n\t\t\t},\n\t\t},300, function() {\n\t\t\txdv.updateGadget(\"fire1\",{\n\t\t\t\t\"3d\": {\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t});\t\n\t\t});\n\t\txdv.updateGadget(\"fire2\",{\n\t\t\t\"3d\": {\n\t\t\t\tx: coord[0],\n\t\t\t\ty: coord[1],\n\t\t\t\tz: 500,\n\t\t\t\tvisible: true,\n\t\t\t\tscale: [0.1,0.1,0.1],\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"fire2\",{\n\t\t\t\"3d\": {\n\t\t\t\tscale: [2,2,2],\n\t\t\t\tscaleEasing: TWEEN.Easing.Cubic.EaseOut,\n\t\t\t\topacity: 0,\n\t\t\t\topacityEasing: TWEEN.Easing.Cubic.EaseOut,\n\t\t\t},\n\t\t},300, function() {\n\t\t\txdv.updateGadget(\"fire2\",{\n\t\t\t\t\"3d\": {\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t});\t\n\t\t});*/\n\t\t\n\t}\n\n\tvar maxLines, maxCols, orientation;\n\n\tfunction GetVCoord(aGame,pos) {\n\t\tfunction RawPos(pos0) { \n\t\t\tvar coord = aGame.g.Coord[pos0];\n\t\t\tvar r = maxLines - 1 - coord[0];\n\t\t\tvar c = coord[1];\n\t\t\tvar x, y;\n\t\t\tif (orientation == 'onASide') {\n\t\t\t\tif (c % 2 == 0)\n\t\t\t\t\tx = (1 + c / 2 * 3) * T;\n\t\t\t\telse\n\t\t\t\t\tx = (-T / 2 + (c + 1) / 2 * 3 * T);\n\t\t\t\ty = R * (r + 1);\n\t\t\t} else {\n\t\t\t\tx = R * (c + 1);\n\t\t\t\tif (r % 2 == 0)\n\t\t\t\t\ty = (1 + r / 2 * 3) * T;\n\t\t\t\telse\n\t\t\t\t\ty = (-T / 2 + (r + 1) / 2 * 3 * T);\n\t\t\t}\n\t\t\treturn [ x, y ];\n\t\t}\n\t\tif (aGame.mViewAs == JocGame.PLAYER_B)\n\t\t\tpos=aGame.g.Graph.length - 1 - pos;\n\t\tvar center = RawPos(38);\n\t\tvar centerX = center[0];\n\t\tvar centerY = center[1];\n\t\tvar coord = RawPos(pos);\n\t\tcoord = [ coord[0] - centerX, coord[1] - centerY ];\n\t\treturn coord;\n\t}\n\n\tView.Game.getVCoord = function(pos) {\n\t\treturn GetVCoord(this,pos);\n\t}\n\t\n\tView.Game.xdInit = function(xdv) {\n\n\t\tvar $this = this;\n\t\t\n\t\tvar fullPath=this.mViewOptions.fullPath;\n\t\t\n\t\tmaxLines=this.mOptions.maxLines;\n\t\tmaxCols=this.mOptions.maxCols;\n\t\torientation=this.mOptions.orientation;\n\t\t\n\t\tCreateExplosionObjects(xdv);\n\n\t\txdv.createGadget(\"board\", {\n\t\t\t\"official\" : {\n\t\t\t\ttype : \"image\",\n\t\t\t\tfile : fullPath + \"/res/images/oceanboard.jpg\",\n\t\t\t\twidth : 12600,\n\t\t\t\theight : 11340,\n\t\t\t},\n\t\t});\n\n\t\txdv.createGadget(\"surround\", {\n\t\t\t\"cartoon3d\" : {\n                harbor: false,\n\t\t\t\ttype: \"custom3d\",\n\t\t\t\twidth: 100000,\n\t\t\t\theight: 100000,\n\t\t\t\tdepth: 100000,\n\t\t\t\tscale: [1,1,1],\n\t\t\t\trotate: 90,\n\t\t\t\tcreate: function() {\t\n\t\t\t\t\tvar path = fullPath+\"/res/xd-view/textures/skybox/\";\n\t\t\t\t\tvar format = \".jpg\";\n\t\t\t\t\tvar urls = [\n\t\t\t\t\t\tpath + 'px' + format, path + 'nx' + format,\n\t\t\t\t\t\tpath + 'py' + format, path + 'ny' + format,\n\t\t\t\t\t\tpath + 'pz' + format, path + 'nz' + format\n\t\t\t\t\t];\n\t\n\t\t\t\t\t//var textureCube = THREE.ImageUtils.loadTextureCube( urls, new THREE.CubeRefractionMapping() );\n\t\t\t\t\t//var textureCube = THREE.ImageUtils.loadTextureCube( urls, THREE.CubeRefractionMapping );\n\t\t\t\t\tvar textureCube = new THREE.CubeTextureLoader().load( urls );\n\t\t\t\t\tvar material = new THREE.MeshBasicMaterial( { color: 0xffffff, envMap: textureCube, refractionRatio: 0.95 } );\n\t\t\t\t\tvar shader = {\n\t\t\t\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\n\t\t\t\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: -1 } },\n\t\t\t\t\t\tvertexShader: [\n\t\t\t\t\t\t\t\"varying vec3 vViewPosition;\",\n\t\t\t\t\t\t\t\"void main() {\",\n\t\t\t\t\t\t\t\t\"vec4 mPosition = modelMatrix * vec4( position, 1.0 );\",\n\t\t\t\t\t\t\t\t\"vViewPosition = cameraPosition - mPosition.xyz;\",\n\t\t\t\t\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t].join(\"\\n\"),\n\t\t\t\n\t\t\t\t\t\tfragmentShader: [\n\t\t\t\t\t\t\t\"uniform samplerCube tCube;\",\n\t\t\t\t\t\t\t\"uniform float tFlip;\",\n\t\t\t\t\t\t\t\"varying vec3 vViewPosition;\",\n\t\t\t\t\t\t\t\"void main() {\",\n\t\t\t\t\t\t\t\t\"vec3 wPos = cameraPosition - vViewPosition;\",\n\t\t\t\t\t\t\t\t\"gl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\",\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t].join(\"\\n\")\n\t\t\t\t\t}\n\t\t\t\t\tshader.uniforms[ \"tCube\" ].value = textureCube;\n\t\n\t\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tuniforms: shader.uniforms,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tside: THREE.BackSide\n\t\n\t\t\t\t\t} ),\n\t\n\t\t\t\t\tmesh = new THREE.Mesh( new THREE.CubeGeometry( 3000, 3000, 3000 ), material );\n\t\t\t\t\treturn mesh;\n\t\t\t\t},\t\t\t\n\t\t\t},\n\t\t});\n\n\t\txdv.createGadget(\"ocean\", {\n\t\t\t\"cartoon3d\" : {\n                harbor: false,\n\t\t\t\ttype : \"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/ocean.js\",\n\t\t\t\tscale: [200,200,3],\n\t\t\t\tz : -50,\n\t\t\t\tsmooth: 0 ,\n\t\t\t},\n\t\t\t\"stylized3d\" : {\n\t\t\t\ttype : \"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/woodboard3.js\",\n\t\t\t\tscale: [2.4,2.14,1],\n\t\t\t\tz : -130,\n\t\t\t\tsmooth: 0 ,\n\t\t\t\tflatShading: true,\n\t\t\t},\n\t\t});\n\t\t\n\t\txdv.createGadget(\"island\", {\n\t\t\t\"cartoon3d\" : {\n                harbor: false,\n\t\t\t\ttype : \"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/landscape-smoothed.js\",\n\t\t\t\tscale: [1,1,1],\n\t\t\t\tz : 0,\n\t\t\t\tsmooth: 0 ,\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"flag\", {\n\t\t\t\"cartoon3d\" : {\n\t\t\t\ttype : \"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/barilflagsquare.js\",\n\t\t\t\tscale: [0.6,0.6,0.6],\n\t\t\t\tz : 0,\n\t\t\t\trotate: 90,\n\t\t\t\tx : R * 10,\n\t\t\t\tsmooth: 0 ,\n\t\t\t},\n\t\t\t\"stylized3d\" : {\n\t\t\t\ttype : \"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/stylized-flag.js\",\n\t\t\t\tscale: [0.6,0.6,0.6],\n\t\t\t\tz : 0,\n\t\t\t\trotate: 90,\n\t\t\t\tx : R * 10,\n\t\t\t\tsmooth: 0 ,\n\t\t\t},\n\t\t});\n        \n        xdv.createGadget(\"hexboard\", {\n            base: {\n                x : 0,\n                y : 0,\n            },\n            \"cartoon3d\" : {\n                visible: true,\n                receiveShadow : true,\n                type : \"custommesh3d\",\n                radius : T * 12 * .95,\n\t\t\t\trotate: 30,\n                thickness: 210,\n                z : -150,\n                smooth: 1,\n                create: function() {\n                    var gg= new THREE.CylinderGeometry(this.options.radius*this.SCALE3D, this.options.radius*this.SCALE3D, this.options.thickness*this.SCALE3D, 64, 1, false);\n                    var gm=new THREE.MeshLambertMaterial( { \n                        color: \"#1630ff\",\n                    });\n                    var mesh = new THREE.Mesh( gg , gm );\n                    return mesh;\n                },\n            },\n        });\n\t\t\n\t\tCreatPalmtrees(xdv);\t\n\t\t\n\t\tfunction createRaft(videoTexture) {\n\t\t\tvar $this=this;\n\t\t\tvar smooth=0;\n\t\t\tthis.getResource(\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/barilscreen.js\",function(geometry , materials) {\n \t\t\t\tvar materials0=[];\n \t\t\t\t\n \t\t\t\tfor(var i=0;i<materials.length;i++){\n                    if (materials[i].name==\"screen\"){\n\t \t\t\t\t\tvar mat=materials[i].clone();\n \t\t\t\t\t\tmat.map=videoTexture;\n \t\t\t\t\t\tmat.overdraw = true;\n \t\t\t\t\t\t//mat.side = THREE.DoubleSide;\n \t\t\t\t\t\tmaterials0.push(mat);\n \t\t\t\t\t}else{\n \t\t\t\t\t\tmaterials0.push(materials[i]);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tvar mesh = new THREE.Mesh( geometry , new THREE.MultiMaterial( materials0 ) );\n\n \t\t\t\tmesh.visible = false;\n \t\t\t\t$this.objectReady(mesh);\n\t\t\t});\n\t\t\treturn null;\n\t\t};\n\n\t\txdv.createGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\n\t\t\t\tcastShadow : false ,\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\tcreateRaft.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\t/*for (var g=0;g<5;g++){\n\t\t\txdv.createGadget(\"videoa-\"+g,{\n\t\t\t\t\"3d\": {\n\t\t\t\t\ttype : \"video3d\",\n\t\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\t\tcreateRaft.call(this,videoTexture);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}*/\n\n\t\txdv.createGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\n\t\t\t\tcastShadow : false ,\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\tcreateRaft.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\t\t\t\n\t\txdv.createGadget(\"videoa-sky\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videob-sky\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\n\t\t\t},\n\t\t});\n\t\t\n\t\tfor ( var i = 0; i < this.g.Graph.length; i++) {\n\t\t\tvar rcCoord = this.g.Coord[i];\n\t\t\tvar r = maxLines - 1 - rcCoord[0];\n\t\t\tvar c = rcCoord[1];\n\t\t\tvar coord = this.getVCoord(i);\n\t\t\tvar fillStyle = \"rgba(0,0,128,0.1)\";\n\t\t\tvar fillStyleS = \"rgba(0,195,255,0.7)\";\n\t\t\tvar hex3dColor = 0xffffff;\n\t\t\tvar hex3dOpacity = 0.3;\n\t\t\tif(this.mOptions.boardLayout[r][c]=='c') {\n\t\t\t\tfillStyle = \"rgba(0,0,128,0.3)\";\n\t\t\t\tfillStyleS = \"rgba(0,195,255,0.9)\";\n\t\t\t\thex3dColor = 0x808080;\n\t\t\t\thex3dOpacity = 0.2;\n\t\t\t}\n\t\t\txdv.createGadget(\"hex#\" + i, {\n\t\t\t\tbase: {\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1],\n\t\t\t\t},\n\t\t\t\t\"2d\" : {\n\t\t\t\t\ttype : \"hexagon\",\n\t\t\t\t\twidth : 2.6 * T,\n\t\t\t\t\theight : 2.6 * T,\n\t\t\t\t\tradius : T * .98,\n\t\t\t\t\tlineWidthFactor : 1,\n\t\t\t\t\tstrokeStyle : \"rgba(255,255,255,0.2)\",\n\t\t\t\t\tfillStyle : fillStyle,\n\t\t\t\t\tcss : {\t},\n\t\t\t\t\tz : 1,\n\t\t\t\t},\n\t\t\t\tstylized: {\n\t\t\t\t\tfillStyle : fillStyleS,\n\t\t\t\t\tradius : T * .95,\n\t\t\t\t},\n\t\t\t\t\"3d\" : {\n\t\t\t\t\treceiveShadow : true,\n\t\t\t\t},\n\t\t\t\t\"cartoon3d\" : {\n\t\t\t\t\ttype : \"custommesh3d\",\n\t\t\t\t\tradius : T * .95,\n\t\t\t\t\tthickness: T * .1,\n\t\t\t\t\topacity: hex3dOpacity,\n\t\t\t\t\tcolor: hex3dColor,\n\t\t\t\t\tz : -T * .04,\n\t\t\t\t\tcreate: function() {\n\t\t\t\t\t\tvar gg= new THREE.CylinderGeometry(this.options.radius*this.SCALE3D, this.options.radius*this.SCALE3D, this.options.thickness*this.SCALE3D, 6, 1, false);\n\t\t\t\t\t\tvar gm=new THREE.MeshLambertMaterial( { \n\t\t\t\t\t\t\tcolor: this.options.color,\n\t\t\t\t\t\t\ttransparent:true,\n\t\t\t\t\t\t\topacity: this.options.opacity,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar mesh = new THREE.Mesh( gg , gm );\n\t\t\t\t\t\treturn mesh;\n\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"stylized3d\" : {\n\t\t\t\t\ttype : \"custommesh3d\",\n\t\t\t\t\tradius : T * .95,\n\t\t\t\t\tthickness: T*.1,\n\t\t\t\t\topacity: hex3dOpacity,\n\t\t\t\t\tcolor: 0x808080,\n\t\t\t\t\tz : 0,\n\t\t\t\t\tcreate: function() {\n\t\t\t\t\t\tvar gg= new THREE.CylinderGeometry(this.options.radius*this.SCALE3D, this.options.radius*this.SCALE3D, this.options.thickness*this.SCALE3D, 6, 1, false);\n\t\t\t\t\t\tvar gm=new THREE.MeshPhongMaterial( { \n\t\t\t\t\t\t\tcolor: this.options.color,\n\t\t\t\t\t\t\t//color: 0xff0000,\n\t\t\t\t\t\t\ttransparent:true,\n\t\t\t\t\t\t\topacity: this.options.opacity,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar mesh = new THREE.Mesh( gg , gm );\n\t\t\t\t\t\treturn mesh;\n\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.saveGadgetProps(\"hex#\" + i, [\"opacity\",\"color\"],\"initial\");\n\t\t\txdv.createGadget(\"mask#\" + i, {\n\t\t\t\t\"2d\" : {\n\t\t\t\t\ttype : \"disk\",\n\t\t\t\t\twidth : 2 * R,\n\t\t\t\t\theight : 2 * R,\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1],\n\t\t\t\t\tz : 5,\n\t\t\t\t},\n\t\t\t});\n\t\t\t(function(pos) {\n\t\t\t\txdv.createGadget(\"text#\" + i, {\n\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\ttype : \"element\",\n\t\t\t\t\t\twidth : R,\n\t\t\t\t\t\theight : R * 0.5,\n\t\t\t\t\t\tcss : {\n\t\t\t\t\t\t\tcolor : \"White\",\n\t\t\t\t\t\t\t\"text-align\" : \"center\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tx : coord[0],\n\t\t\t\t\t\ty : coord[1] - 500,\n\t\t\t\t\t\tz : 4,\n\t\t\t\t\t\tdisplay : function(element, width, height) {\n\t\t\t\t\t\t\telement.css({\n\t\t\t\t\t\t\t\t\"font-size\" : (height * .6) + \"pt\",\n\t\t\t\t\t\t\t\t\"line-height\" : (height * 1) + \"px\",\n\t\t\t\t\t\t\t}).text(pos);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"stylized\": {\n\t\t\t\t\t\ty : coord[1] - 400,\n\t\t\t\t\t\tcss : {\n\t\t\t\t\t\t\tcolor : \"Black\",\n\t\t\t\t\t\t\t\"text-align\" : \"center\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\t\tz: 20,\n\t\t\t\t\t\trotateX: -90,\n\t\t\t\t\t\tcreate: function() {\n                            var $this = this;\n                            this.getResource('font|'+fullPath+\n                                '/res/xd-view/fonts/helvetiker_regular.typeface.json',\n                                function(font) {\n                                var gg=new THREE.TextGeometry(\"\"+pos,{\n                                    size: 0.25,\n                                    height: 0.05,\n                                    curveSegments: 6,\n                                    font: font,\n\n                                });\n                                var gm=new THREE.MeshBasicMaterial();\n                                var mesh= new THREE.Mesh( gg , gm );\n                                $this.objectReady(mesh);\n                            });\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})(i);\n\t\t}\n\n\t\tvar pieces = { \n\t\t\t\"C\": {\n\t\t\t\ttype : \"C\",\n\t\t\t\tcount : 1,\n\t\t\t\tpositionX : 100,\n\t\t\t\tname: \"admiral\",\n\t\t\t\tscale: [1,.8,1],\n\t\t\t\tsscale: [0.8,0.65,0.8],\n\t\t\t\tblackMaterial: {\n\t\t\t\t\t\"voiles\": {\n\t\t\t\t\t\tmap: this.mViewOptions.fullPath+\"/res/xd-view/meshes/jarmada-admiral-voiles-pirate-uvs-512.jpg\",\n\t\t\t\t\t},\n\t\t\t\t\t\"coque\": {\n\t\t\t\t\t\tmap: this.mViewOptions.fullPath+\"/res/xd-view/meshes/jarmada-admiral-pirate-uvs-512.jpg\",\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}, \n\t\t\t\"c\": {\n\t\t\t\ttype : \"c\",\n\t\t\t\tcount : 2,\n\t\t\t\tpositionX : 200,\n\t\t\t\tname: \"gallion\",\n\t\t\t\tscale: [.9,.7,.9],\n\t\t\t\tsscale: [.8,.7,.9],\n\t\t\t\tblackMaterial: {\n\t\t\t\t\t\"voiles\": {\n\t\t\t\t\t\tmap: this.mViewOptions.fullPath+\"/res/xd-view/meshes/jarmada-admiral-voiles-pirate-uvs-512.jpg\",\n\t\t\t\t\t},\n\t\t\t\t\t\"coque\": {\n\t\t\t\t\t\tmap: this.mViewOptions.fullPath+\"/res/xd-view/meshes/jarmada-gallion-pirate-uvs-512.jpg\",\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}, \n\t\t\t\"p\": {\n\t\t\t\ttype : \"p\",\n\t\t\t\tcount : 4,\n\t\t\t\tpositionX : 0,\n\t\t\t\tname: \"frigate\",\n\t\t\t\tscale: [1,1,1],\n\t\t\t\tsscale: [.7,.8,.7],\n\t\t\t\tblackMaterial: {\n\t\t\t\t\t\"voiles\": {\n\t\t\t\t\t\tmap: this.mViewOptions.fullPath+\"/res/xd-view/meshes/jarmada-admiral-voiles-pirate-uvs-512.jpg\",\n\t\t\t\t\t},\n\t\t\t\t\t\"coque\": {\n\t\t\t\t\t\tmap: this.mViewOptions.fullPath+\"/res/xd-view/meshes/jarmada-frigate-pirate-uvs-512.jpg\",\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}, \n\t\t\t\"r\": {\n\t\t\t\ttype : \"r\",\n\t\t\t\tcount : 1,\n\t\t\t\tpositionX : 300,\n\t\t\t\tname: \"rock\",\n\t\t\t\tscale: [1,1,1],\n\t\t\t\tsscale: [0.6,0.6,0.7],\n\t\t\t\tblackMaterial: {\n\t\t\t\t\t\"sand\": {\n\t\t\t\t\t\tcolor: 0x202020,\n\t\t\t\t\t},\n\t\t\t\t\t\"leaves\": {\n\t\t\t\t\t\tcolor: 0x800000,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} \n\t\t};\n\t\tfor ( var pi=0; pi<this.mBoard.pieces.length; pi++) {\n\t\t\tvar piece = this.mBoard.pieces[pi];\n\t\t\tvar pieceData = pieces[piece.type];\n\t\t\tvar id = piece.type + \":\" + piece.s + \":\" + piece.index;\n\t\t\txdv.createGadget(id, {\n\t\t\t\t\"2d\" : {\n\t\t\t\t\ttype : \"sprite\",\n\t\t\t\t\tfile : this.mViewOptions.fullPath + \"/res/images/yohohores6.png\",\n\t\t\t\t\tclipx : pieceData.positionX,\n\t\t\t\t\tclipy : (piece.s+1)*50,\n\t\t\t\t\tclipwidth : 100,\n\t\t\t\t\tclipheight : 100,\n\t\t\t\t\twidth : 1200,\n\t\t\t\t\theight : 1200,\n\t\t\t\t\tz : 3,\n\t\t\t\t},\n\t\t\t\t\"stylized\" : {\n\t\t\t\t\tfile : this.mViewOptions.fullPath + \"/res/images/yohohoresbasic5.png\"\n\t\t\t\t},\n\t\t\t\t\"3d\" : {\n\t\t\t\t\ttype : \"meshfile\",\n\t\t\t\t\tz : piece.z,\n\t\t\t\t\trotate: piece.s==1?0:180,\n\t\t\t\t},\n\t\t\t\t\"stylized3d\" : {\n\t\t\t\t\tfile : this.mViewOptions.fullPath+\"/res/xd-view/meshes/stylized-\"+pieceData.name+\".js\",\n\t\t\t\t\tmaterials : { \"ivory\": { color: piece.s==1?0xaa9999:0x222222 }, opacity : .5\t},\n\t\t\t\t\tsmooth : 2,\n\t\t\t\t\tscale: pieceData.sscale,\n\t\t\t\t},\n\t\t\t\t\"cartoon3d\" : {\n\t\t\t\t\tfile : this.mViewOptions.fullPath+\"/res/xd-view/meshes/jarmada-\"+pieceData.name+\".js\",\t\t\t\t\t\t\t\n\t\t\t\t\tmaterials: piece.s==-1?pieceData.blackMaterial:{},\n\t\t\t\t\tscale: pieceData.scale,\n\t\t\t\t},\n\t\t\t\t});\n\t\t}\n\n\t\tthis.g.BattleSounds = function() {\n\t\t\treturn true;\n\t\t}\n\t\tthis.g.YohohoSound = function() {\n\t\t\tvar soundName = \"yohoho\" + (Math.floor(Math.random() * 4) + 1);\n\t\t\tif ($this.g.BattleSounds())\n\t\t\t\t$this.PlaySound(soundName);\n\t\t}\n\n\t}\n\n\tView.Game.xdBuildScene = function(xdv) {\n\t\t\n\t\txdv.updateGadget(\"light\", {\n\t\t\t\"3d\" : {\n\t\t\t\tvisible: true,\n\t\t\t\tintensity: 0,\n\t\t\t},\n\t\t});\n\n\t\tfor ( var i = 0; i < this.g.Graph.length; i++) {\n\t\t\tvar coord = this.getVCoord(i);\n\t\t\txdv.updateGadget(\"hex#\" + i, {\n\t\t\t\tbase : {\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1],\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"mask#\" + i, {\n\t\t\t\tbase : {\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1],\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"text#\" + i, {\n\t\t\t\tbase : {\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1] - 500,\n\t\t\t\t},\n\t\t\t\t\"stylized\": {\n\t\t\t\t\ty : coord[1] - 400,\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\tx : coord[0]-200,\n\t\t\t\t\ty : coord[1]-300,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\txdv.updateGadget(\"board\",{\n\t\t\t\"2d\": {\n\t\t\t\tvisible: true,\n\t\t\t\trotate: this.mViewAs==JocGame.PLAYER_A?0:180,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"surround\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"ocean\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"island\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t});\n\t\t\n\t\tvar raftZoom=1.5;\n\t\tvar raftDist=6000;\n\t\t\n\t\txdv.updateGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tscale: [raftZoom,raftZoom,raftZoom],\n\t\t\t\trotate: this.mViewAs==1?45:180+45,\n\t\t\t\tz: 0,\n\t\t\t\ty: this.mViewAs==1?raftDist:-raftDist,\n\t\t\t\tx: this.mViewAs==1?-raftDist:raftDist,\n\t\t\t\tplayerSide: 1,\n\t\t\t},\n\t\t});\n\t\t\n\t\txdv.updateGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tscale: [raftZoom,raftZoom,raftZoom],\n\t\t\t\trotate: this.mViewAs==1?180+45:45,\n\t\t\t\tz: 0,\n\t\t\t\ty: this.mViewAs==1?-raftDist:raftDist,\n\t\t\t\tx: this.mViewAs==1?raftDist:-raftDist,\n\t\t\t\tplayerSide: -1,\n\t\t\t},\n\t\t});\n\n\t\tvar skyScreenDist=30000;\n\t\tvar skyScreenZoom=2;\n\t\tvar screenZ=9000;\n\t\txdv.updateGadget(\"videoa-sky\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tscale: [skyScreenZoom,skyScreenZoom,skyScreenZoom],\n\t\t\t\trotate: this.mViewAs==1?180:0,\n\t\t\t\tz: screenZ,\n\t\t\t\ty: this.mViewAs==1?skyScreenDist:-skyScreenDist,\n\t\t\t\tplayerSide: 1,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"videob-sky\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tscale: [skyScreenZoom,skyScreenZoom,skyScreenZoom],\n\t\t\t\trotate: this.mViewAs==1?0:180,\n\t\t\t\ty: this.mViewAs==1?-skyScreenDist:skyScreenDist,\n\t\t\t\tz: screenZ,\n\t\t\t\tplayerSide: -1,\n\t\t\t},\n\t\t});\n\t\t\n\t\t/*for (var g=0;g<5;g++){\n\t\t\traftDist=raftDist+1000;\n\t\t\txdv.updateGadget(\"videoa-\"+g,{\n\t\t\t\t\"3d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tscale: [raftZoom,raftZoom,raftZoom],\n\t\t\t\t\trotate: this.mViewAs==1?180+45:+45,\n\t\t\t\t\tz: 0,\n\t\t\t\t\ty: this.mViewAs==1?raftDist:-raftDist,\n\t\t\t\t\tx: this.mViewAs==1?-raftDist:raftDist,\n\t\t\t\t\tplayerSide: 1,\n\t\t\t\t},\n\t\t\t});\n\t\t}*/\n\t\t\n\t\txdv.updateGadget(\"flag\",{\n\t\t\t\"cartoon3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\trotate: this.mViewAs==JocGame.PLAYER_A?90:-90,\n\t\t\t},\t\t\t\n\t\t\t\"stylized3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\trotate: this.mViewAs==JocGame.PLAYER_A?-90:90,\n\t\t\t},\n\t\t});\n\t\tfor (var p =0 ; p < palmsPositions.length*nbStages*nbLeavesPerStage ; p++){\n\t\t\txdv.updateGadget(\"palmleaf#\"+p,{\n\t\t\t\t\"cartoon3d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tfor (var p =0 ; p < palmsPositions.length ; p++){\n\t\t\txdv.updateGadget(\"palmtrunc#\"+p,{\n\t\t\t\t\"cartoon3d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tfor ( var i = 0; i < this.g.Graph.length; i++) {\n\t\t\txdv.showGadget(\"hex#\" + i);\n\t\t\txdv.showGadget(\"mask#\" + i);\n\t\t\tif (this.mNotation)\n\t\t\t\txdv.showGadget(\"text#\" + i);\n\t\t\telse\n\t\t\t\txdv.hideGadget(\"text#\" + i);\n\t\t}\n\t}\n\n\tView.Board.xdDisplay = function(xdv, aGame) {\n\t\tfor ( var i=0; i<this.pieces.length; i++) {\n\t\t\tvar piece = this.pieces[i];\n\t\t\tvar id = piece.type + \":\" + piece.s + \":\" + piece.index;\n\t\t\tif (piece.alive) {\n\t\t\t\tvar coord = aGame.getVCoord(piece.pos);\n\t\t\t\t// this.Log(\"piece\",piece,coord)\n\t\t\t\txdv.updateGadget(id, {\n\t\t\t\t\t\"base\" : {\n\t\t\t\t\t\tvisible : true,\n\t\t\t\t\t\tx : coord[0],\n\t\t\t\t\t\ty : coord[1],\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\trotate: aGame.mViewAs==JocGame.PLAYER_A?piece.angle:piece.angle-180,\n\t\t\t\t\t\tz: T*.05,\n\t\t\t\t\t\trotateX: 0,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else\n\t\t\t\txdv.hideGadget(id);\n\t\t}\n\t}\n\n\tView.Board.xdBuildHTStateMachine = function(xdv, htsm, aGame) {\n\t\tvar $this = this;\n\n\t\tvar amiralCapture = this.YohohoAmiralCapture(aGame, this.mWho);\n\t\tvar captures = this.YohohoCaptures(aGame, this.mWho);\n\t\tvar move = {};\n\t\t\n\t\tfunction Highlight(item,type) {\n\t\t\tvar pos, piece=null, pieceId=null;\n\t\t\tif(typeof item==\"object\") {\n\t\t\t\tpiece=item;\n\t\t\t\tpieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\t\t\tpos=piece.pos;\n\t\t\t} else {\n\t\t\t\tpos=item;\n\t\t\t\tvar pieceIndex=$this.board[pos];\n\t\t\t\tif(pieceIndex>=0) {\n\t\t\t\t\tpiece=$this.pieces[pieceIndex];\n\t\t\t\t\tpieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar event,eventArgs,maskClass,hexColor;\n\t\t\tswitch(type) {\n\t\t\tcase \"piece\":\n\t\t\t\tevent=\"E_PIECE_CLICKED\";\n\t\t\t\teventArgs={ piece: piece };\n\t\t\t\tmaskClass=\"choice\"+(aGame.mShowMoves ? \" choice-view\": \"\");\n\t\t\t\thexColor=0x00ff00;\n\t\t\t\tbreak;\n\t\t\tcase \"position\":\n\t\t\t\tevent=\"E_DEST_CLICKED\";\n\t\t\t\teventArgs={ pos: pos };\n\t\t\t\tmaskClass=\"choice\"+(aGame.mShowMoves ? \" choice-view\": \"\");\n\t\t\t\thexColor=0x00ff00;\n\t\t\t\tbreak;\n\t\t\tcase \"attack\":\n\t\t\t\tevent=\"E_PIECE_CAPTURE\";\n\t\t\t\teventArgs={ piece: piece };\n\t\t\t\tmaskClass=\"choice\"+(aGame.mShowMoves ? \" choice-view-capture\": \"\");\n\t\t\t\thexColor=0xff0000;\n\t\t\t\tbreak;\n\t\t\tcase \"cancel\":\n\t\t\t\tevent=\"E_CLICK_CANCEL\";\n\t\t\t\teventArgs={ pos: pos };\n\t\t\t\tmaskClass=\"choice choice-view-cancel\";\n\t\t\t\thexColor=0xffffff;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\txdv.updateGadget(\"mask#\" + pos,{\n\t\t\t\tbase : {\n\t\t\t\t\tvisible : true,\n\t\t\t\t\tclick : function() {\n\t\t\t\t\t\thtsm.smQueueEvent(event, eventArgs);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"2d\" : {\n\t\t\t\t\tclasses : maskClass,\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"hex#\" + pos,{\n\t\t\t\t\"3d\" : {\n\t\t\t\t\tclick : function() {\n\t\t\t\t\t\thtsm.smQueueEvent(event, eventArgs);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"cartoon3d\": {\n\t\t\t\t\tcolor : hexColor,\n\t\t\t\t\topacity : 1 ,\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t\"stylized3d\": {\n\t\t\t\t\tcolor : hexColor,\n\t\t\t\t\topacity : 1 ,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif(piece)\n\t\t\t\txdv.updateGadget(pieceId,{\n\t\t\t\t\t\"3d\" : {\n\t\t\t\t\t\tclick : function() {\n\t\t\t\t\t\t\thtsm.smQueueEvent(event, eventArgs);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t}\n\n\t\tfunction Init(args) {\n\t\t\t//$this.Log(\"HTInit\");\n\t\t}\n\t\tfunction SelectFirst(args) {\n\t\t\t//$this.Log(\"HTSelectFirst\");\n\t\t\tif (amiralCapture.risk) {\n\t\t\t\tfor ( var i=0; i<amiralCapture.capture.length; i++)\n\t\t\t\t\tHighlight(amiralCapture.capture[i].at,\"attack\");\n\t\t\t\tif (amiralCapture.escape.length > 0)\n\t\t\t\t\tHighlight(amiralCapture.escape[0].f,\"piece\");\n\t\t\t} else {\n\t\t\t\tfor ( var i=0; i<captures.length; i++)\n\t\t\t\t\tHighlight(captures[i].at,\"attack\");\n\t\t\t\tfor ( var i=0; i<$this.pieces.length; i++) {\n\t\t\t\t\tvar piece = $this.pieces[i];\n\t\t\t\t\tif (piece.alive && piece.s == $this.mWho)\n\t\t\t\t\t\tHighlight(piece,\"piece\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfunction Clean(args) {\n\t\t\tfor ( var pos = 0; pos < aGame.g.Graph.length; pos++) {\n\t\t\t\txdv.updateGadget(\"mask#\" + pos, {\n\t\t\t\t\t\"base\" : {\n\t\t\t\t\t\tclick : null,\n\t\t\t\t\t\tvisible : false,\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\tclasses : \"\",\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.updateGadget(\"hex#\" + pos, {\n\t\t\t\t\t\"3d\" : {\n\t\t\t\t\t\tclick : null,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.restoreGadgetProps(\"hex#\" + pos, \"initial\");\n\t\t\t}\n\t\t\tfor( var i=0; i<$this.pieces.length; i++) {\n\t\t\t\tvar piece=$this.pieces[i];\n\t\t\t\txdv.updateGadget(piece.type+\":\"+piece.s+\":\"+piece.index, {\n\t\t\t\t\t\"3d\" : {\n\t\t\t\t\t\tclick : null,\n\t\t\t\t\t},\n\t\t\t\t});\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tfunction SaveProps(args) {\n\t\t\tvar piece=args.piece;\n\t\t\tvar pieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\t\txdv.saveGadgetProps(pieceId,[\"x\",\"y\",\"z\",\"rotate\",\"rotateX\"],\"beforefirst\");\n\t\t}\n\t\tfunction RestoreProps(args) {\n\t\t\tvar piece=$this.pieces[$this.board[move.m[0].f]];\n\t\t\tvar pieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\t\txdv.restoreGadgetProps(pieceId,\"beforefirst\");\n\t\t}\n\t\tfunction ClickFirst(args) {\n\t\t\tvar spos = args.piece.pos;\n\t\t\tvar index = $this.board[spos];\n\t\t\tif (index >= 0 && $this.pieces[index].s == -$this.mWho) {\n\t\t\t\tfor ( var i=0; i<captures.length; i++)\n\t\t\t\t\tif (captures[i].at == spos) {\n\t\t\t\t\t\tvar cmove = captures[i];\n\t\t\t\t\t\tif (aGame.g.BattleSounds())\n\t\t\t\t\t\t\taGame.PlaySound('assault');\n\t\t\t\t\t\tfor ( var j=0; j<cmove.af.length; j++)\n\t\t\t\t\t\t\txdv.updateGadget(\"mask#\" + cmove.af[i], {\n\t\t\t\t\t\t\t\t\"base\" : {\n\t\t\t\t\t\t\t\t\tvisible : true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\t\t\t\tclasses : \"attacker\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\txdv.updateGadget(\"mask#\" + spos, {\n\t\t\t\t\t\t\t\"base\" : {\n\t\t\t\t\t\t\t\tvisible : true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\t\t\tclasses : \"attack\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tmove = {\n\t\t\t\tt : 'm',\n\t\t\t\tm : [ {\n\t\t\t\t\tf : spos\n\t\t\t\t}, {} ]\n\t\t\t};\n\t\t}\n\t\tfunction SelectFirstDest(args) {\n\t\t\t//$this.Log(\"HTSelectFirstDest\");\n\t\t\tvar spos=move.m[0].f;\n\t\t\tHighlight(spos,\"cancel\");\n\t\t\tvar pos = move.m[0].f;\n\t\t\tvar piece = $this.pieces[$this.board[pos]];\n\t\t\tvar poss = $this.YohohoReachablePositions(aGame, pos, piece.type,\n\t\t\t\t\tnull, null);\n\t\t\tfor ( var i=0; i<poss.length; i++) {\n\t\t\t\tvar pos1 = poss[i];\n\t\t\t\tHighlight(pos1,\"position\");\n\t\t\t}\n\t\t}\n\t\tfunction ClearMove(args) {\n\t\t\tmove = {};\n\t\t}\n\t\tfunction ClickFirstDest(args) {\n\t\t\tvar epos = args.pos;\n\n\t\t\t//$this.Log(\"HTClickFirstDest\");\n\t\t\tif (aGame.g.BattleSounds())\n\t\t\t\taGame.PlaySound('move');\n\t\t\tmove.m[0].t = epos;\n\t\t\tvar coord = aGame.getVCoord(epos);\n\t\t\tvar coord0=aGame.getVCoord(move.m[0].f);\n\n\t\t\tvar piece = $this.pieces[$this.board[move.m[0].f]];\n\t\t\tvar pieceId = piece.type + \":\" + piece.s + \":\" + piece.index;\n\t\t\txdv.updateGadget(pieceId, {\n\t\t\t\tbase : {\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1],\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\trotate: Angle(coord0,coord),\n\t\t\t\t\t//rotateEasing: TWEEN.Easing.Cubic.EaseInOut,\n\t\t\t\t},\n\t\t\t},500,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_ANIMATE_DONE\",{});\n\t\t\t});\n\t\t}\n\t\tfunction CheckFirstEnd(args) {\n\t\t\tvar tCoord=aGame.g.Coord[move.m[0].t];\n\t\t\tvar tr=tCoord[0];\n\t\t\tvar tc=tCoord[1];\n\t\t\tvar pieceType=$this.pieces[$this.board[move.m[0].f]].type;\n\t\t\tif($this.first ||\n\t\t\t\t\t($this.mWho==JocGame.PLAYER_A && tr==8 && pieceType==\"C\") ||\n\t\t\t\t\t($this.mWho==JocGame.PLAYER_B && tr==0 && pieceType==\"C\")) {\n\t\t\t\t\taGame.MakeMove(move); \n\t\t\t} else\n\t\t\t\thtsm.smQueueEvent(\"E_NO_END\",{});\n\t\t}\n\t\tfunction SelectSecond(args) {\n\t\t\t//$this.Log(\"HTSelectSecond\");\n\t\t\tvar spos=move.m[0].t;\n\t\t\tHighlight(spos,\"cancel\");\n\t\t\tfor ( var i=0; i<$this.pieces.length; i++) {\n\t\t\t\tvar piece = $this.pieces[i];\n\t\t\t\tif (piece.alive && piece.s == $this.mWho && piece.pos!=move.m[0].f)\n\t\t\t\t\tHighlight(piece,\"piece\");\n\t\t\t}\n\t\t}\n\t\tfunction ClickSecond(args) {\n\t\t\tvar spos = args.piece.pos;\n\t\t\tvar index = $this.board[spos];\n\t\t\tif (index >= 0 && $this.pieces[index].s == -$this.mWho) {\n\t\t\t\tfor ( var i=0; i<captures.length; i++)\n\t\t\t\t\tif (captures[i].at == spos) {\n\t\t\t\t\t\tvar cmove = captures[i];\n\t\t\t\t\t\tif (aGame.g.BattleSounds())\n\t\t\t\t\t\t\taGame.PlaySound('assault');\n\t\t\t\t\t\tfor ( var j=0; j<cmove.af.length; j++)\n\t\t\t\t\t\t\txdv.updateGadget(\"mask#\" + cmove.af[i], {\n\t\t\t\t\t\t\t\t\"base\" : {\n\t\t\t\t\t\t\t\t\tvisible : true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\t\t\t\tclasses : \"attacker\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\txdv.updateGadget(\"mask#\" + spos, {\n\t\t\t\t\t\t\t\"base\" : {\n\t\t\t\t\t\t\t\tvisible : true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"2d\" : {\n\t\t\t\t\t\t\t\tclasses : \"attack\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tmove.m[1] = {\n\t\t\t\tf : spos\n\t\t\t};\n\t\t}\n\t\tfunction SelectSecondDest(args) {\n\t\t\t//$this.Log(\"HTSelectFirstDest\");\n\t\t\tvar spos=move.m[1].f;\n\t\t\tHighlight(spos,\"cancel\");\n\t\t\tvar pos = move.m[1].f;\n\t\t\tvar piece = $this.pieces[$this.board[pos]];\n\t\t\tvar poss=$this.YohohoReachablePositions(aGame,pos,piece.type,move.m[0].f,move.m[0].t);\n\t\t\tfor ( var i=0; i<poss.length; i++) {\n\t\t\t\tvar pos1 = poss[i];\n\t\t\t\tHighlight(pos1,\"position\");\n\t\t\t}\n\t\t}\n\t\tfunction ClearSecondMove(args) {\n\t\t\tdelete move.m[1];\n\t\t}\n\t\tfunction ClickSecondDest(args) {\n\t\t\tvar epos = args.pos;\n\n\t\t\t//$this.Log(\"HTClickSecondDest\");\n\t\t\tif (aGame.g.BattleSounds()) {\n\t\t\t\tvar board = new (aGame.GetBoardClass())(aGame);\t\n\t\t\t\tboard.CopyFrom($this);\n\t\t\t\tboard.mWho = -$this.mWho;\n\t\t\t\tboard.mBoardClass = $this.mBoardClass;\n\t\t\t\tboard.ApplyMove(aGame,move);\n\t\t\t\tif(board.yohoho)\n\t\t\t\t\taGame.g.YohohoSound();\n\t\t\t\taGame.PlaySound('move');\n\t\t\t}\n\t\t\tmove.m[1].t = epos;\n\t\t\tvar coord = aGame.getVCoord(epos);\n\t\t\tvar coord0 = aGame.getVCoord(move.m[1].f);\n\n\t\t\tvar piece = $this.pieces[$this.board[move.m[1].f]];\n\t\t\tvar pieceId = piece.type + \":\" + piece.s + \":\" + piece.index;\n\t\t\txdv.updateGadget(pieceId, {\n\t\t\t\tbase : {\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1],\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\trotate: Angle(coord0,coord),\n\t\t\t\t\t//rotateEasing: TWEEN.Easing.Cubic.EaseInOut,\n\t\t\t\t},\n\t\t\t},500,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_ANIMATE_DONE\",{});\n\t\t\t});\n\t\t}\n\t\tfunction SendMove(args) {\n\t\t\taGame.MakeMove(move); \n\t\t}\n\t\tfunction AnimateCapture(args) {\n\t\t\tvar spos=args.piece.pos;\n\t\t\tfor(var i=0; i<captures.length; i++)\n\t\t\t\tif(captures[i].at==spos) {\n\t\t\t\t\tvar cmove=captures[i];\n\t\t\t\t\tif (aGame.g.BattleSounds()) aGame.PlaySound('assault');\n\t\t\t\t\tfor(var j=0; j<cmove.af.length; j++)\n\t\t\t\t\t\txdv.updateGadget(\"mask#\"+cmove.af[j],{\n\t\t\t\t\t\t\t\"base\": {\n\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\tclasses: \"attacker\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\txdv.updateGadget(\"mask#\"+spos,{\n\t\t\t\t\t\t\"base\": {\n\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\tclasses: \"attack\"\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tfor(var j=0; j<cmove.af.length; j++)\n\t\t\t\t\t\t\txdv.updateGadget(\"mask#\"+cmove.af[j],{\n\t\t\t\t\t\t\t\t\"base\": {\n\t\t\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\t\tclasses: \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\txdv.updateGadget(\"mask#\"+spos,{\n\t\t\t\t\t\t\t\"base\": {\n\t\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\tclasses: \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\thtsm.smQueueEvent(\"E_ANIMATE_DONE\",{});\n\t\t\t\t\t},4000);\n\t\t\t\t\tmove=captures[i];\n\t\t\t\t\t\n\t\t\t\t\tvar coord=aGame.getVCoord(spos);\n\t\t\t\t\tvar attackers=[];\n\t\t\t\t\tfor(var j=0; j<cmove.af.length; j++)\n\t\t\t\t\t\tattackers.push($this.pieces[$this.board[cmove.af[j]]]);\n\t\t\t\t\tAnimateAttack(xdv,aGame,args.piece,attackers);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t}\n\t\tfunction BackFirst(args) {\n\t\t\tvar spos=move.m[0].f;\n\t\t\tvar piece=$this.pieces[$this.board[spos]];\n\t\t\tvar pieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\t\tvar coord=aGame.getVCoord(spos);\n\t\t\txdv.updateGadget(pieceId,{\n\t\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t},\n\t\t\t});\n\t\t}\t\t\n\t\t\n\t\thtsm.smTransition(\"S_INIT\", \"E_INIT\", \"S_SELECT_FIRST\", [ Init ]);\n\t\thtsm.smEntering(\"S_SELECT_FIRST\", [ SelectFirst ]);\n\t\thtsm.smTransition(\"S_SELECT_FIRST\", \"E_PIECE_CLICKED\",\n\t\t\t\t\"S_SELECT_FIRST_DEST\", [ SaveProps, ClickFirst ]);\n\t\thtsm.smTransition(\"S_SELECT_FIRST\", \"E_PIECE_CAPTURE\",\n\t\t\t\t\"S_ANIMATE_CAPTURE\", [ AnimateCapture ]);\n\t\thtsm.smLeaving(\"S_SELECT_FIRST\", [ Clean ]);\n\t\thtsm.smEntering(\"S_SELECT_FIRST_DEST\", [ SelectFirstDest ]);\n\t\thtsm.smTransition(\"S_SELECT_FIRST_DEST\", \"E_CLICK_CANCEL\",\n\t\t\t\t\"S_SELECT_FIRST\", [ ClearMove ]);\n\t\thtsm.smTransition(\"S_SELECT_FIRST_DEST\", \"E_DEST_CLICKED\",\n\t\t\t\t\"S_ANIMATE_FIRST\", [ ClickFirstDest ]);\n\t\thtsm.smLeaving(\"S_SELECT_FIRST_DEST\", [ Clean ]);\n\n\t\thtsm.smTransition(\"S_ANIMATE_FIRST\",\"E_ANIMATE_DONE\",\"S_CHECK_END\",[CheckFirstEnd]);\n\t\thtsm.smTransition(\"S_CHECK_END\",\"E_NO_END\",\"S_SELECT_SECOND\",[]);\n\n\t\thtsm.smEntering(\"S_SELECT_SECOND\", [ SelectSecond ]);\n\t\thtsm.smTransition(\"S_SELECT_SECOND\", \"E_PIECE_CLICKED\",\n\t\t\t\t\"S_SELECT_SECOND_DEST\", [ ClickSecond ]);\n\t\thtsm.smTransition(\"S_SELECT_SECOND\", \"E_CLICK_CANCEL\",\n\t\t\t\t\"S_SELECT_FIRST_DEST\", [ RestoreProps, BackFirst, ClearSecondMove ]);\n\t\thtsm.smLeaving(\"S_SELECT_SECOND\", [ Clean ]);\n\t\thtsm.smEntering(\"S_SELECT_SECOND_DEST\", [ SelectSecondDest ]);\n\t\thtsm.smTransition(\"S_SELECT_SECOND_DEST\", \"E_CLICK_CANCEL\",\n\t\t\t\t\"S_SELECT_SECOND\", [ ClearSecondMove ]);\n\t\thtsm.smTransition(\"S_SELECT_SECOND_DEST\", \"E_DEST_CLICKED\",\n\t\t\t\t\"S_ANIMATE_SECOND\", [ ClickSecondDest ]);\n\t\thtsm.smLeaving(\"S_SELECT_SECOND_DEST\", [ Clean ]);\n\t\thtsm.smTransition(\"S_ANIMATE_SECOND\",\"E_ANIMATE_DONE\",\"S_DONE\",[SendMove]);\n\t\thtsm.smTransition(\"S_ANIMATE_CAPTURE\",\"E_ANIMATE_DONE\",\"S_DONE\",[SendMove]);\n\t\t\n\t\thtsm.smTransition([\"S_SELECT_FIRST\",\"S_SELECT_FIRST_DEST\",\"S_SELECT_SECOND\",\"S_SELECT_SECOND_DEST\",\"S_ANIMATE_CAPTURE\",\"S_ANIMATE_FIRST\",\"S_ANIMATE_SECOND\",\"S_CHECK_END\",\"S_DONE\"],\n\t\t\t\t\"E_END\",\"S_DONE\", [ Clean ]);\n\t}\n\n\tView.Board.xdPlayedMove = function(xdv, aGame, aMove) {\n\t\tvar $this=this;\n\t\tif(aMove.t=='m') {\n\t\t\tif (aGame.g.BattleSounds())\n\t\t\t\taGame.PlaySound('move');\n\t\t\tif(this.yohoho) {\n\t\t\t\taGame.g.YohohoSound();\n\t\t\t}\n\t\t\tvar piece=this.pieces[this.board[aMove.m[0].t]];\n\t\t\tvar pieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\t\tvar coord=aGame.getVCoord(aMove.m[0].t);\n\t\t\tvar coord0=aGame.getVCoord(aMove.m[0].f);\n\t\t\txdv.updateGadget(pieceId,{\n\t\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\trotate: Angle(coord0,coord),\n\t\t\t\t\t//rotateEasing: TWEEN.Easing.Cubic.EaseInOut,\n\t\t\t\t}\n\t\t\t},1000,function() {\n\t\t\t\tif(typeof aMove.m[1].f==\"undefined\") \n\t\t\t\t\taGame.MoveShown();\n\t\t\t\telse {\n\t\t\t\t\tif (aGame.g.BattleSounds())\n\t\t\t\t\t\taGame.PlaySound('move');\n\t\t\t\t\tvar piece=$this.pieces[$this.board[aMove.m[1].t]];\n\t\t\t\t\tvar pieceId=piece.type+\":\"+piece.s+\":\"+piece.index;\n\t\t\t\t\tvar coord=aGame.getVCoord(aMove.m[1].t);\n\t\t\t\t\tvar coord0=aGame.getVCoord(aMove.m[1].f);\n\t\t\t\t\txdv.updateGadget(pieceId,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\tx: coord[0],\n\t\t\t\t\t\t\ty: coord[1],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\t\trotate: Angle(coord0,coord),\n\t\t\t\t\t\t\t//rotateEasing: TWEEN.Easing.Cubic.EaseInOut,\n\t\t\t\t\t\t}\n\t\t\t\t\t},500,function() {\n\t\t\t\t\t\taGame.MoveShown();\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\n\t\t\t});\n\t\t} else if(aMove.t=='a') {\n\t\t\tif (aGame.g.BattleSounds()) aGame.PlaySound('assault');\n\t\t\t\n\t\t\tfor(var j=0; j<aMove.af.length; j++)\n\t\t\t\txdv.updateGadget(\"mask#\"+aMove.af[j],{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tclasses: \"attacker\",\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\txdv.updateGadget(\"mask#\"+aMove.at,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tclasses: \"attack\",\n\t\t\t\t},\n\t\t\t});\n\t\t\tsetTimeout(function() {\n\t\t\t\tfor(var j=0; j<aMove.af.length; j++)\n\t\t\t\t\txdv.updateGadget(\"mask#\"+aMove.af[j],{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\tclasses: \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\txdv.updateGadget(\"mask#\"+aMove.at,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tclasses: \"\"\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\taGame.MoveShown();\n\t\t\t},4000);\n\t\t\tvar attackers=[];\n\t\t\tfor(var j=0; j<aMove.af.length; j++)\n\t\t\t\tattackers.push(aGame.mOldBoard.pieces[aGame.mOldBoard.board[aMove.af[j]]]);\n\t\t\tAnimateAttack(xdv,aGame,aGame.mOldBoard.pieces[aGame.mOldBoard.board[aMove.at]],attackers);\n\t\t}\n\t\treturn false;\n\t}\n\t\n})();\n\n"],"file":"yohoho-view.js"}