{"version":3,"names":[],"mappings":"","sources":["pensoc-xd-view.js"],"sourcesContent":["(function() {\n\n\tvar fullPath, SIZE=1066,Coord;\n\tvar SIZE3D=1,BLENDER2WORLD=1000;\n\tvar FIX2D=0.859285714;\n\tvar oceanLevel=-400,nbIcebergs=60;\n\tvar psStartPos;\n\t\n\tvar upMorphPos=[1,0];\n\tvar layedMorphPos=[0,1];\n\tvar scaleArrow3d=0.2;\n\tvar fieldZ=500;\n\tvar overBallZ=fieldZ+550;\n\tvar xboard3dOffest=-950;\n\t\n\t\n\tvar iceMat,iceMatBlack;\n\n\n\tvar RestCoord={\n\t\t'1': [\n\t\t      [-6300,4100,fieldZ],[-4700,5000,fieldZ],[-3200,4800,fieldZ],\n\t\t      [1000,-5200,fieldZ],[2600,-5300,fieldZ],[3100,-3900,fieldZ],\n\t\t     ],\n\t\t'-1': [\n\t\t      [1000,-5200,fieldZ],[2600,-5300,fieldZ],[3100,-3900,fieldZ],\n\t\t      [-6300,4100,fieldZ],[-4700,5000,fieldZ],[-3200,4800,fieldZ],\n\t\t     ],\n\t}\n\tvar RestClip=[\n        [1200,200],[1400,200],[1600,200],\n        [1200,0],[1400,0],[1600,0],\n\t];\n\tvar StandClip=[\n\t    [0,200],[200,200],[400,200],\n\t    [0,0],[200,0],[400,0],\n\t];\n\tvar LayClip=[\n   \t    [600,200],[800,200],[1000,200],\n   \t    [600,0],[800,0],[1000,0],\n   \t];\n\tvar StandRotation={\n\t\t'1': [0,0,0,180,180,180],\n\t\t'-1': [180,180,180,0,0,0],\n\t}\n\tvar RestRotation={\n\t\t'1': [90,45,0,315,225,270],\t\t\t\n\t\t'-1': [315,225,270,90,45,0],\n\t}\n\tvar Angles={\n\t\t'1': [0,315,270,225,180,135,90,45],\n\t\t'-1': [180,135,90,45,0,315,270,225],\n\t}\n\t\n\tView.Game.xdInit = function(xdv) {\n\t\tfullPath=this.mViewOptions.fullPath;\n\t\t\n\t\tif (typeof THREE != \"undefined\"){\n\t\t\tvar path = fullPath+\"/res/xd-view/textures/skybox/\";\n\t\t\tvar diffuse = 0xccccff, specular = 0x111111, shininess = 100, scale = 23;\n\t\t\tvar format = \".jpg\";\n\t\t\tvar urls = [\n\t\t\t\tpath + 'sb-nord' + format, path + 'sb-sud' + format,\n\t\t\t\tpath + 'sb-top' + format, path + 'sb-bottom' + format,\n\t\t\t\tpath + 'sb-ouest' + format, path + 'sb-est' + format\n\t\t\t];\t\t\t\n\t\t\tvar reflectionCube = new THREE.CubeTextureLoader().load( urls ); \n\t\t\ticeMat = new THREE.MeshPhongMaterial( {\n\t\t\t\tcolor: diffuse,\n\t\t\t\tspecular: specular,\n\t\t\t\tshininess: shininess,\n\t\t\t\tenvMap: reflectionCube,\n\t\t\t\tcombine: THREE.AddOperation,\n\t\t\t\tshading: THREE.SmoothShading,\n\t\t\t\treflectivity: 1\n\t\t\t} );\t\t\n\t\t\ticeMatBlack = new THREE.MeshPhongMaterial( {\n\t\t\t\tcolor: 0x0044aa,\n\t\t\t\tspecular: specular,\n\t\t\t\tshininess: shininess,\n\t\t\t\tenvMap: reflectionCube,\n\t\t\t\tcombine: THREE.AddOperation,\n\t\t\t\tshading: THREE.FlatShading,\n\t\t\t\treflectivity: 0.6,\n\t\t\t} );\t\t\n\t\t\t\n\t\t}\n\n\t\t\n\t\txdv.createGadget(\"board\",{\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"image\",\n\t\t\t\tfile: fullPath+\"/res/images/ps-background.jpg\",\n\t\t\t\twidth: 12030,\n\t\t\t\theight: 10337,\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"goala\",{\n\t\t\tbase: {\n\t\t\t\tx: -1000,\n\t\t\t\ty: 5250,\n\t\t\t},\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"sprite\",\n\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\tclipx: 200,\n\t\t\t\tclipy: 400,\n\t\t\t\tclipwidth: 200,\n\t\t\t\tclipheight: 200,\n\t\t\t\tx: -859,\n\t\t\t\ty: 4511,\n\t\t\t\twidth: 1718,\n\t\t\t\theight: 1718,\n\t\t\t\tz: 6,\n\t\t\t},\n\t\t\t\"3d\" : {\n\t\t\t\ttype:\"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/goals3.js\",\n\t\t\t}\n\t\t});\n\t\txdv.createGadget(\"goalb\",{\n\t\t\tbase: {\n\t\t\t\tx: -1000,\n\t\t\t\ty: -5250,\n\t\t\t},\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"sprite\",\n\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\tclipx: 200,\n\t\t\t\tclipy: 400,\n\t\t\t\tclipwidth: 200,\n\t\t\t\tclipheight: 200,\n\t\t\t\tx: -859,\n\t\t\t\ty: -4511,\n\t\t\t\twidth: 1718,\n\t\t\t\theight: 1718,\n\t\t\t\tz: 6,\n\t\t\t\trotate: 180,\n\t\t\t},\n\t\t\t\"3d\" : {\n\t\t\t\ttype:\"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/goals3.js\",\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"ball\",{\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"sprite\",\n\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\tclipx: 0,\n\t\t\t\tclipy: 400,\n\t\t\t\tclipwidth: 200,\n\t\t\t\tclipheight: 200,\n\t\t\t\twidth: 859,\n\t\t\t\theight: 859,\n\t\t\t\tz: 3,\n\t\t\t},\n \t\t\t\"3d\": {\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tcreate: function(callback){ \n\t\t\t\t\tvar $this=this;\n\t\t\t\t\tvar diffuse = 0xbbbbbb, specular = 0x444444, shininess = 20, scale = 23;\n\t\t\t\t\tthis.getMaterialMap(fullPath + \"/res/xd-view/meshes/soccer-texture2.jpg\",function(diffMap) {\n                        if(!diffMap)\n                            return callback(null);\n                        var material2 = new THREE.MeshPhongMaterial( {\n                            color: diffuse,\n                            specular: specular,\n                            shininess: shininess,\n                            combine: THREE.MixOperation,\n                            shading: THREE.SmoothShading,\n                            map: diffMap,\n                        } );\n\n                        var smooth=0;\n                        var url=\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/soccerball2.js\";\n                        $this.getResource(url,function(geometry , materials){\n                                geometry.computeVertexNormals(); // needed in normals not exported in js file!\n                                var mesh= new THREE.Mesh( geometry , material2 );\n                                callback(mesh);\n                            });\n                    });\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t\tvar penguinTypes=[\"mama\",\"daddy\",\"baby\"];\n\t\tfor(var i=0;i<6;i++){\n\t\t\t(function(i){\n\t\t\t\tvar type=penguinTypes[i%3];\n\t\t\t\tvar team=i<3?\"A\":\"B\";\n\t\t\t\tvar penguinScale=0.2;\n\t\t\t\txdv.createGadget(\"penguin#\"+i,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\ttype: \"sprite\",\n\t\t\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\t\t\tclipwidth: 200,\n\t\t\t\t\t\tclipheight: 200,\n\t\t\t\t\t\twidth: 1031,\n\t\t\t\t\t\theight: 1031,\n\t\t\t\t\t\tz: 4,\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\t\tscale: [penguinScale,penguinScale,penguinScale],\n\t\t\t\t\t\tmorphing: upMorphPos,\n\t\t\t\t\t\tcreate: function(callback){\n\t\t\t\t\t\t\tvar $this=this;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfunction checkMaps(){\n\t\t\t\t\t\t\t\tnbMaps--;\n\t\t\t\t\t\t\t\tif (nbMaps==0){\n\t\t\t\t\t\t\t\t\t// all maps loaded, go for mesh\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar diffuse = 0xffffff, specular = 0x111111, shininess = 50, scale = 23;\n\t\t\t\t\t\t\tthis.getMaterialMap(fullPath + \"/res/xd-view/meshes/\"+type+\"-\"+team+\"-diffusex512.jpg\",function(diffMap) {\n                                if(!diffMap)\n                                    return callback(null);\n                                var material2 = new THREE.MeshPhongMaterial( {\n                                    color: diffuse,\n                                    specular: specular,\n                                    shininess: shininess,\n                                    combine: THREE.MixOperation,\n                                    shading: THREE.SmoothShading,\n                                    morphTargets: true,\n                                    map: diffMap,\n                                } );\n\n                                var smooth = 0;\n                                var url = \"smoothedfilegeo|\" + smooth + \"|\" + fullPath + \"/res/xd-view/meshes/\" + type + \"-animated.js\";\n                                $this.getResource(url, function(geometry, materials) {\n                                    geometry.computeVertexNormals();\n                                    // needed if normals not exported in js file!\n                                    var mesh = new THREE.Mesh(geometry, material2);\n                                    callback(mesh);\n                                });\n\n                            });\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})(i);\n\t\t}\n\t\t\n\t\tfor(var pos=0;pos<64;pos++)\n\t\t\t(function(pos) {\n\t\t\t\txdv.createGadget(\"text#\"+pos,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\ttype : \"element\",\n\t\t\t\t\t\twidth : 386,\n\t\t\t\t\t\theight : 386,\n\t\t\t\t\t\tinitialClasses: \"notation\",\n\t\t\t\t\t\tcss : {\n\t\t\t\t\t\t\t\"text-align\" : \"center\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tz : 2,\n\t\t\t\t\t\tdisplay : function(element, width, height) {\n\t\t\t\t\t\t\telement.css({\n\t\t\t\t\t\t\t\t\"font-size\" : (height * .6) + \"pt\",\n\t\t\t\t\t\t\t\t\"line-height\" : (height * 1) + \"px\",\n\t\t\t\t\t\t\t}).text(pos);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\t\t\tcreate: function() {\n                            var $this = this;\n                            this.getResource('font|'+fullPath+\n                                '/res/xd-view/fonts/helvetiker_regular.typeface.json',\n                                function(font) {\n                                var gg=new THREE.TextGeometry(\"\"+pos,{\n                                    size: 0.25,\n                                    height: 0.05,\n                                    curveSegments: 6,\n                                    font: font,\n                                });\n                                gg.center();\n                                var gm=new THREE.MeshPhongMaterial({color:0x000000});\n                                var mesh= new THREE.Mesh( gg , gm );\n                                $this.objectReady(mesh);\n                            });\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t});\t\t\t\t\t\t\n\t\t\t\txdv.createGadget(\"cell#\"+pos,{\n\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\ttype : \"custommesh3d\",\n\t\t\t\t\t\tscale: [1.1,1.1,1],\n\t\t\t\t\t\tcreate: function(callback){\n\t\t\t\t\t\t\tvar url=\"smoothedfilegeo|0|\"+fullPath+\"/res/xd-view/meshes/icecube1.js\";\n\t\t\t\t\t\t\tthis.getResource(url,function(geometry , materials){\n\t\t\t\t\t\t\t\tgeometry.computeVertexNormals(); // needed in normals not exported in js file!\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar r=Math.floor(pos/8);\n\t\t\t\t\t\t\t\tvar c=pos%8;\n\t\t\t\t\t\t\t\tvar mesh= new THREE.Mesh( geometry , (r+c)%2?iceMat:iceMatBlack );\n\t\t\t\t\t\t\t\tcallback(mesh);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tflatShading: true,\n\t\t\t\t\t\trotate: Math.ceil(Math.random()*4)*90,\n\t\t\t\t\t\t//rotateX: Math.random()*3-1.5,\n\t\t\t\t\t\t//rotateY: Math.random()*3-1.5,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})(pos);\n\t\t\n\n\t\tfunction CreateButton(button) {\n\t\t\txdv.createGadget(button.name+\"-image\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"sprite\",\n\t\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\t\tclipwidth: button.clipwidth,\n\t\t\t\t\tclipheight: 200,\n\t\t\t\t\twidth: button.width,\n\t\t\t\t\theight: 1200,\n\t\t\t\t\tclipx: button.clipx,\n\t\t\t\t\tclipy: button.clipy,\n\t\t\t\t\tx: 4726,\n\t\t\t\t\ty: button.y,\n\t\t\t\t\tz: 4,\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.createGadget(button.name+\"-background\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"sprite\",\n\t\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\t\tclipwidth: 300,\n\t\t\t\t\tclipheight: 200,\n\t\t\t\t\twidth: 2062,\n\t\t\t\t\theight: 1203,\n\t\t\t\t\tclipx: 0,\n\t\t\t\t\tclipy: 600,\n\t\t\t\t\tx: 4726,\n\t\t\t\t\ty: button.y,\n\t\t\t\t\tz: 3,\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.createGadget(button.name+\"-highlight\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\twidth: 2234,\n\t\t\t\t\theight: 1374,\n\t\t\t\t\tx: 4726,\n\t\t\t\t\ty: button.y,\n\t\t\t\t\tz: 2,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"background-color\": \"Orange\",\n\t\t\t\t\t\t\"border-radius\": \"10%\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tvar but3d=false;\n\t\t\tvar meshfile=\"\";\n\t\t\tif (button.name===\"up\"){\n\t\t\t\tbut3d=true;\n\t\t\t}\n\t\t\txdv.createGadget(button.name+\"-clicker\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\twidth: 2234,\n\t\t\t\t\theight: 1374,\n\t\t\t\t\tx: 4726,\n\t\t\t\t\ty: button.y,\n\t\t\t\t\tz: 10,\n\t\t\t\t\tinitialClasses: \"clicker\",\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"border-radius\": \"10%\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\ttype: but3d?\"meshfile\":\"\",\n\t\t\t\t\tscale:[scaleArrow3d,scaleArrow3d,scaleArrow3d*5],\n\t\t\t\t\tflatShading: true,\n\t\t\t\t\tz:1500,\n\t\t\t\t\trotateX:90,\n\t\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/arrow.js\",\n\t\t\t\t\tmaterials: { \n\t\t\t\t\t\t\"mat.arrow\" : {\n\t\t\t\t\t\t\tcolor : 0x0088ff,\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar buttons=[{\n\t\t\tname: \"up\",\n\t\t\twidth: 1546,\n\t\t\tclipx: 300,\n\t\t\tclipy: 600,\n\t\t\tclipwidth: 300,\n\t\t\ty: 2148,\n\t\t},{\n\t\t\tname: \"slide\",\n\t\t\twidth: 1546,\n\t\t\tclipx: 600,\n\t\t\tclipy: 600,\n\t\t\tclipwidth: 300,\n\t\t\ty: 3694,\n\t\t},{\n\t\t\tname: \"penguin0\",\n\t\t\twidth: 1031,\n\t\t\tclipx: 0,\n\t\t\tclipy: 200,\n\t\t\tclipwidth: 200,\n\t\t\ty: -1460,\n\t\t},{\n\t\t\tname: \"penguin1\",\n\t\t\twidth: 1031,\n\t\t\tclipx: 200,\n\t\t\tclipy: 200,\n\t\t\tclipwidth: 200,\n\t\t\ty: -2921,\n\t\t},{\n\t\t\tname: \"penguin2\",\n\t\t\twidth: 1031,\n\t\t\tclipx: 200,\n\t\t\tclipy: 200,\n\t\t\tclipwidth: 200,\n\t\t\ty: -4382,\n\t\t}];\n\t\t\n\t\tfor(var i=0;i<buttons.length;i++)\n\t\t\tCreateButton(buttons[i]);\n\n\t\txdv.createGadget(\"cancel-image\",{\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"sprite\",\n\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\tclipwidth: 200,\n\t\t\t\tclipheight: 200,\n\t\t\t\twidth: 1031,\n\t\t\t\theight: 1031,\n\t\t\t\tclipx: 600,\n\t\t\t\tclipy: 400,\n\t\t\t\tx: 4897,\n\t\t\t\ty: 172,\n\t\t\t\tz: 4,\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"cancel-highlight\",{\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"element\",\n\t\t\t\twidth: 1203,\n\t\t\t\theight: 1203,\n\t\t\t\tx: 4897,\n\t\t\t\ty: 171,\n\t\t\t\tz: 2,\n\t\t\t\tcss: {\n\t\t\t\t\t\"background-color\": \"transparent\",\n\t\t\t\t\t\"border\": \"6px solid Magenta\",\n\t\t\t\t\t\"border-radius\": \"50%\",\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"cancel-clicker\",{\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"element\",\n\t\t\t\twidth: 2234,\n\t\t\t\theight: 1374,\n\t\t\t\tx: 4897,\n\t\t\t\ty: 171,\n\t\t\t\tz: 10,\n\t\t\t\tinitialClasses: \"clicker\",\n\t\t\t\topacity: 0,\n\t\t\t\tcss: {\n\t\t\t\t\t\"border-radius\": \"10%\",\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\t\n\t\tfor(var i=0;i<8;i++) {\n\t\t\txdv.createGadget(\"rotator-image#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"sprite\",\n\t\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\t\tclipwidth: 200,\n\t\t\t\t\tclipheight: 200,\n\t\t\t\t\twidth: 1031,\n\t\t\t\t\theight: 1031,\n\t\t\t\t\tclipx: 400,\n\t\t\t\t\tclipy: 400,\n\t\t\t\t\tz: 4,\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.createGadget(\"rotator-highlight#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\twidth: 1031,\n\t\t\t\t\theight: 1031,\n\t\t\t\t\tz: 2,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"background-color\": \"transparent\",\n\t\t\t\t\t\t\"border\": \"6px solid Orange\",\n\t\t\t\t\t\t\"border-radius\": \"50%\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t\txdv.createGadget(\"rotator-clicker#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\twidth: 1200,\n\t\t\t\t\theight: 1200,\n\t\t\t\t\tz: 10,\n\t\t\t\t\tinitialClasses: \"clicker\",\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"border-radius\": \"50%\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t\txdv.createGadget(\"rotator-plot#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\twidth: 429,\n\t\t\t\t\theight: 429,\n\t\t\t\t\tz: 1,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"background-color\": \"White\",\n\t\t\t\t\t\t\"border-radius\": \"50%\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t}\n\t\txdv.createGadget(\"rotator-subject\",{\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"sprite\",\n\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\tclipwidth: 200,\n\t\t\t\tclipheight: 200,\n\t\t\t\twidth: 1031,\n\t\t\t\theight: 1031,\n\t\t\t\tclipx: 600,\n\t\t\t\tclipy: 200,\n\t\t\t\tx: 4124,\n\t\t\t\ty: 3007,\n\t\t\t\tz: 4,\n\t\t\t\trotate: 0,\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"rotator-circle\",{\n\t\t\t\"2d\": {\n\t\t\t\ttype: \"element\",\n\t\t\t\twidth: 2577,\n\t\t\t\theight: 2577,\n\t\t\t\tx: 4124,\n\t\t\t\ty: 3007,\n\t\t\t\tz: 1,\n\t\t\t\tcss: {\n\t\t\t\t\t\"background-color\": \"transparent\",\n\t\t\t\t\t\"border\": \"6px solid White\",\n\t\t\t\t\t\"border-radius\": \"50%\",\n\t\t\t\t},\n\t\t\t},\n\t\t});\t\t\t\n\t\txdv.createGadget(\"surround\", {\n\t\t\t\"3d\" : {\n\t\t\t\ttype: \"custom3d\",\n\t\t\t\twidth: 100000,\n\t\t\t\theight: 100000,\n\t\t\t\tdepth: 100000,\n\t\t\t\tscale: [1,1,1],\n\t\t\t\trotate: 90,\n\t\t\t\tcreate: function() {\t\n\t\t\t\t\tvar path = fullPath+\"/res/xd-view/textures/skybox/\";\n\n\t\n\t\t\t\t\tvar format = \".jpg\";\n\t\t\t\t\tvar urls = [\n\t\t\t\t\t\tpath + 'sb-nord' + format, path + 'sb-sud' + format,\n\t\t\t\t\t\tpath + 'sb-top' + format, path + 'sb-bottom' + format,\n\t\t\t\t\t\tpath + 'sb-ouest' + format, path + 'sb-est' + format\n\t\t\t\t\t];\n\t\t\t\t\t\n\t\t\t\t\tvar textureCube =  new THREE.CubeTextureLoader().load( urls ); // THREE.ImageUtils.loadTextureCube( urls, new THREE.CubeRefractionMapping() );\n\t\t\t\t\tvar material = new THREE.MeshBasicMaterial( { color: 0xffffff, envMap: textureCube, refractionRatio: 0.95 } );\n\t\t\t\t\tvar shader = {\n\t\t\t\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\n\t\t\t\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: -1 } },\n\t\t\t\t\t\tvertexShader: [\n\t\t\t\t\t\t\t\"varying vec3 vViewPosition;\",\n\t\t\t\t\t\t\t\"void main() {\",\n\t\t\t\t\t\t\t\t\"vec4 mPosition = modelMatrix * vec4( position, 1.0 );\",\n\t\t\t\t\t\t\t\t\"vViewPosition = cameraPosition - mPosition.xyz;\",\n\t\t\t\t\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t].join(\"\\n\"),\n\t\t\t\n\t\t\t\t\t\tfragmentShader: [\n\t\t\t\t\t\t\t\"uniform samplerCube tCube;\",\n\t\t\t\t\t\t\t\"uniform float tFlip;\",\n\t\t\t\t\t\t\t\"varying vec3 vViewPosition;\",\n\t\t\t\t\t\t\t\"void main() {\",\n\t\t\t\t\t\t\t\t\"vec3 wPos = cameraPosition - vViewPosition;\",\n\t\t\t\t\t\t\t\t\"gl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\",\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t].join(\"\\n\")\n\t\t\t\t\t}\n\t\t\t\t\tshader.uniforms[ \"tCube\" ].value = textureCube;\n\t\n\t\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tuniforms: shader.uniforms,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tside: THREE.BackSide\n\t\n\t\t\t\t\t} ),\n\t\n\t\t\t\t\tmesh = new THREE.Mesh( new THREE.CubeGeometry( 3000, 3000, 3000 ), material );\n\t\t\t\t\treturn mesh;\n\t\t\t\t},\t\t\t\n\t\t\t},\n\t\t});\n\n\t\txdv.createGadget(\"ocean\", {\n\t\t\t\"3d\" : {\n                harbor: false,\n\t\t\t\ttype : \"meshfile\",\n\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/ocean.js\",\n\t\t\t\tscale: [100,100,3],\n\t\t\t\tz : oceanLevel,\n\t\t\t\tsmooth: 0 ,\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"iceberg\", {\n\t\t\t\"3d\": {\n\t\t\t\ttype: \"custommesh3d\",\n\t\t\t\tz: oceanLevel+900,\n\t\t\t\tcreate: function(callback){ \n\t\t\t\t\tvar $this=this;\n\t\t\t\t\tvar nbMaps=1;\n\n\t\t\t\t\t\n\t\t\t\t\tfunction checkMaps(){\n\t\t\t\t\t\tnbMaps--;\n\t\t\t\t\t\tif (nbMaps==0){\n\t\t\t\t\t\t\t// all maps loaded, go for mesh\n\t\t\t\t\t\t\tvar smooth=0;\n\t\t\t\t\t\t\tvar url=\"smoothedfilegeo|\"+smooth+\"|\"+fullPath+\"/res/xd-view/meshes/banquise4.js\";\n\t\t\t\t\t\t\t$this.getResource(url,function(geometry , materials){\n\t\t\t\t\t\t\t\tgeometry.computeVertexNormals(); // needed in normals not exported in js file!\n\t\t\t\t\t\t\t\tvar mesh= new THREE.Mesh( geometry , iceMat );\n\t\t\t\t\t\t\t\tcallback(mesh);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcheckMaps();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tvar rMin=15,rMax=65;\n\t\tvar sizeMin=.1,sizeMax=1;\n\t\tfor(var i=0;i<nbIcebergs;i++){\n\t\t\tvar scale=sizeMin+(sizeMax-sizeMin)*Math.random();\n\t\t\tvar r=(rMin+(rMax-rMin)*Math.random())*BLENDER2WORLD;\n\t\t\tvar alpha=Math.random()*Math.PI*2;\n\n\t\t\txdv.createGadget(\"iceberg#\"+i, {\n\t\t\t\t\"3d\" : {\n                    harbor: false,\n\t\t\t\t\ttype : \"meshfile\",\n\t\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/iceberg-small.js\",\n\t\t\t\t\tscale:[scale,scale,scale],\n\t\t\t\t\tx:r*Math.cos(alpha),\n\t\t\t\t\ty:r*Math.sin(alpha),\n\t\t\t\t\trotateX: Math.random()*360,\n\t\t\t\t\trotate: Math.random()*360,\n\t\t\t\t\tz:oceanLevel-500,\n\t\t\t\t\tsmooth: 0 ,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\t\n\t\t// flat screens\n\t\tfunction createScreen(videoTexture) {\n\t\t\tvar $this=this;\n\t\t\tvar gg=new THREE.PlaneGeometry(4,3,1,1);\n\t\t\tvar gm=new THREE.MeshPhongMaterial({color:0xffffff,map:videoTexture,shading:THREE.FlatShading});\n\t\t\tvar mesh = new THREE.Mesh( gg , gm );\n\t\t\t$this.objectReady(mesh); \n\t\t\treturn null;\n\t\t};\n\t\tvar scaleScreen=2;\n\t\tvar zScreen=2000;\n\t\tvar xScreen=7000;\n\t\tvar yScreen=7000;\n\t\tvar screenAngle=45;\n\t\tvar thumbDist=.99;\n\t\tvar thumbOffset=3000;\n\t\txdv.createGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen,\n\t\t\t\tx: xScreen,\n\t\t\t\ty: -yScreen,\n\t\t\t\trotate: -screenAngle,\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videoabis\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen-1000,\n\t\t\t\tx: thumbDist*xScreen+thumbOffset,\n\t\t\t\ty: -thumbDist*yScreen+thumbOffset,\n\t\t\t\trotate: -(screenAngle),\n\t\t\t\tscale: [scaleScreen/4,scaleScreen/4,scaleScreen/4],\n\t\t\t},\n\t\t});\n\t\txdv.createGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen,\n\t\t\t\tx: -xScreen,\n\t\t\t\ty: yScreen,\n\t\t\t\trotate: -(180+screenAngle),\n\t\t\t\tscale: [scaleScreen,scaleScreen,scaleScreen],\n\t\t\t},\n\t\t});\t\n\t\txdv.createGadget(\"videobbis\",{\n\t\t\t\"3d\": {\n\t\t\t\ttype : \"video3d\",\t\t\t\t\n\t\t\t\tmakeMesh: function(videoTexture){\n\t\t\t\t\treturn createScreen.call(this,videoTexture);\n\t\t\t\t},\n\t\t\t\tz: zScreen-1000,\n\t\t\t\tx: -thumbDist*xScreen-thumbOffset,\n\t\t\t\ty: thumbDist*yScreen-thumbOffset,\n\t\t\t\trotate: -(180+screenAngle),\n\t\t\t\tscale: [scaleScreen/4,scaleScreen/4,scaleScreen/4],\n\t\t\t},\n\t\t});\t\n\t}\n\t\n\t\n\tView.Game.xdBuildScene = function(xdv) {\n\n\t\tCoord=[];\n\t\tfor(var pos=0;pos<64;pos++) {\n\t\t\tvar r=Math.floor(pos/8);\n\t\t\tvar c=pos%8;\n\t\t\tvar x0=(r-3.5)*SIZE;\n\t\t\tvar y0=(c-3.5)*SIZE;\n\t\t\tvar angle=135*Math.PI/180;\n\t\t\tvar x=x0*Math.cos(angle)+y0*Math.sin(angle);\n\t\t\tvar y=-x0*Math.sin(angle)+y0*Math.cos(angle);\n\t\t\tif(this.mViewAs==-1) {\n\t\t\t\tx=-x;\n\t\t\t\ty=-y;\n\t\t\t}\n\t\t\tCoord.push([-1000+x,y,fieldZ]);\n\t\t}\n\n\t\tfor(var i=0;i<8;i++) {\n\t\t\tvar x=4800-this.mViewAs*Math.cos((i*45-90)*Math.PI/180)*1500;\n\t\t\tvar y=3500+this.mViewAs*Math.sin((i*45-90)*Math.PI/180)*1500;\n\t\t\txdv.updateGadget(\"rotator-image#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: x*FIX2D,\n\t\t\t\t\ty: y*FIX2D,\n\t\t\t\t\trotate: -i*45+(this.mViewAs==-1?180:0),\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"rotator-highlight#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: x*FIX2D,\n\t\t\t\t\ty: y*FIX2D,\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t\txdv.updateGadget(\"rotator-clicker#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: x*FIX2D,\n\t\t\t\t\ty: y*FIX2D,\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t\txdv.updateGadget(\"rotator-plot#\"+i,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: x*FIX2D,\n\t\t\t\t\ty: y*FIX2D,\n\t\t\t\t},\n\t\t\t});\t\t\n\t\t}\n\t\t\n\t\txdv.updateGadget(\"board\",{\n\t\t\tbase: {\n\t\t\t\tvisible: true,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"goala\",{\n\t\t\tbase: {\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\tscale:[1.4,1,1],\n\t\t\t\tflatShading: false,\n\t\t\t\tmaterials: {\n\t\t\t\t\t\"filet\": {\n\t\t\t\t\t\twireframe: true ,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tz:fieldZ,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"goalb\",{\n\t\t\tbase: {\n\t\t\t\tvisible: true,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\tscale:[1.4,1,1],\n\t\t\t\tflatShading: false,\n\t\t\t\tmaterials: {\n\t\t\t\t\t\"filet\": {\n\t\t\t\t\t\twireframe: true ,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trotate:180,\n\t\t\t\tz:fieldZ,\n\t\t\t},\n\t\t});\n\t\tfor(var pos=0;pos<64;pos++) {\n\t\t\tvar coord=Coord[pos];\n\t\t\txdv.updateGadget(\"text#\"+pos,{\n\t\t\t\t\"base\":{\n\t\t\t\t\tvisible: this.mNotation,\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t\tz: coord[2],\n\t\t\t\t\trotateX:-90,\n\t\t\t\t\tcolor: 0x0000ff,\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"cell#\"+pos,{\n\t\t\t\t\"3d\" : {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t\tz: 0,\n\t\t\t\t\trotate: 45,\n\t\t\t\t\tvisible:true,\n\t\t\t\t\treceiveShadow: true,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\txdv.updateGadget(\"surround\",{\n\t\t\t\"3d\" : {\n\t\t\t\tvisible: true,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"ocean\",{\n\t\t\t\"3d\" : {\n\t\t\t\tvisible: true,\n\t\t\t\treceiveShadow: true,\n\t\t\t}\n\t\t});\n\t\txdv.updateGadget(\"iceberg\",{\n\t\t\t\"3d\" : {\n\t\t\t\tvisible: true,\n\t\t\t\treceiveShadow: true,\n\t\t\t\trotate:45,\n\t\t\t\tscale:[1.05,1.05,1],\n\t\t\t\tx:xboard3dOffest,\n\t\t\t}\n\t\t});\n\t\tfor(var i=0;i<nbIcebergs;i++){\n\t\t\txdv.updateGadget(\"iceberg#\"+i, {\n\t\t\t\t\"3d\" : {\n\t\t\t\t\tvisible:true,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\txdv.updateGadget(\"videoa\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: 1,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"videoabis\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: -1,\n\t\t\t},\n\t\t});\n\n\t\txdv.updateGadget(\"videob\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: -1,\n\t\t\t},\n\t\t});\n\t\txdv.updateGadget(\"videobbis\",{\n\t\t\t\"3d\": {\n\t\t\t\tvisible: true,\n\t\t\t\tplayerSide: 1,\n\t\t\t},\n\t\t});\n\t\t\n\t}\n\n\tView.Board.penguinCoord = function(aGame,index,pos) {\n\t\tif(pos<0)\n\t\t\treturn RestCoord[aGame.mViewAs][index];\n\t\telse{\n\t\t\tvar pz=Coord[pos][2];\n\t\t\tif((this.ball>=0&&this.ball==pos) || (this.ball<0 && (pos==27 || pos==28 || pos==35 || pos==36)))\n\t\t\t\tpz=overBallZ;\n\t\t\treturn [Coord[pos][0],Coord[pos][1],pz];\n\t\t}\n\t}\n\n\tView.Board.penguinClip = function(aGame,index,pos,dir) {\n\t\tif(pos<0)\n\t\t\treturn RestClip[index];\n\t\telse if(dir<0)\n\t\t\treturn StandClip[index];\n\t\telse\n\t\t\treturn LayClip[index];\n\t}\n\tView.Board.penguinMorph = function(aGame,index,pos,dir) {\n\t\tif(pos<0)\n\t\t\treturn upMorphPos;\n\t\telse if(dir<0)\n\t\t\treturn upMorphPos;\n\t\telse\n\t\t\treturn layedMorphPos;\n\t}\n\t\n\tView.Board.penguinRotation = function(aGame,index,pos,dir) {\n\t\tif(pos<0)\n\t\t\treturn RestRotation[aGame.mViewAs][index];\n\t\telse if(dir<0)\n\t\t\treturn StandRotation[aGame.mViewAs][index];\n\t\telse\n\t\t\treturn Angles[aGame.mViewAs][dir];\n\t}\n\n\tView.Board.xdDisplay = function(xdv, aGame) {\n\t\tvar coord;\n\t\tif(this.ball==-1){\n\t\t\tcoord=[-1000,0,fieldZ];\n\t\t}\n\t\telse{\n\t\t\tcoord=Coord[this.ball];\n\t\t}\n\t\txdv.updateGadget(\"ball\",{\n\t\t\tbase: {\n\t\t\t\tvisible: true,\n\t\t\t\tx: coord[0],\n\t\t\t\ty: coord[1],\t\t\t\t\n\t\t\t},\n\t\t\t\"2d\": {\n\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\tz:oceanLevel+1200,\n\t\t\t\tscale: [0.3,0.3,0.3],\t\t\t\n\t\t\t}\n\t\t});\n\t\tfor(var i=0;i<this.penguins.length;i++) {\n\t\t\tvar penguin=this.penguins[i];\n\t\t\tvar coord=this.penguinCoord(aGame,i,penguin.p);\n\t\t\tvar clip=this.penguinClip(aGame,i,penguin.p,penguin.d);\n\t\t\tvar rotation=this.penguinRotation(aGame,i,penguin.p,penguin.d);\n\t\t\tvar morph=this.penguinMorph(aGame,i,penguin.p,penguin.d);\n\t\t\txdv.updateGadget(\"penguin#\"+i,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t\trotate: rotation,\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\tclipy: clip[1],\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\tcastShadow: true,\n\t\t\t\t\tz: coord[2],\n\t\t\t\t\tmorphing: morph,\n\t\t\t\t\trotate: 180-rotation,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\tView.Board.xdBuildHTStateMachine = function(xdv, htsm, aGame) {\n\t\tvar $this=this;\n\t\tvar move={\n\t\t\ti: -1,\n\t\t\tp: -1,\n\t\t\tmd: -1,\n\t\t\td: -1,\n\t\t}\n\t\tvar moves=this.mMoves;\n\t\tvar disposable=[];\n\t\t\n\t\t\n\t\tfunction MakeClickablePieces(pos,callback){\n\t\t\tif(($this.ball>=0)&&($this.ball==pos)){\n\t\t\t\txdv.updateGadget(\"ball\",{\n\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\tclick:callback,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (i=0;i<6;i++)\n\t\t\t\tif(($this.penguins[i].p>0)&&($this.penguins[i].p==pos)){\n\t\t\t\t\txdv.updateGadget(\"penguin#\"+i,{\n\t\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\t\tclick:callback,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t}\n\n\t\tfunction ClickablePenguin(index,callback,color) {\n\t\t\tvar coord=$this.penguinCoord(aGame,index,$this.penguins[index].p);\n\t\t\t\n\t\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\t\t\"3d\":{\n\t\t\t\t\tclick:callback,\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tMakeClickablePieces($this.penguins[index].p,callback);\n\t\t\t\n\t\t\tMakeClicker(coord,callback);\n\t\t\tMakeHighlighter(coord,color);\n\t\t\tvar pType=index%3;\n\t\t\tvar clip=StandClip[index];\n\t\t\txdv.updateGadget(\"penguin\"+pType+\"-image\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\tclipy: clip[1],\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"penguin\"+pType+\"-background\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"penguin\"+pType+\"-highlight\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\n\t\t\txdv.updateGadget(\"penguin\"+pType+\"-clicker\",{\n\t\t\t\t\"base\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclick: callback,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction ClickablePos(pos,callback,color) {\n\t\t\tvar coord=Coord[pos];\n\t\t\tMakeClickablePieces(pos,callback);\n\t\t\tMakeClicker(coord,callback);\n\t\t\tMakeHighlighter(coord,color);\n\t\t}\n\t\t\n\t\tfunction ClickableArrow(pos,callback,dir) {\n\t\t\tif(pos!==null) {\n\t\t\t\tvar coord=Coord[pos];\n\t\t\t\tMakeClicker(coord,callback);\n\t\t\t\tMakeArrow(coord,dir);\n\t\t\t}\n\t\t\txdv.updateGadget(\"rotator-plot#\"+dir,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"rotator-highlight#\"+dir,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"rotator-clicker#\"+dir,{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclick: callback,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\tvar clip=LayClip[move.i];\n\t\t\txdv.updateGadget(\"rotator-subject\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclick: callback,\n\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\tclipy: clip[1],\n\t\t\t\t\trotate: Angles[aGame.mViewAs][move.md],\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"rotator-circle\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfunction MakeArrow(coord,dir) {\n\t\t\tvar id=\"arrow#\"+disposable.length;\n\t\t\tdisposable.push(id);\n\t\t\txdv.createGadget(id,{\n\t\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t\twidth: SIZE*1.3,\n\t\t\t\t\theight: SIZE*1.3,\n\t\t\t\t\trotate: Angles[aGame.mViewAs][dir],\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"sprite\",\n\t\t\t\t\tfile: fullPath+\"/res/images/ps-images.png\",\n\t\t\t\t\tclipwidth: 200,\n\t\t\t\t\tclipheight: 200,\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t\twidth: 1031,\n\t\t\t\t\theight: 1031,\n\t\t\t\t\tclipx: 800,\n\t\t\t\t\tclipy: 400,\n\t\t\t\t\tz: 1,\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\tz: coord[2],\n\t\t\t\t\t//rotate: Angles3d[aGame.mViewAs][dir]+180,\n\t\t\t\t\ttype: \"meshfile\",\n\t\t\t\t\tscale:[scaleArrow3d,scaleArrow3d,scaleArrow3d],\n\t\t\t\t\tflatShading: true,\n\t\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/arrow.js\",\n\t\t\t\t\tmaterials: { \n\t\t\t\t\t\t\"mat.arrow\" : {\n\t\t\t\t\t\t\tcolor : 0xffcc00,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tspecular: {r:0,g:0,b:0},\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\t\t\t\n\t\t\t\t\trotate: -Angles[aGame.mViewAs][dir],\t\n\t\t\t\t}\n\t\t\t});\n\t\t\txdv.updateGadget(id,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t}\n\t\tvar ringScale=0.6;\n\t\tfunction MakeClicker(coord,callback) {\n\t\t\tvar id=\"clicker#\"+disposable.length;\n\t\t\tdisposable.push(id);\n\t\t\txdv.createGadget(id,{\n\t\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t\twidth: SIZE*1.1,\n\t\t\t\t\theight: SIZE*1.1,\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclick: callback,\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\tinitialClasses: \"clicker\",\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"border-radius\": \"50%\",\n\t\t\t\t\t},\n\t\t\t\t\tz: 10,\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t\twidth: SIZE*1.1*FIX2D,\n\t\t\t\t\theight: SIZE*1.1*FIX2D,\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\tz: fieldZ,\n\t\t\t\t\ttype: \"meshfile\",\n\t\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/ring-target.js\",\n\t\t\t\t\tflatShading: true,\n\t\t\t\t\tcastShadow: false,\n\t\t\t\t\tsmooth : 0,\n\t\t\t\t\trotate:45,\n\t\t\t\t\tscale:[ringScale,ringScale,ringScale],\n\t\t\t\t\tmaterials: { \n\t\t\t\t\t\t\"square\" : {\n\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ring\" : {\n\t\t\t\t\t\t\t//color : 0xffcc00,\n\t\t\t\t\t\t\t//opacity: 1,\n\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\tspecular: {r:0,g:0,b:0},\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\t\t\t\t\t\t\n\t\t\t\t}\t\n\t\t\t});\n\t\t\txdv.updateGadget(id,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\t\t\t\n\t\t}\n\t\t\n\t\tfunction MakeHighlighter(coord,color) {\n\t\t\tvar id=\"highlighter#\"+disposable.length;\n\t\t\tvar color3d=color==\"Orange\"?0xffcc00:0xff00cc;\n\t\t\tdisposable.push(id);\n\t\t\txdv.createGadget(id,{\n\t\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t\twidth: SIZE*1.1,\n\t\t\t\t\theight: SIZE*1.1,\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\tcss: {\n\t\t\t\t\t\t\"background-color\": \"transparent\",\n\t\t\t\t\t\t\"border\": \"6px solid \"+color,\n\t\t\t\t\t\t\"border-radius\": \"50%\",\n\t\t\t\t\t},\n\t\t\t\t\tz: 1,\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t\twidth: SIZE*1.1*FIX2D,\n\t\t\t\t\theight: SIZE*1.1*FIX2D,\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\t//z: coord[2],\n\t\t\t\t\tz: fieldZ,\n\t\t\t\t\ttype: \"meshfile\",\n\t\t\t\t\tfile : fullPath+\"/res/xd-view/meshes/ring-target.js\",\n\t\t\t\t\tflatShading: true,\n\t\t\t\t\tsmooth : 0,\n\t\t\t\t\trotate:45,\n\t\t\t\t\tscale:[ringScale,ringScale,ringScale],\n\t\t\t\t\tmaterials: { \n\t\t\t\t\t\t\"square\" : {\n\t\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ring\" : {\n\t\t\t\t\t\t\tcolor : color3d,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tspecular: {r:0,g:0,b:0},\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\t\t\txdv.updateGadget(id,{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction ShowButton(which,callback,pos) {\n\t\t\txdv.updateGadget(which+\"-image\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t}\n\t\t\t});\n\t\t\txdv.updateGadget(which+\"-background\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t}\n\t\t\t});\n\t\t\txdv.updateGadget(which+\"-highlight\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar coord3d=[0,0,fieldZ];\n\t\t\tif (pos!==undefined)\n\t\t\t\tcoord3d=Coord[pos];\n\t\t\txdv.updateGadget(which+\"-clicker\",{\n\t\t\t\tbase: {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclick: callback,\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\tx:coord3d[0],\n\t\t\t\t\ty:coord3d[1],\n\t\t\t\t\t//z:coord3d[2],\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction ShowCancel(args) {\n\t\t\txdv.updateGadget(\"cancel-image\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"cancel-highlight\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"cancel-clicker\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tclick: function() {\n\t\t\t\t\t\thtsm.smQueueEvent(\"E_CANCEL\",{});\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction Clean(args) {\n\t\t\tdisposable.forEach(function(id) {\n\t\t\t\txdv.removeGadget(id);\t\t\t\t\n\t\t\t});\n\t\t\t[\"ball\",\"penguin#0\",\"penguin#1\",\"penguin#2\",\"penguin#3\",\"penguin#4\",\"penguin#5\"].forEach(function(which) {\n\t\t\t\txdv.updateGadget(which,{base:{click:null}});\n\t\t\t});\n\n\t\t\t[\"up\",\"slide\",\"penguin0\",\"penguin1\",\"penguin2\"].forEach(function(which) {\n\t\t\t\txdv.updateGadget(which+\"-image\",{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.updateGadget(which+\"-background\",{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.updateGadget(which+\"-highlight\",{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\txdv.updateGadget(which+\"-clicker\",{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\tclick: null,\n\t\t\t\t\t},\n\t\t\t\t});\t\t\t\t\n\t\t\t});\n\t\t\tfor(var d=0;d<8;d++) {\n\t\t\t\txdv.updateGadget(\"rotator-image#\"+d,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t});\t\t\t\t\n\t\t\t\txdv.updateGadget(\"rotator-highlight#\"+d,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t});\t\t\t\t\n\t\t\t\txdv.updateGadget(\"rotator-plot#\"+d,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t},\n\t\t\t\t});\t\t\t\t\n\t\t\t\txdv.updateGadget(\"rotator-clicker#\"+d,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\tclick: null,\n\t\t\t\t\t},\n\t\t\t\t});\t\t\t\t\n\t\t\t}\n\t\t\txdv.updateGadget(\"rotator-subject\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"rotator-circle\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"cancel-image\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"cancel-highlight\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t\txdv.updateGadget(\"cancel-clicker\",{\n\t\t\t\t\"2d\": {\n\t\t\t\t\tvisible: false,\n\t\t\t\t\tclick: null,\n\t\t\t\t},\n\t\t\t});\t\t\t\t\n\t\t}\n\t\t\n\t\tfunction SelectPenguin(args) {\n\t\t\tvar indexes={};\n\t\t\t$this.mMoves.forEach(function(m) {\n\t\t\t\tindexes[m.i]=true;\n\t\t\t});\n\t\t\tfor(var i in indexes)\n\t\t\t\t(function(i) { \n\t\t\t\t\tClickablePenguin(i,function() {\n\t\t\t\t\t\tpsStartPos=$this.penguins[i].p;\n\t\t\t\t\t\tmove.i=i;\n\t\t\t\t\t\tif($this.penguins[i].p<0)\n\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_DRY\",{});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_SELECT\",{});\n\t\t\t\t\t},\"Orange\");\n\t\t\t\t})(i)\n\t\t}\n\t\t\n\t\tfunction AnimateDry(args) {\n\t\t\t$this.psAnimateDry(xdv,aGame,move.i,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_DRY_DONE\",{});\t\t\t\t\t\t\t\t\t\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction AnimateSlide(args) {\n\t\t\t$this.psAnimateSlide(xdv,aGame,move.i,move.p,move.md,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_SELECT_DIR\",{});\t\t\t\t\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction SelectTarget(args) {\n\t\t\tvar poss={};\n\t\t\tmoves.forEach(function(m) {\n\t\t\t\tif(m.i==move.i)\n\t\t\t\t\tposs[m.p]=m;\n\t\t\t});\n\t\t\tvar pCount=0;\n\t\t\tvar slideCount=0;\n\t\t\tfor(var pos in poss) {\n\t\t\t\tvar m=poss[pos];\n\t\t\t\tif(m.md>=0)\n\t\t\t\t\tslideCount++;\n\t\t\t\tpCount++;\n\t\t\t}\n\t\t\tif(pCount==1) {\n\t\t\t\tmove.p=pos;\n\t\t\t\tmove.md=poss[pos].md;\n\t\t\t\tif(move.md<0) {\n\t\t\t\t\tmove.d=-1;\n\t\t\t\t\thtsm.smQueueEvent(\"E_STANDUP\",{});\n\t\t\t\t} else\n\t\t\t\t\thtsm.smQueueEvent(\"E_MOVE\",{});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tClickablePos(psStartPos,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_CANCEL\",{});\n\t\t\t},\"Magenta\");\n\t\t\tfor(var pos in poss) {\n\t\t\t\t(function(pos) {\n\t\t\t\t\tvar m=poss[pos];\n\t\t\t\t\tif(m.md<0) {\n\t\t\t\t\t\tShowButton(\"up\",function() {\n\t\t\t\t\t\t\tmove.p=m.p;\n\t\t\t\t\t\t\tmove.md=m.md;\n\t\t\t\t\t\t\tmove.d=m.d;\n\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_STANDUP\",{});\n\t\t\t\t\t\t},pos);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(slideCount==1) {\n\t\t\t\t\t\t\tShowButton(\"slide\",function() {\n\t\t\t\t\t\t\t\tmove.p=m.p;\n\t\t\t\t\t\t\t\tmove.md=m.md;\n\t\t\t\t\t\t\t\tmove.d=m.d;\n\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_MOVE\",{});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tClickablePos(pos,function() {\n\t\t\t\t\t\t\tmove.p=m.p;\n\t\t\t\t\t\t\tmove.md=m.md;\n\t\t\t\t\t\t\tif($this.ball>=0 && $this.penguins[m.i].p==$this.ball) {\n\t\t\t\t\t\t\t\tmove.d=m.d;\n\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_KICK\",{});\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_MOVE\",{});\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\"Orange\");\n\t\t\t\t\t\tif(slideCount>1) {\n\t\t\t\t\t\t\txdv.updateGadget(\"rotator-image#\"+poss[pos].md,{\n\t\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\txdv.updateGadget(\"rotator-highlight#\"+poss[pos].md,{\n\t\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\txdv.updateGadget(\"rotator-clicker#\"+poss[pos].md,{\n\t\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\t\t\tmove.p=m.p;\n\t\t\t\t\t\t\t\t\t\tmove.md=m.md;\n\t\t\t\t\t\t\t\t\t\tif($this.ball>=0 && $this.penguins[m.i].p==$this.ball) {\n\t\t\t\t\t\t\t\t\t\t\tmove.d=m.d;\n\t\t\t\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_KICK\",{});\n\t\t\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\t\t\thtsm.smQueueEvent(\"E_MOVE\",{});\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif($this.ball>=0 && $this.penguins[move.i].p==$this.ball) \n\t\t\t\t\t\t\t\txdv.updateGadget(\"rotator-subject\",{\n\t\t\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\t\t\tclipx: 0,\n\t\t\t\t\t\t\t\t\t\tclipy: 400,\n\t\t\t\t\t\t\t\t\t\trotate: StandRotation[aGame.mViewAs][move.i],\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvar clip=StandClip[move.i];\n\t\t\t\t\t\t\t\txdv.updateGadget(\"rotator-subject\",{\n\t\t\t\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\t\t\t\t\t\tclipy: clip[1],\n\t\t\t\t\t\t\t\t\t\trotate: StandRotation[aGame.mViewAs][move.i],\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})(pos);\n\t\t\t}\n\t\t}\n\t\tfunction SelectDir(args) {\n\t\t\tvar dirs={};\n\t\t\tmoves.forEach(function(m) {\n\t\t\t\tif(m.i==move.i && m.p==move.p && m.md==move.md)\n\t\t\t\t\tdirs[m.d]=m;\n\t\t\t});\n\t\t\tvar dCount=0;\n\t\t\tfor(var dir in dirs)\n\t\t\t\tdCount++;\n\t\t\tif(dCount==1) {\n\t\t\t\tmove.d=dir;\n\t\t\t\thtsm.smQueueEvent(\"E_DIR\",{});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor(var dir in dirs) {\n\t\t\t\t(function(dir) {\n\t\t\t\t\tClickableArrow(aGame.g.Graph[move.p][dir],function() {\n\t\t\t\t\t\tmove.d=dir;\n\t\t\t\t\t\thtsm.smQueueEvent(\"E_DIR\",{});\n\t\t\t\t\t},dir);\n\t\t\t\t})(dir);\n\t\t\t}\n\t\t\t\n\t\t\tvar rotation=Angles[aGame.mViewAs][move.md];\n\t\t\txdv.updateGadget(\"rotator-subject\",{\t\t\t\t\n\t\t\t\t\"2d\": {\n\t\t\t\t\trotate: rotation,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction AnimateDir(args) {\n\t\t\t$this.psAnimateDir(xdv,aGame,move.i,move.p,move.d,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_DIR_DONE\",{});\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction AnimateStandup(args) {\n\t\t\t$this.psAnimateStandup(xdv,aGame,move.i,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_STANDUP_DONE\",{});\t\t\t\t\n\t\t\t});\n\t\t}\n\n\t\tfunction AnimateKick(args) {\n\t\t\t$this.psAnimateKick(xdv,aGame,move.i,move.p,move.md,function() {\n\t\t\t\thtsm.smQueueEvent(\"E_KICK_DONE\",{});\t\t\t\t\n\t\t\t});\n\t\t}\n\n\t\tfunction MakeMove(args) {\n\t\t\taGame.MakeMove(move);\n\t\t}\n\n\t\tfunction Cancel(args) {\n\t\t\tvar index=move.i;\n\t\t\tvar penguin=$this.penguins[move.i];\n\t\t\tvar coord=$this.penguinCoord(aGame,move.i,penguin.p);\n\t\t\tvar clip=$this.penguinClip(aGame,move.i,penguin.p,penguin.d);\n\t\t\tvar rotation=$this.penguinRotation(aGame,move.i,penguin.p,penguin.d);\n\t\t\tvar morph=$this.penguinMorph(aGame,move.i,penguin.p,penguin.d);\n\t\t\t\n\t\t\tif(move.p<0) {\n\t\t\t\tmove.i=-1;\n\t\t\t} else {\n\t\t\t\tif(penguin.p<0){\n\t\t\t\t\tcoord=Coord[psStartPos];\t\n\t\t\t\t\trotation=StandRotation[aGame.mViewAs][move.i];\n\t\t\t\t}\n\t\t\t\tmove.p=-1;\n\t\t\t\tmove.md=-1;\n\t\t\t}\n\t\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t\trotate: rotation,\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\tclipy: clip[1],\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\tz: coord[2],\n\t\t\t\t\tmorphing: morph,\t\t\t\n\t\t\t\t\trotate: 180-rotation,\n\t\t\t\t},\n\t\t\t});\n\t\t\tcoord=[-1000,0,fieldZ];\n\t\t\tif($this.ball>=0){\n\t\t\t\tcoord=Coord[$this.ball];\n\t\t\t}\n\t\t\txdv.updateGadget(\"ball\",{\n\t\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\t\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\thtsm.smTransition(\"S_INIT\", \"E_INIT\", \"S_SELECT_PENGUIN\", [ ]);\n\t\thtsm.smEntering(\"S_SELECT_PENGUIN\", [ SelectPenguin ]);\n\t\thtsm.smTransition(\"S_SELECT_PENGUIN\", \"E_DRY\", \"S_ANIM_DRY\", [ AnimateDry ]);\n\t\thtsm.smTransition(\"S_SELECT_PENGUIN\", \"E_SELECT\", \"S_SELECT\", [ ]);\n\t\thtsm.smTransition(\"S_ANIM_DRY\", \"E_DRY_DONE\", \"S_SELECT\", [ ]);\n\t\thtsm.smEntering(\"S_SELECT\", [ SelectTarget, ShowCancel ]);\n\t\thtsm.smTransition(\"S_SELECT\", \"E_MOVE\", \"S_ANIM_TARGET\", [ AnimateSlide ]);\n\t\thtsm.smTransition(\"S_SELECT\", \"E_STANDUP\", \"S_ANIM_STANDUP\", [ AnimateStandup ]);\n\t\thtsm.smTransition(\"S_SELECT\", \"E_KICK\", \"S_ANIM_KICK\", [ AnimateKick ]);\n\t\thtsm.smTransition(\"S_SELECT\", \"E_CANCEL\", \"S_SELECT_PENGUIN\", [ Cancel ]);\n\t\thtsm.smTransition(\"S_ANIM_TARGET\", \"E_SELECT_DIR\", \"S_SELECT_DIR\", [ ]);\n\t\thtsm.smTransition(\"S_ANIM_STANDUP\", \"E_STANDUP_DONE\", \"S_DONE\", [ MakeMove ]);\n\t\thtsm.smTransition(\"S_ANIM_KICK\", \"E_KICK_DONE\", \"S_DONE\", [ MakeMove ]);\n\t\thtsm.smEntering(\"S_SELECT_DIR\", [ SelectDir, ShowCancel ]);\n\t\thtsm.smTransition(\"S_SELECT_DIR\", \"E_DIR\", \"S_ANIM_DIR\", [ AnimateDir ]);\n\t\thtsm.smTransition(\"S_SELECT_DIR\", \"E_CANCEL\", \"S_SELECT\", [ Cancel ]);\n\t\thtsm.smTransition(\"S_ANIM_DIR\", \"E_DIR_DONE\", \"S_DONE\", [ MakeMove ]);\n\n\t\thtsm.smLeaving([\"S_SELECT_PENGUIN\",\"S_SELECT\",\"S_SELECT_DIR\"], [ Clean ]);\n\n\t\thtsm.smTransition([\"S_DONE\",\"S_SELECT_PENGUIN\",\"S_SELECT\",\"S_SELECT_DIR\",\"S_ANIM_DRY\",\"S_ANIM_TARGET\",\"S_ANIM_STANDUP\",\"S_ANIM_KICK\"], \n\t\t\t\t\"E_END\", \"S_DONE\", [ Clean ]);\n\n\t}\n\n\tfunction IntRand(i){\n\t\treturn Math.floor(Math.random()*i);\n\t}\n\n\tView.Board.psAnimateDry=function(xdv,aGame,index,callback) {\n\t\tvar $this=this;\n\t\tvar clip=LayClip[index];\n\t\t// get penguin out of water\n\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\t\"2d\": {\n\t\t\t\tclipx: clip[0],\n\t\t\t\tclipy: clip[1],\n\t\t\t\tz:5,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\tmorphing: layedMorphPos,\n\t\t\t}\n\t\t},{\"base\":1,\"3d\":200},function() {\n\t\t\tpsStartPos=aGame.mWho==1?0:63;\n\t\t\tvar coord=Coord[psStartPos];\n\t\t\tvar coord0=RestCoord[aGame.mViewAs][index];\n\t\t\tvar angle=Math.atan2(coord[1]-coord0[1],coord[0]-coord0[0])/Math.PI*180+90;\n\t\t\t// orient to start position\n\t\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\t\tbase: {\n\t\t\t\t\trotate: angle,\n\t\t\t\t},\n\t\t\t\t\"3d\":{\n\t\t\t\t\trotate: 180-angle,\n\t\t\t\t}\n\t\t\t},300,function() {\n\t\t\t\t// move to start position\n\t\t\t\taGame.PlaySound(\"slide0\");\n\t\t\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\t\t\tbase: {\n\t\t\t\t\t\tx: coord[0],\n\t\t\t\t\t\ty: coord[1],\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\tz: coord[2],\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t},600,function() {\n\t\t\t\t\t// face front\n\t\t\t\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\trotate: StandRotation[aGame.mViewAs][index],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\t\tz:4,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\t\trotate: 180-StandRotation[aGame.mViewAs][index],\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t},300,function() {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t});\t\t\t\t\t\n\t\t\t});\n\t\t});\n\t}\n\n\t/* animation tools */\n\tfunction Sequence(duration){\n\t\tthis.duration=duration;\n\t\tthis.sound=null;\n\t\t\t\t\t\n\t\tthis.animations=[];\n\t\tthis.addAnim=function(avatarId,params,timings){\n\t\t\tvar t=$.extend(true,{base:this.duration},timings);\n\t\t\tthis.animations.push({\n\t\t\t\tid:avatarId,\n\t\t\t\tparams:params,\n\t\t\t\ttimings:t,\n\t\t\t\t});\n\t\t};\n\t\tthis.addSound=function(sound){\n\t\t\tthis.sound=sound;\n\t\t}\n\t\tthis.play=function(xdv,callback,aGame){\n\t\t\tif (this.sound!=null) aGame.PlaySound(this.sound);\n\t\t\tvar count=this.animations.length;\n\t\t\t//console.log(\"Sequence.play: nb animations to play=\", count);\n\t\t\tfunction checkFinished(){\n\t\t\t\tcount--;\n\t\t\t\t//console.log(\"checkFinished\", count);\n\t\t\t\tif (count==0){\n\t\t\t\t\t//console.log(\"animation finished\");\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var i = 0; i < this.animations.length ; i++){\n\t\t\t\tvar s=this.animations[i];\n\t\t\t\t//console.log(\"Sequence.play: launch item \", i, s.id);\n\t\t\t\txdv.updateGadget(s.id,s.params,s.timings,checkFinished);\n\t\t\t}\n\t\t}\n\t} \n\n\tfunction Scenario(){\n\t\tvar $this=this;\n\t\tthis.name=\"scenario\";\n\t\tthis.init=function(){\n\t\t\t$this.sequences=[];\n\t\t};\n\t\tthis.createSequence=function(delay){\n\t\t\tvar seq=new Sequence(delay);\n\t\t\t$this.sequences.push(seq);\n\t\t\treturn seq;\n\t\t};\n\t\t\n\t\tthis.play=function(xdv,callback,aGame){\n\t\t\tvar i=0;\n\t\t\tfunction playSeq(xdv){\n\t\t\t\tif (i==($this.sequences.length-1)){\n\t\t\t\t\t$this.sequences[i].play(xdv,callback,aGame);\n\t\t\t\t}else{\n\t\t\t\t\t$this.sequences[i].play(xdv,function(){\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tplaySeq(xdv);\n\t\t\t\t\t},aGame);\n\t\t\t\t}\n\t\t\t}\n\t\t\tplaySeq(xdv);\n\t\t}\n\t\t\n\t\tthis.getLastSeq=function(){\n\t\t\tvar seq=null;\n\t\t\tif ($this.sequences.length>0) \n\t\t\t\tseq=$this.sequences[$this.sequences.length-1];\n\t\t\treturn seq;\n\t\t}\n\t\t\n\t\tthis.init();\n\t} \n\t\n\tView.Board.psAnimateSlide = function(xdv,aGame,index,pos,md,callback) {\n\t\tvar $this=this;\n\t\tvar coord0=Coord[psStartPos];\n\t\tvar coord=$this.penguinCoord(aGame,index,pos);\n\t\tvar angle;\n\t\tif(psStartPos==pos){\n\t\t\tangle=StandRotation[aGame.mViewAs][index];\n\t\t}\n\t\telse{\n\t\t\tangle=Math.atan2(coord[1]-coord0[1],coord[0]-coord0[0])/Math.PI*180+90;\t\t\t\n\t\t}\n\t\t\t\n\t\tvar sc=new Scenario();\t\n\t\t// SEQ 0\t\n\t\t// rotate to target\t\n\t\tvar seq0=sc.createSequence(300);\n\t\tvar clip=LayClip[index];\n\t\tseq0.addAnim(\"penguin#\"+index,{\n\t\t\tbase: {\n\t\t\t\trotate: angle,\n\t\t\t},\n\t\t\t\"2d\":{\n\t\t\t\tclipx:clip[0],\n\t\t\t\tclipy:clip[1],\n\t\t\t},\n\t\t\t\"3d\": {\n\t\t\t\trotate: 180-angle,\n\t\t\t\tmorphing: layedMorphPos,\n\t\t\t}\n\t\t});\n\t\t\t\t\t\t\n\n\t\t// SEQ 1\t\n\t\tvar seq1=sc.createSequence(500);\n\t\tseq1.addSound('slide'+IntRand(5));\n\t\tvar catchBall = false;\n\t\t// what about the ball?\n\t\tif ($this.ball < 0 && (pos == 27 || pos == 28 || pos == 35 || pos == 36)) {\n\t\t\tcatchBall = true;\n\t\t\t// move ball to target\n\t\t\tseq1.addAnim(\"ball\", {\n\t\t\t\tbase : {\n\t\t\t\t\tx : coord[0],\n\t\t\t\t\ty : coord[1],\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\t\t\t\t\t\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (pos == $this.ball)\n\t\t\tcatchBall = true;\n\n\t\t// what about main penguin?\n\t\t// move to target\n\t\tseq1.addAnim(\"penguin#\"+index,{\n\t\t\tbase: {\n\t\t\t\t\tx: coord[0],\n\t\t\t\t\ty: coord[1],\n\t\t\t\t},\n\t\t\t\t\"2d\": {\n\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t},\n\t\t\t\t\"3d\": {\n\t\t\t\t\tz: coord[2],\n\t\t\t\t}\n\t\t\t});\n\t\tif (catchBall) {\n\t\t\tseq1.addSound('haha');\n\t\t\t// get up\n\t\t\tvar clip=StandClip[index];\n\t\t\tseq1.addAnim(\"penguin#\"+index,{\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\t\tclipy: clip[1],\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\tmorphing: upMorphPos,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\"2d\":1,\"3d\":300});\n\t\t}\n\t\t\n\t\t// add penguins push animations \n\t\tthis.psGetAnimsSlidePush(sc,aGame,pos,md);\n\t\t// play it now\n\t\tsc.play(xdv,callback,aGame);\n\t}\n\t\n\tView.Board.psGetAnimsSlidePush=function(scenario,aGame,pos,dir){\n\t\tvar $this=this;\n\t\tvar seq=scenario.getLastSeq();\n\t\tif(seq!=null){\n\t\t\tvar nbShiftedPenguins=0;\n\t\t\tvar penguin=this.board[pos];\n\t\t\twhile((penguin!=null)&&(pos!=null)){\n\t\t\t\t// compute penguin animation data\n\t\t\t\tvar pos1=aGame.g.Graph[pos][dir]; \n\t\t\t\t\n\t\t\t\tvar coord0=Coord[pos];\n\t\t\t\tvar coord=(pos1==null)?RestCoord[aGame.mViewAs][penguin.i]:Coord[pos1];\n\t\t\t\tvar angle=Math.atan2(coord[1]-coord0[1],coord[0]-coord0[0])/Math.PI*180+90;\n\t\t\t\tvar clip=LayClip[penguin.i];\n\t\t\t\t\n\t\t\t\tseq.addAnim(\"penguin#\"+penguin.i,{\n\t\t\t\t\t\"base\":{\n\t\t\t\t\t\trotate: angle,\n\t\t\t\t\t\tx: coord[0],\n\t\t\t\t\t\ty: coord[1],\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t\"2d\": {\n\t\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\t\tclipy: clip[1],\n\t\t\t\t\t\tx: coord[0]*FIX2D,\n\t\t\t\t\t\ty: coord[1]*FIX2D,\n\t\t\t\t\t},\n\t\t\t\t\t\"3d\": {\n\t\t\t\t\t\tz: coord[2],\n\t\t\t\t\t\tmorphing:layedMorphPos,\n\t\t\t\t\t\trotate: 180-angle,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (pos1==null){\n\t\t\t\t\t// penguin has been sent to rest position => add a sequence to stand up in the good direction\n\t\t\t\t\tvar seqUp=scenario.createSequence(400);\n\t\t\t\t\tclip=StandClip[penguin.i];\n\t\t\t\t\tvar rotation=this.penguinRotation(aGame,penguin.i,-1);\n\t\t\t\t\tseqUp.addSound('getup1');\n\t\t\t\t\tseqUp.addAnim(\"penguin#\"+penguin.i,\n\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\"2d\":{\n\t\t\t\t\t\t\t\tclipx: clip[0],\n\t\t\t\t\t\t\t\tclipy: clip[1],\n\t\t\t\t\t\t\t\trotate:rotation,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"3d\":{\n\t\t\t\t\t\t\t\tmorphing:upMorphPos,\n\t\t\t\t\t\t\t\trotate:180-rotation,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnbShiftedPenguins++;\n\t\t\t\t// iteration\n\t\t\t\tpos=pos1;\n\t\t\t\tpenguin=this.board[pos];\n\t\t\t}\n\t\t}\n\t}\n\n\tView.Board.psAnimateDir = function(xdv,aGame,index,pos,dir,callback) {\n\t\tvar coord0=Coord[psStartPos];\n\t\tvar coord=Coord[pos];\n\t\tvar angle=StandRotation[aGame.mViewAs][index];\n\t\tif (dir>0)\n\t\t\tangle=Angles[aGame.mViewAs][dir];\n\t\t// rotate to final dir\n\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\tbase: {\n\t\t\t\trotate: angle,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\trotate: 180-angle,\n\t\t\t},\n\t\t},300,function() {\n\t\t\tcallback();\n\t\t});\n\t}\n\tView.Board.psAnimateStandup = function(xdv,aGame,index,callback) {\n\t\tvar clip=StandClip[index];\n\t\tvar rotation=StandRotation[aGame.mViewAs][index];\n\t\tvar sound='getup'+IntRand(2);\n\t\taGame.PlaySound(sound);\n\n\t\txdv.updateGadget(\"penguin#\"+index,{\n\t\t\tbase: {\n\t\t\t\tclipx: clip[0],\n\t\t\t\tclipy: clip[1],\n\t\t\t\trotate: rotation,\n\t\t\t},\n\t\t\t\"3d\":{\n\t\t\t\tmorphing: upMorphPos,\n\t\t\t\trotate: 180-rotation,\n\t\t\t}\n\t\t},{\"2d\":1,\"3d\":300},function() {\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tView.Board.psAnimateKick = function(xdv,aGame,index,pos,md,callback) {\n\t\tvar $this=this;\n\t\tvar rotation=Angles[aGame.mViewAs][md];\n\t\t\n\t\tvar sc=new Scenario();\n\t\t\n\t\t// turn towards ball\n\t\tvar seq=sc.createSequence(300);\n\t\tseq.addAnim(\"penguin#\"+index,{base: {rotate: rotation,},\"3d\":{rotate: 180-rotation},});\n\n\t\t// pirouette!\n\t\t//seq=sc.createSequence(600);\n\t\t//seq.addAnim(\"penguin#\"+index,{\"3d\":{rotateX: 179, z:2*overBallZ},},{base:1,\"3d\":600});\n\t\t//seq=sc.createSequence(600);\n\t\t\n\t\t\n\t\t// shoot!\n\t\tseq=sc.createSequence(600);\n\t\tseq.addSound('kick');\n\t\tvar coord=Coord[pos];\n\t\tseq.addAnim(\"ball\",{\n\t\t\tbase: {\n\t\t\t\tx:coord[0],\n\t\t\t\ty:coord[1]\n\t\t\t},\n\t\t\t\"2d\": {\n\t\t\t\tx:coord[0]*FIX2D,\n\t\t\t\ty:coord[1]*FIX2D,\t\t\t\t\n\t\t\t}\n\t\t});\n\t\tseq.addAnim(\"penguin#\"+index,\n\t\t\t{\n\t\t\t\tbase: {rotate: rotation,},\n\t\t\t\t\"3d\":{rotate: 180-rotation, morphing:layedMorphPos, z:fieldZ},\n\t\t\t});\n\t\tvar penguin=$this.board[pos];\n\t\tif(penguin) {\n\t\t\tvar clip=StandClip[penguin.i];\n\t\t\tvar rotation=StandRotation[aGame.mViewAs][penguin.i];\n\t\t\tseq.addAnim(\"penguin#\"+penguin.i,{\n\t\t\t\tbase:{rotate: rotation},\n\t\t\t\t\"2d\":{clipx:clip[0],clipy:clip[1]},\n\t\t\t\t\"3d\":{rotate: 180-rotation, morphing:upMorphPos, z:overBallZ},\n\t\t\t\t});\n\t\t}\n\t\t\n\t\tsc.play(xdv,callback,aGame);\n\t}\n\n\tView.Board.psPlayedMove = function(xdv, aGame, aMove) {\n\t\tvar $this=this;\n\t\tvar penguin=this.penguins[aMove.i];\n\t\tfunction PenguinReady() {\n\t\t\tif(aMove.md>=0) {\n\t\t\t\tif($this.ball>=0 && penguin.p==$this.ball)\n\t\t\t\t\t$this.psAnimateKick(xdv,aGame,aMove.i,aMove.p,aMove.md,function() {\n\t\t\t\t\t\taGame.MoveShown();\n\t\t\t\t\t});\n\t\t\t\telse\n\t\t\t\t\t$this.psAnimateSlide(xdv,aGame,aMove.i,aMove.p,aMove.md,function() {\n\t\t\t\t\t\tif(aMove.d<0)\n\t\t\t\t\t\t\taGame.MoveShown();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$this.psAnimateDir(xdv,aGame,aMove.i,aMove.p,aMove.d,function() {\n\t\t\t\t\t\t\t\taGame.MoveShown();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t} else\n\t\t\t\t$this.psAnimateStandup(xdv,aGame,aMove.i,function() {\n\t\t\t\t\taGame.MoveShown();\n\t\t\t\t});\n\t\t}\n\t\tif(penguin.p<0)\n\t\t\tthis.psAnimateDry(xdv,aGame,aMove.i,function() {\n\t\t\t\tPenguinReady();\n\t\t\t});\n\t\telse {\n\t\t\tpsStartPos=penguin.p;\n\t\t\tPenguinReady();\n\t\t}\n\t}\n\t\n\tView.Board.xdPlayedMove = function(xdv, aGame, aMove) {\n\t\taGame.mOldBoard.psPlayedMove(xdv,aGame,aMove);\n\t\treturn false;\n\t}\n\n\t\n})();\n"],"file":"pensoc-view.js"}